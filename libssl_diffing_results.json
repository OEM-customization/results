[{"vendor": "poco", "uuid": "c065e6df-1d22-4687-8ce4-cdf9a6c66834", "main_db": "vendors/poco/c065e6df-1d22-4687-8ce4-cdf9a6c66834/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/poco/c065e6df-1d22-4687-8ce4-cdf9a6c66834/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "poco", "uuid": "bf93b802-023c-4ff6-9d2e-7f1ac51e0f58", "main_db": "vendors/poco/bf93b802-023c-4ff6-9d2e-7f1ac51e0f58/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/poco/bf93b802-023c-4ff6-9d2e-7f1ac51e0f58/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "poco", "uuid": "f261bc19-f80f-41f8-907f-8397c2055f6a", "main_db": "vendors/poco/f261bc19-f80f-41f8-907f-8397c2055f6a/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/poco/f261bc19-f80f-41f8-907f-8397c2055f6a/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "poco", "uuid": "e0439b43-fe86-4fbd-9458-2dd8d24a466d", "main_db": "vendors/poco/e0439b43-fe86-4fbd-9458-2dd8d24a466d/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/poco/e0439b43-fe86-4fbd-9458-2dd8d24a466d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "motorola", "uuid": "2b17fc1c-adbc-4f23-8141-b1bbd8d94fa5", "main_db": "vendors/motorola/2b17fc1c-adbc-4f23-8141-b1bbd8d94fa5/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/motorola/2b17fc1c-adbc-4f23-8141-b1bbd8d94fa5/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "motorola", "uuid": "b5ebab52-ba76-4043-9315-ec6ff2fab9d7", "main_db": "vendors/motorola/b5ebab52-ba76-4043-9315-ec6ff2fab9d7/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/motorola/b5ebab52-ba76-4043-9315-ec6ff2fab9d7/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "motorola", "uuid": "0c781d96-c82a-4c46-b824-38bd534fa095", "main_db": "vendors/motorola/0c781d96-c82a-4c46-b824-38bd534fa095/a291b520ba403d2ee6d585bda5f14261.diaout", "diff_db": "vendors/motorola/0c781d96-c82a-4c46-b824-38bd534fa095/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "motorola", "uuid": "7c8a24c1-5347-45c2-a950-4c0b07d58aaa", "main_db": "vendors/motorola/7c8a24c1-5347-45c2-a950-4c0b07d58aaa/2d5a54ec07018df1dc168850eeb39dcb.diaout", "diff_db": "vendors/motorola/7c8a24c1-5347-45c2-a950-4c0b07d58aaa/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "oppo", "uuid": "4cb50058-2b6f-4ba9-95f9-919df0a10276", "main_db": "vendors/oppo/4cb50058-2b6f-4ba9-95f9-919df0a10276/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/oppo/4cb50058-2b6f-4ba9-95f9-919df0a10276/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oppo", "uuid": "2249d0be-84bd-41a0-94fd-d261cc02f873", "main_db": "vendors/oppo/2249d0be-84bd-41a0-94fd-d261cc02f873/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/oppo/2249d0be-84bd-41a0-94fd-d261cc02f873/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oppo", "uuid": "1059baa9-b605-45b4-be14-4c0b60d04b93", "main_db": "vendors/oppo/1059baa9-b605-45b4-be14-4c0b60d04b93/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/oppo/1059baa9-b605-45b4-be14-4c0b60d04b93/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oppo", "uuid": "a5cbb374-6659-465a-b8be-8719de694304", "main_db": "vendors/oppo/a5cbb374-6659-465a-b8be-8719de694304/b01aab26ca0b68e966eef5d8cbb9c8a4.diaout", "diff_db": "vendors/oppo/a5cbb374-6659-465a-b8be-8719de694304/baseline.diaout", "added_cnt": 4, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "oppo", "uuid": "133226fc-0a77-4fa8-8047-75e9206d57b0", "main_db": "vendors/oppo/133226fc-0a77-4fa8-8047-75e9206d57b0/4c367a8e1f5d891d2ca73cd3dbf2d9f6.diaout", "diff_db": "vendors/oppo/133226fc-0a77-4fa8-8047-75e9206d57b0/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "oppo", "uuid": "98bb8800-73d0-4405-8e6e-e0f3bdfb4791", "main_db": "vendors/oppo/98bb8800-73d0-4405-8e6e-e0f3bdfb4791/06c626bca570ce4a51a8379e6115b357.diaout", "diff_db": "vendors/oppo/98bb8800-73d0-4405-8e6e-e0f3bdfb4791/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "redmi", "uuid": "73706332-a985-40cc-aed1-43b7a0e6a2d5", "main_db": "vendors/redmi/73706332-a985-40cc-aed1-43b7a0e6a2d5/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/redmi/73706332-a985-40cc-aed1-43b7a0e6a2d5/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "redmi", "uuid": "d3c5145c-1645-4716-b7cf-9b123eae9414", "main_db": "vendors/redmi/d3c5145c-1645-4716-b7cf-9b123eae9414/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/redmi/d3c5145c-1645-4716-b7cf-9b123eae9414/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "redmi", "uuid": "b571731a-fbc5-4db6-9292-f22ea401a327", "main_db": "vendors/redmi/b571731a-fbc5-4db6-9292-f22ea401a327/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/redmi/b571731a-fbc5-4db6-9292-f22ea401a327/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "redmi", "uuid": "55303fb0-5e9c-436d-abb2-6dc53b49a809", "main_db": "vendors/redmi/55303fb0-5e9c-436d-abb2-6dc53b49a809/3b465265ae34cd751ab8ce89aaa1b48e.diaout", "diff_db": "vendors/redmi/55303fb0-5e9c-436d-abb2-6dc53b49a809/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "redmi", "uuid": "51967e14-1f20-46fd-9c06-eadd3ae3e568", "main_db": "vendors/redmi/51967e14-1f20-46fd-9c06-eadd3ae3e568/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/redmi/51967e14-1f20-46fd-9c06-eadd3ae3e568/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "redmi", "uuid": "4c7c5762-3261-44c0-9765-54a3dea29c0b", "main_db": "vendors/redmi/4c7c5762-3261-44c0-9765-54a3dea29c0b/ceb0031fc091bc50c1f957d535ffa3da.diaout", "diff_db": "vendors/redmi/4c7c5762-3261-44c0-9765-54a3dea29c0b/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "oneplus", "uuid": "9f63f853-4ef3-4c96-81ba-61351fd680c4", "main_db": "vendors/oneplus/9f63f853-4ef3-4c96-81ba-61351fd680c4/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/oneplus/9f63f853-4ef3-4c96-81ba-61351fd680c4/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oneplus", "uuid": "e238988e-16ec-422b-a9bd-b6a99e548e3e", "main_db": "vendors/oneplus/e238988e-16ec-422b-a9bd-b6a99e548e3e/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/oneplus/e238988e-16ec-422b-a9bd-b6a99e548e3e/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oneplus", "uuid": "9897d456-5f04-490c-b819-cfd6ab3d1a6e", "main_db": "vendors/oneplus/9897d456-5f04-490c-b819-cfd6ab3d1a6e/eb8df12b89cad35bd25f1a4d6f04924e.diaout", "diff_db": "vendors/oneplus/9897d456-5f04-490c-b819-cfd6ab3d1a6e/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "oneplus", "uuid": "e1282e8e-ed43-4d29-8e00-f99db125d5f6", "main_db": "vendors/oneplus/e1282e8e-ed43-4d29-8e00-f99db125d5f6/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/oneplus/e1282e8e-ed43-4d29-8e00-f99db125d5f6/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oneplus", "uuid": "db095ed8-2d48-447f-aa2f-93ef6bfac9e4", "main_db": "vendors/oneplus/db095ed8-2d48-447f-aa2f-93ef6bfac9e4/b01aab26ca0b68e966eef5d8cbb9c8a4.diaout", "diff_db": "vendors/oneplus/db095ed8-2d48-447f-aa2f-93ef6bfac9e4/baseline.diaout", "added_cnt": 4, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "oneplus", "uuid": "104231ba-b963-4b29-8c3a-9c769c05b9ae", "main_db": "vendors/oneplus/104231ba-b963-4b29-8c3a-9c769c05b9ae/06c626bca570ce4a51a8379e6115b357.diaout", "diff_db": "vendors/oneplus/104231ba-b963-4b29-8c3a-9c769c05b9ae/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "lge", "uuid": "711f05d3-0957-4286-9a56-16f0c4659d9d", "main_db": "vendors/lge/711f05d3-0957-4286-9a56-16f0c4659d9d/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/lge/711f05d3-0957-4286-9a56-16f0c4659d9d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lge", "uuid": "87a76c1f-9b2d-4279-a61e-b4e7e3a4bde9", "main_db": "vendors/lge/87a76c1f-9b2d-4279-a61e-b4e7e3a4bde9/d44d2504a4ba5b441200fe09c671617e.diaout", "diff_db": "vendors/lge/87a76c1f-9b2d-4279-a61e-b4e7e3a4bde9/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "lge", "uuid": "2dbb0fab-1201-40eb-843c-388fe36555ff", "main_db": "vendors/lge/2dbb0fab-1201-40eb-843c-388fe36555ff/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/lge/2dbb0fab-1201-40eb-843c-388fe36555ff/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lge", "uuid": "eacd8af6-4d0a-4f81-8632-776a673d04d9", "main_db": "vendors/lge/eacd8af6-4d0a-4f81-8632-776a673d04d9/da5a801954c4cc67bfdec499f71c0dda.diaout", "diff_db": "vendors/lge/eacd8af6-4d0a-4f81-8632-776a673d04d9/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "lge", "uuid": "93db642c-ec7c-4828-b8c3-60436354f5d8", "main_db": "vendors/lge/93db642c-ec7c-4828-b8c3-60436354f5d8/147c485803ca077e675f52991dba1fa0.diaout", "diff_db": "vendors/lge/93db642c-ec7c-4828-b8c3-60436354f5d8/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "iqoo", "uuid": "8caeeee4-35f3-4fbf-ba0d-369ff7ef4238", "main_db": "vendors/iqoo/8caeeee4-35f3-4fbf-ba0d-369ff7ef4238/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/iqoo/8caeeee4-35f3-4fbf-ba0d-369ff7ef4238/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "iqoo", "uuid": "91c7659b-1711-4845-8c5f-d21cae91c0d5", "main_db": "vendors/iqoo/91c7659b-1711-4845-8c5f-d21cae91c0d5/b1f92213f9999e27cbd47cb3565f470b.diaout", "diff_db": "vendors/iqoo/91c7659b-1711-4845-8c5f-d21cae91c0d5/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nokia", "uuid": "d47b2c72-0852-4a36-bcb6-e11b1255ffae", "main_db": "vendors/nokia/d47b2c72-0852-4a36-bcb6-e11b1255ffae/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/nokia/d47b2c72-0852-4a36-bcb6-e11b1255ffae/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nokia", "uuid": "97b4fcb2-622a-4eb3-a3d8-a88fe83d372c", "main_db": "vendors/nokia/97b4fcb2-622a-4eb3-a3d8-a88fe83d372c/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/nokia/97b4fcb2-622a-4eb3-a3d8-a88fe83d372c/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nokia", "uuid": "25914f4c-2291-4996-8085-9e9ee3f37f31", "main_db": "vendors/nokia/25914f4c-2291-4996-8085-9e9ee3f37f31/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/nokia/25914f4c-2291-4996-8085-9e9ee3f37f31/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nokia", "uuid": "267217b4-b217-4aac-9b50-65d47f052b5a", "main_db": "vendors/nokia/267217b4-b217-4aac-9b50-65d47f052b5a/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/nokia/267217b4-b217-4aac-9b50-65d47f052b5a/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "nokia", "uuid": "438a3998-e953-4fb9-ad3f-5b7b019571c2", "main_db": "vendors/nokia/438a3998-e953-4fb9-ad3f-5b7b019571c2/3b465265ae34cd751ab8ce89aaa1b48e.diaout", "diff_db": "vendors/nokia/438a3998-e953-4fb9-ad3f-5b7b019571c2/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "honor", "uuid": "afbb2633-e3d6-4b52-a769-7051602b10cc", "main_db": "vendors/honor/afbb2633-e3d6-4b52-a769-7051602b10cc/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/honor/afbb2633-e3d6-4b52-a769-7051602b10cc/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "honor", "uuid": "2172424d-66de-42ce-acba-a6f2ac543203", "main_db": "vendors/honor/2172424d-66de-42ce-acba-a6f2ac543203/088566c27ba996b201f07a0148d17fe1.diaout", "diff_db": "vendors/honor/2172424d-66de-42ce-acba-a6f2ac543203/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "vivo", "uuid": "194e3e74-c7ca-46ce-9e79-05f3bb184263", "main_db": "vendors/vivo/194e3e74-c7ca-46ce-9e79-05f3bb184263/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/vivo/194e3e74-c7ca-46ce-9e79-05f3bb184263/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "vivo", "uuid": "72596f63-4200-4e53-b600-e728fd01226f", "main_db": "vendors/vivo/72596f63-4200-4e53-b600-e728fd01226f/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/vivo/72596f63-4200-4e53-b600-e728fd01226f/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "vivo", "uuid": "0d1a9c6a-6e8a-4143-91c6-eb335a6ac405", "main_db": "vendors/vivo/0d1a9c6a-6e8a-4143-91c6-eb335a6ac405/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/vivo/0d1a9c6a-6e8a-4143-91c6-eb335a6ac405/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "vivo", "uuid": "c605a0cc-7684-49c0-9a09-fa5e5e109e28", "main_db": "vendors/vivo/c605a0cc-7684-49c0-9a09-fa5e5e109e28/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/vivo/c605a0cc-7684-49c0-9a09-fa5e5e109e28/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "vivo", "uuid": "8ffadb6b-b2c5-4d21-9278-70f49289514d", "main_db": "vendors/vivo/8ffadb6b-b2c5-4d21-9278-70f49289514d/eb8df12b89cad35bd25f1a4d6f04924e.diaout", "diff_db": "vendors/vivo/8ffadb6b-b2c5-4d21-9278-70f49289514d/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "realme", "uuid": "8052f3fc-e485-4361-904c-d2f9d5caab77", "main_db": "vendors/realme/8052f3fc-e485-4361-904c-d2f9d5caab77/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/realme/8052f3fc-e485-4361-904c-d2f9d5caab77/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "realme", "uuid": "372f05d6-ce5a-4cdd-9a69-1b10c0995606", "main_db": "vendors/realme/372f05d6-ce5a-4cdd-9a69-1b10c0995606/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/realme/372f05d6-ce5a-4cdd-9a69-1b10c0995606/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "realme", "uuid": "70070903-24cf-4e7d-beda-541a9eafc80c", "main_db": "vendors/realme/70070903-24cf-4e7d-beda-541a9eafc80c/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/realme/70070903-24cf-4e7d-beda-541a9eafc80c/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "realme", "uuid": "d4ca2c8f-fc5b-4c71-adf8-05b5fd7f46c7", "main_db": "vendors/realme/d4ca2c8f-fc5b-4c71-adf8-05b5fd7f46c7/eb8df12b89cad35bd25f1a4d6f04924e.diaout", "diff_db": "vendors/realme/d4ca2c8f-fc5b-4c71-adf8-05b5fd7f46c7/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "realme", "uuid": "21219a3f-03fa-4b1e-9f19-89a0210fde8d", "main_db": "vendors/realme/21219a3f-03fa-4b1e-9f19-89a0210fde8d/b01aab26ca0b68e966eef5d8cbb9c8a4.diaout", "diff_db": "vendors/realme/21219a3f-03fa-4b1e-9f19-89a0210fde8d/baseline.diaout", "added_cnt": 4, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "realme", "uuid": "5e6975dc-d4b7-4988-bd21-70138d3b0398", "main_db": "vendors/realme/5e6975dc-d4b7-4988-bd21-70138d3b0398/22a03f894ca85800915312cedd95d62c.diaout", "diff_db": "vendors/realme/5e6975dc-d4b7-4988-bd21-70138d3b0398/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "asus", "uuid": "475cec7f-dcff-4127-a851-b93b042af2aa", "main_db": "vendors/asus/475cec7f-dcff-4127-a851-b93b042af2aa/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/asus/475cec7f-dcff-4127-a851-b93b042af2aa/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "asus", "uuid": "1731f9b8-36cd-4370-8f7b-8c631c2e935f", "main_db": "vendors/asus/1731f9b8-36cd-4370-8f7b-8c631c2e935f/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/asus/1731f9b8-36cd-4370-8f7b-8c631c2e935f/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "asus", "uuid": "4ff4e11b-bf66-49c3-8275-93f0d00c07b4", "main_db": "vendors/asus/4ff4e11b-bf66-49c3-8275-93f0d00c07b4/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/asus/4ff4e11b-bf66-49c3-8275-93f0d00c07b4/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "asus", "uuid": "315e0121-b78f-4468-9a91-0488234adfd1", "main_db": "vendors/asus/315e0121-b78f-4468-9a91-0488234adfd1/eb8df12b89cad35bd25f1a4d6f04924e.diaout", "diff_db": "vendors/asus/315e0121-b78f-4468-9a91-0488234adfd1/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "asus", "uuid": "a92eba68-d4d2-44ce-8de7-11358931316c", "main_db": "vendors/asus/a92eba68-d4d2-44ce-8de7-11358931316c/b01aab26ca0b68e966eef5d8cbb9c8a4.diaout", "diff_db": "vendors/asus/a92eba68-d4d2-44ce-8de7-11358931316c/baseline.diaout", "added_cnt": 4, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "asus", "uuid": "8fdd0a51-f397-4ad0-af8f-2702b83bfb3b", "main_db": "vendors/asus/8fdd0a51-f397-4ad0-af8f-2702b83bfb3b/925cd21febb8848c371508b7e39ec626.diaout", "diff_db": "vendors/asus/8fdd0a51-f397-4ad0-af8f-2702b83bfb3b/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tcl", "uuid": "5c3e8799-5f45-450e-a2bf-3e8f9e95f62d", "main_db": "vendors/tcl/5c3e8799-5f45-450e-a2bf-3e8f9e95f62d/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/tcl/5c3e8799-5f45-450e-a2bf-3e8f9e95f62d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tcl", "uuid": "f41f82e0-89fd-4dc4-96a7-9f0a0f248aa1", "main_db": "vendors/tcl/f41f82e0-89fd-4dc4-96a7-9f0a0f248aa1/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/tcl/f41f82e0-89fd-4dc4-96a7-9f0a0f248aa1/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tcl", "uuid": "63bc2b77-8cfd-497a-aaed-860a11b49470", "main_db": "vendors/tcl/63bc2b77-8cfd-497a-aaed-860a11b49470/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/tcl/63bc2b77-8cfd-497a-aaed-860a11b49470/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tcl", "uuid": "a5c37627-16e9-4456-bb95-7a93fc987d71", "main_db": "vendors/tcl/a5c37627-16e9-4456-bb95-7a93fc987d71/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/tcl/a5c37627-16e9-4456-bb95-7a93fc987d71/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "huawei", "uuid": "4773ceeb-186f-4fcb-8ca4-5abf6ec64423", "main_db": "vendors/huawei/4773ceeb-186f-4fcb-8ca4-5abf6ec64423/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/huawei/4773ceeb-186f-4fcb-8ca4-5abf6ec64423/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "huawei", "uuid": "13f53726-af2b-4f34-9226-a445459b5f63", "main_db": "vendors/huawei/13f53726-af2b-4f34-9226-a445459b5f63/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/huawei/13f53726-af2b-4f34-9226-a445459b5f63/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "huawei", "uuid": "e4d1e55e-2847-4651-bcef-9e4160a41561", "main_db": "vendors/huawei/e4d1e55e-2847-4651-bcef-9e4160a41561/088566c27ba996b201f07a0148d17fe1.diaout", "diff_db": "vendors/huawei/e4d1e55e-2847-4651-bcef-9e4160a41561/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "nothing", "uuid": "65335cd8-f1f2-41c8-896a-0a41abca4b0d", "main_db": "vendors/nothing/65335cd8-f1f2-41c8-896a-0a41abca4b0d/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/nothing/65335cd8-f1f2-41c8-896a-0a41abca4b0d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nubia", "uuid": "b56d0fad-750d-4161-b68a-60bef74e9a86", "main_db": "vendors/nubia/b56d0fad-750d-4161-b68a-60bef74e9a86/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/nubia/b56d0fad-750d-4161-b68a-60bef74e9a86/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nubia", "uuid": "e23db48c-d506-4402-a506-6a59ce138673", "main_db": "vendors/nubia/e23db48c-d506-4402-a506-6a59ce138673/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/nubia/e23db48c-d506-4402-a506-6a59ce138673/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nubia", "uuid": "856f93b7-3bff-4ede-9f3c-f546e8faa8a6", "main_db": "vendors/nubia/856f93b7-3bff-4ede-9f3c-f546e8faa8a6/cb58b8f233408ed5338474d2b24dde40.diaout", "diff_db": "vendors/nubia/856f93b7-3bff-4ede-9f3c-f546e8faa8a6/baseline.diaout", "added_cnt": 0, "removed_cnt": 4, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "sony", "uuid": "b04894e9-9308-457c-bca7-4240a714c1f6", "main_db": "vendors/sony/b04894e9-9308-457c-bca7-4240a714c1f6/38da0d587a1d9803d610e44a73593e82.diaout", "diff_db": "vendors/sony/b04894e9-9308-457c-bca7-4240a714c1f6/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "sony", "uuid": "26e8c590-dd74-4a81-bc20-9d20b7620230", "main_db": "vendors/sony/26e8c590-dd74-4a81-bc20-9d20b7620230/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/sony/26e8c590-dd74-4a81-bc20-9d20b7620230/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "sony", "uuid": "2b021aca-5ea8-48bd-afb0-be1f32b75830", "main_db": "vendors/sony/2b021aca-5ea8-48bd-afb0-be1f32b75830/eb8df12b89cad35bd25f1a4d6f04924e.diaout", "diff_db": "vendors/sony/2b021aca-5ea8-48bd-afb0-be1f32b75830/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "sony", "uuid": "169604d2-d750-43e0-8285-240287a663e2", "main_db": "vendors/sony/169604d2-d750-43e0-8285-240287a663e2/d8df3e4c71ec03d9badcb993f8c5b70b.diaout", "diff_db": "vendors/sony/169604d2-d750-43e0-8285-240287a663e2/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "sony", "uuid": "c9c20743-1ee7-4d43-8730-9eb7bfc50cf1", "main_db": "vendors/sony/c9c20743-1ee7-4d43-8730-9eb7bfc50cf1/d5b3ee448c67fe9bd104504e9b3f1827.diaout", "diff_db": "vendors/sony/c9c20743-1ee7-4d43-8730-9eb7bfc50cf1/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "crosscall", "uuid": "2c9ad17b-8714-4199-a88b-6ee5332b2531", "main_db": "vendors/crosscall/2c9ad17b-8714-4199-a88b-6ee5332b2531/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/crosscall/2c9ad17b-8714-4199-a88b-6ee5332b2531/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "crosscall", "uuid": "ff4a1886-a659-4086-83a7-c666a9491b9e", "main_db": "vendors/crosscall/ff4a1886-a659-4086-83a7-c666a9491b9e/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/crosscall/ff4a1886-a659-4086-83a7-c666a9491b9e/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "fairphone", "uuid": "0ff69354-a388-411c-9029-e69b9aaae866", "main_db": "vendors/fairphone/0ff69354-a388-411c-9029-e69b9aaae866/4eef5c720034be43cdb7d45826a62b9a.diaout", "diff_db": "vendors/fairphone/0ff69354-a388-411c-9029-e69b9aaae866/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "fairphone", "uuid": "a7e82d5e-b3ef-44cf-91d1-05bac10b87fe", "main_db": "vendors/fairphone/a7e82d5e-b3ef-44cf-91d1-05bac10b87fe/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/fairphone/a7e82d5e-b3ef-44cf-91d1-05bac10b87fe/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "fairphone", "uuid": "9109f70d-75d9-499c-9a63-10c0a27307e0", "main_db": "vendors/fairphone/9109f70d-75d9-499c-9a63-10c0a27307e0/75db8d8eb8fb3c694340613744dfb5a5.diaout", "diff_db": "vendors/fairphone/9109f70d-75d9-499c-9a63-10c0a27307e0/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "orbic", "uuid": "2b198ade-a4d1-49cc-bbbe-015e32b8ac6e", "main_db": "vendors/orbic/2b198ade-a4d1-49cc-bbbe-015e32b8ac6e/07795463df797f53fe61f2348775dcd5.diaout", "diff_db": "vendors/orbic/2b198ade-a4d1-49cc-bbbe-015e32b8ac6e/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "wiko", "uuid": "42f416e4-3dcc-48ac-9c26-aac8c09c16ed", "main_db": "vendors/wiko/42f416e4-3dcc-48ac-9c26-aac8c09c16ed/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/wiko/42f416e4-3dcc-48ac-9c26-aac8c09c16ed/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "wiko", "uuid": "3510c304-e8fa-4ad0-bf0e-02acc033627e", "main_db": "vendors/wiko/3510c304-e8fa-4ad0-bf0e-02acc033627e/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/wiko/3510c304-e8fa-4ad0-bf0e-02acc033627e/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "wiko", "uuid": "3ab60da8-af38-413c-a8cf-14bb45a7a490", "main_db": "vendors/wiko/3ab60da8-af38-413c-a8cf-14bb45a7a490/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/wiko/3ab60da8-af38-413c-a8cf-14bb45a7a490/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "wiko", "uuid": "9afeae6f-34bc-44ab-a801-2f9d5e6db5b1", "main_db": "vendors/wiko/9afeae6f-34bc-44ab-a801-2f9d5e6db5b1/2b1b52a080fc270f3a20b57f1e1427fa.diaout", "diff_db": "vendors/wiko/9afeae6f-34bc-44ab-a801-2f9d5e6db5b1/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "wiko", "uuid": "66443f0e-b53a-4859-a349-f1dba76da9b2", "main_db": "vendors/wiko/66443f0e-b53a-4859-a349-f1dba76da9b2/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/wiko/66443f0e-b53a-4859-a349-f1dba76da9b2/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "zte", "uuid": "c0e8bb08-59a8-44a0-88a5-fbff3ba5da54", "main_db": "vendors/zte/c0e8bb08-59a8-44a0-88a5-fbff3ba5da54/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/zte/c0e8bb08-59a8-44a0-88a5-fbff3ba5da54/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "zte", "uuid": "12f99eed-1384-4664-9cac-4c3babf3f11b", "main_db": "vendors/zte/12f99eed-1384-4664-9cac-4c3babf3f11b/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/zte/12f99eed-1384-4664-9cac-4c3babf3f11b/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "zte", "uuid": "5f4c50ed-dd65-4262-91bc-69365b3c159f", "main_db": "vendors/zte/5f4c50ed-dd65-4262-91bc-69365b3c159f/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/zte/5f4c50ed-dd65-4262-91bc-69365b3c159f/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "tecno", "uuid": "6b9e2366-be71-44a5-97af-9816386a449f", "main_db": "vendors/tecno/6b9e2366-be71-44a5-97af-9816386a449f/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/tecno/6b9e2366-be71-44a5-97af-9816386a449f/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tecno", "uuid": "81253901-4e32-4821-a27e-6682818f1116", "main_db": "vendors/tecno/81253901-4e32-4821-a27e-6682818f1116/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/tecno/81253901-4e32-4821-a27e-6682818f1116/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tecno", "uuid": "4a4a154c-314e-4ef4-98ba-fdf8908e8fe7", "main_db": "vendors/tecno/4a4a154c-314e-4ef4-98ba-fdf8908e8fe7/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/tecno/4a4a154c-314e-4ef4-98ba-fdf8908e8fe7/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tecno", "uuid": "59492330-5136-4ce5-a9f3-ebccea05466e", "main_db": "vendors/tecno/59492330-5136-4ce5-a9f3-ebccea05466e/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/tecno/59492330-5136-4ce5-a9f3-ebccea05466e/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "tecno", "uuid": "0bf50a63-c245-45dd-9f45-0d17024ac5cf", "main_db": "vendors/tecno/0bf50a63-c245-45dd-9f45-0d17024ac5cf/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/tecno/0bf50a63-c245-45dd-9f45-0d17024ac5cf/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "onn", "uuid": "f8755bdc-e62e-4422-8508-f79810340fbd", "main_db": "vendors/onn/f8755bdc-e62e-4422-8508-f79810340fbd/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/onn/f8755bdc-e62e-4422-8508-f79810340fbd/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "onn", "uuid": "0f69d5a6-4431-4e68-9d56-1432058e2489", "main_db": "vendors/onn/0f69d5a6-4431-4e68-9d56-1432058e2489/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/onn/0f69d5a6-4431-4e68-9d56-1432058e2489/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "onn", "uuid": "74d17304-d20e-4a5d-9625-7943566be499", "main_db": "vendors/onn/74d17304-d20e-4a5d-9625-7943566be499/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/onn/74d17304-d20e-4a5d-9625-7943566be499/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "onn", "uuid": "08dd0365-75fa-4c9c-80f1-bba97b6cfede", "main_db": "vendors/onn/08dd0365-75fa-4c9c-80f1-bba97b6cfede/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/onn/08dd0365-75fa-4c9c-80f1-bba97b6cfede/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "onn", "uuid": "2d2ac960-3ed3-45c5-a66f-346fa872bf4a", "main_db": "vendors/onn/2d2ac960-3ed3-45c5-a66f-346fa872bf4a/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/onn/2d2ac960-3ed3-45c5-a66f-346fa872bf4a/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "att", "uuid": "ae3a06d0-fc33-4449-b5ca-f8c19979894f", "main_db": "vendors/att/ae3a06d0-fc33-4449-b5ca-f8c19979894f/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/att/ae3a06d0-fc33-4449-b5ca-f8c19979894f/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "att", "uuid": "b66eb4db-2875-46f9-a2e7-eb5b4286fdc4", "main_db": "vendors/att/b66eb4db-2875-46f9-a2e7-eb5b4286fdc4/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/att/b66eb4db-2875-46f9-a2e7-eb5b4286fdc4/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "att", "uuid": "8bf09d8a-4f1a-4d4e-b7cf-8c92ae9e68b1", "main_db": "vendors/att/8bf09d8a-4f1a-4d4e-b7cf-8c92ae9e68b1/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/att/8bf09d8a-4f1a-4d4e-b7cf-8c92ae9e68b1/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "att", "uuid": "080821f2-c2f8-4e92-9042-96a1251e734c", "main_db": "vendors/att/080821f2-c2f8-4e92-9042-96a1251e734c/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/att/080821f2-c2f8-4e92-9042-96a1251e734c/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "alldocube", "uuid": "96bf75a6-2696-47dc-a183-4677e32e2227", "main_db": "vendors/alldocube/96bf75a6-2696-47dc-a183-4677e32e2227/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/alldocube/96bf75a6-2696-47dc-a183-4677e32e2227/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "alldocube", "uuid": "d0e10c6a-dbba-4383-9aeb-85f49c825341", "main_db": "vendors/alldocube/d0e10c6a-dbba-4383-9aeb-85f49c825341/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/alldocube/d0e10c6a-dbba-4383-9aeb-85f49c825341/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blu", "uuid": "f6e6bb0f-58cc-4ee5-8234-c3adae095d98", "main_db": "vendors/blu/f6e6bb0f-58cc-4ee5-8234-c3adae095d98/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/blu/f6e6bb0f-58cc-4ee5-8234-c3adae095d98/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blu", "uuid": "842abd2e-7ba6-40be-a56b-14b436d1c099", "main_db": "vendors/blu/842abd2e-7ba6-40be-a56b-14b436d1c099/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/blu/842abd2e-7ba6-40be-a56b-14b436d1c099/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blu", "uuid": "f5a45606-38eb-4afb-a3b1-2a0c2cceeda2", "main_db": "vendors/blu/f5a45606-38eb-4afb-a3b1-2a0c2cceeda2/5f61d0e8387e964503ece10267872907.diaout", "diff_db": "vendors/blu/f5a45606-38eb-4afb-a3b1-2a0c2cceeda2/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": []}, {"vendor": "blu", "uuid": "0247cb91-3a5a-47d8-8cc1-5718d5bcc791", "main_db": "vendors/blu/0247cb91-3a5a-47d8-8cc1-5718d5bcc791/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/blu/0247cb91-3a5a-47d8-8cc1-5718d5bcc791/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "infinix", "uuid": "c2f409ad-0ede-4e6f-bf49-7c322f853615", "main_db": "vendors/infinix/c2f409ad-0ede-4e6f-bf49-7c322f853615/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/infinix/c2f409ad-0ede-4e6f-bf49-7c322f853615/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "infinix", "uuid": "2d3e5148-fd2b-48b0-aa4b-8eb16b43ca55", "main_db": "vendors/infinix/2d3e5148-fd2b-48b0-aa4b-8eb16b43ca55/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/infinix/2d3e5148-fd2b-48b0-aa4b-8eb16b43ca55/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "infinix", "uuid": "cb83dcd3-a8ea-4aa3-bdf2-45fbabccd4d0", "main_db": "vendors/infinix/cb83dcd3-a8ea-4aa3-bdf2-45fbabccd4d0/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/infinix/cb83dcd3-a8ea-4aa3-bdf2-45fbabccd4d0/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "infinix", "uuid": "452fd351-4e5f-4b89-ba07-19ab48bbfb78", "main_db": "vendors/infinix/452fd351-4e5f-4b89-ba07-19ab48bbfb78/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/infinix/452fd351-4e5f-4b89-ba07-19ab48bbfb78/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "infinix", "uuid": "19e4f16e-cdc0-441e-b2c9-919b70958f4b", "main_db": "vendors/infinix/19e4f16e-cdc0-441e-b2c9-919b70958f4b/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/infinix/19e4f16e-cdc0-441e-b2c9-919b70958f4b/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "umidigi", "uuid": "73fd8d4c-8cb9-4512-98bd-3fa9dc8a34ea", "main_db": "vendors/umidigi/73fd8d4c-8cb9-4512-98bd-3fa9dc8a34ea/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/umidigi/73fd8d4c-8cb9-4512-98bd-3fa9dc8a34ea/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "umidigi", "uuid": "775a66ec-c254-4f9f-809b-a612d2e3440b", "main_db": "vendors/umidigi/775a66ec-c254-4f9f-809b-a612d2e3440b/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/umidigi/775a66ec-c254-4f9f-809b-a612d2e3440b/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "umidigi", "uuid": "5b804db0-ea2e-41f3-91e8-32c24b0e4956", "main_db": "vendors/umidigi/5b804db0-ea2e-41f3-91e8-32c24b0e4956/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/umidigi/5b804db0-ea2e-41f3-91e8-32c24b0e4956/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "umidigi", "uuid": "267f13b9-efdf-4154-bd93-af55a7f47ec1", "main_db": "vendors/umidigi/267f13b9-efdf-4154-bd93-af55a7f47ec1/6cecd67a97534cc65bf59b2a3d3a9c8c.diaout", "diff_db": "vendors/umidigi/267f13b9-efdf-4154-bd93-af55a7f47ec1/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blackview", "uuid": "b5934a5f-6d60-43d6-9d5e-93ac43c72fef", "main_db": "vendors/blackview/b5934a5f-6d60-43d6-9d5e-93ac43c72fef/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/blackview/b5934a5f-6d60-43d6-9d5e-93ac43c72fef/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blackview", "uuid": "e5501331-1a76-4229-a0e6-1d1fe9290c3a", "main_db": "vendors/blackview/e5501331-1a76-4229-a0e6-1d1fe9290c3a/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/blackview/e5501331-1a76-4229-a0e6-1d1fe9290c3a/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blackview", "uuid": "a4db0a2c-a780-4e1c-a689-d6484da8fdc6", "main_db": "vendors/blackview/a4db0a2c-a780-4e1c-a689-d6484da8fdc6/088e694f56accdd62ceffcc9eda0f299.diaout", "diff_db": "vendors/blackview/a4db0a2c-a780-4e1c-a689-d6484da8fdc6/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blackview", "uuid": "0fbedae7-4ae7-4721-bd55-06c499b0c8d0", "main_db": "vendors/blackview/0fbedae7-4ae7-4721-bd55-06c499b0c8d0/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/blackview/0fbedae7-4ae7-4721-bd55-06c499b0c8d0/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "blackview", "uuid": "82c28504-3b9f-47f7-bc04-04860fed42f1", "main_db": "vendors/blackview/82c28504-3b9f-47f7-bc04-04860fed42f1/d5856e2da0103e0fe4add6a7e17e6ca3.diaout", "diff_db": "vendors/blackview/82c28504-3b9f-47f7-bc04-04860fed42f1/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "alcatel", "uuid": "f7ca992e-d2cf-40cf-bcb1-ad3175613c07", "main_db": "vendors/alcatel/f7ca992e-d2cf-40cf-bcb1-ad3175613c07/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/alcatel/f7ca992e-d2cf-40cf-bcb1-ad3175613c07/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "alcatel", "uuid": "a9d28aba-0296-4e1c-9227-1ca211560bb3", "main_db": "vendors/alcatel/a9d28aba-0296-4e1c-9227-1ca211560bb3/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/alcatel/a9d28aba-0296-4e1c-9227-1ca211560bb3/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "alcatel", "uuid": "9c82fce9-6d71-4966-a70c-15ecf5f0598b", "main_db": "vendors/alcatel/9c82fce9-6d71-4966-a70c-15ecf5f0598b/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/alcatel/9c82fce9-6d71-4966-a70c-15ecf5f0598b/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "cricket", "uuid": "0221e42e-d8c0-473e-a827-a719ce3e3767", "main_db": "vendors/cricket/0221e42e-d8c0-473e-a827-a719ce3e3767/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/cricket/0221e42e-d8c0-473e-a827-a719ce3e3767/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cricket", "uuid": "c6db30ae-cfec-4e47-804c-2cc78943c7d4", "main_db": "vendors/cricket/c6db30ae-cfec-4e47-804c-2cc78943c7d4/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/cricket/c6db30ae-cfec-4e47-804c-2cc78943c7d4/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cricket", "uuid": "602b5e26-6985-4a24-a9db-a9806fb188dd", "main_db": "vendors/cricket/602b5e26-6985-4a24-a9db-a9806fb188dd/2b1b52a080fc270f3a20b57f1e1427fa.diaout", "diff_db": "vendors/cricket/602b5e26-6985-4a24-a9db-a9806fb188dd/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cricket", "uuid": "21d51205-0189-4f3c-9cc7-d82c6418e627", "main_db": "vendors/cricket/21d51205-0189-4f3c-9cc7-d82c6418e627/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/cricket/21d51205-0189-4f3c-9cc7-d82c6418e627/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cricket", "uuid": "06946222-2321-41f0-90a4-5ef4d03c4eb0", "main_db": "vendors/cricket/06946222-2321-41f0-90a4-5ef4d03c4eb0/829c6ddd7888f3060b620df38720dcbf.diaout", "diff_db": "vendors/cricket/06946222-2321-41f0-90a4-5ef4d03c4eb0/baseline.diaout", "added_cnt": 9, "removed_cnt": 0, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "sprintf(char *,char const* {pass_object_size1},...)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print", "__imp___vsprintf_chk"], "removed_funcs": []}, {"vendor": "reeder", "uuid": "16a3cd3e-a27e-4f68-9e1d-499104c68da6", "main_db": "vendors/reeder/16a3cd3e-a27e-4f68-9e1d-499104c68da6/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/reeder/16a3cd3e-a27e-4f68-9e1d-499104c68da6/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "black_fox", "uuid": "373ec83d-e7f3-441f-b717-9812913a8654", "main_db": "vendors/black_fox/373ec83d-e7f3-441f-b717-9812913a8654/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/black_fox/373ec83d-e7f3-441f-b717-9812913a8654/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "chuwi", "uuid": "6666efae-fc2b-4007-9252-50fc5af28496", "main_db": "vendors/chuwi/6666efae-fc2b-4007-9252-50fc5af28496/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/chuwi/6666efae-fc2b-4007-9252-50fc5af28496/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "chuwi", "uuid": "3ca41e8f-98d3-421a-8f0f-14902ddefcb8", "main_db": "vendors/chuwi/3ca41e8f-98d3-421a-8f0f-14902ddefcb8/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/chuwi/3ca41e8f-98d3-421a-8f0f-14902ddefcb8/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "ulefone", "uuid": "bc8eb88c-fd08-43fc-9409-9725a059a072", "main_db": "vendors/ulefone/bc8eb88c-fd08-43fc-9409-9725a059a072/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/ulefone/bc8eb88c-fd08-43fc-9409-9725a059a072/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "ulefone", "uuid": "f80faf5d-2f7e-4310-b03e-0e58541a01fa", "main_db": "vendors/ulefone/f80faf5d-2f7e-4310-b03e-0e58541a01fa/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/ulefone/f80faf5d-2f7e-4310-b03e-0e58541a01fa/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "ulefone", "uuid": "966d68d7-a2a4-48fb-b767-32c3664ec787", "main_db": "vendors/ulefone/966d68d7-a2a4-48fb-b767-32c3664ec787/a19fe4b5ca4cdcd36966b7a1b5f99ce7.diaout", "diff_db": "vendors/ulefone/966d68d7-a2a4-48fb-b767-32c3664ec787/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "ulefone", "uuid": "5627522b-1b96-44d6-ac3a-b6dad87c7527", "main_db": "vendors/ulefone/5627522b-1b96-44d6-ac3a-b6dad87c7527/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/ulefone/5627522b-1b96-44d6-ac3a-b6dad87c7527/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "ulefone", "uuid": "1be0eba6-6d77-4aca-a3b9-094847167058", "main_db": "vendors/ulefone/1be0eba6-6d77-4aca-a3b9-094847167058/d5856e2da0103e0fe4add6a7e17e6ca3.diaout", "diff_db": "vendors/ulefone/1be0eba6-6d77-4aca-a3b9-094847167058/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "doogee", "uuid": "e08af295-5c69-4290-a9b9-88fb25722754", "main_db": "vendors/doogee/e08af295-5c69-4290-a9b9-88fb25722754/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/doogee/e08af295-5c69-4290-a9b9-88fb25722754/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "doogee", "uuid": "06ac645d-c6c6-42dc-b4b8-606fceff0af2", "main_db": "vendors/doogee/06ac645d-c6c6-42dc-b4b8-606fceff0af2/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/doogee/06ac645d-c6c6-42dc-b4b8-606fceff0af2/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "doogee", "uuid": "67f3a708-f888-47d8-8c10-c5753986fb5d", "main_db": "vendors/doogee/67f3a708-f888-47d8-8c10-c5753986fb5d/a19fe4b5ca4cdcd36966b7a1b5f99ce7.diaout", "diff_db": "vendors/doogee/67f3a708-f888-47d8-8c10-c5753986fb5d/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "doogee", "uuid": "3be02ddc-86ff-406b-9b87-cd67f1ae05b7", "main_db": "vendors/doogee/3be02ddc-86ff-406b-9b87-cd67f1ae05b7/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/doogee/3be02ddc-86ff-406b-9b87-cd67f1ae05b7/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "doogee", "uuid": "8dcfec7b-984c-4d2b-9447-2ed9bfbfef78", "main_db": "vendors/doogee/8dcfec7b-984c-4d2b-9447-2ed9bfbfef78/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/doogee/8dcfec7b-984c-4d2b-9447-2ed9bfbfef78/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "t-mobile", "uuid": "8146defe-d6a3-4ac2-be50-b1a84ab9ae07", "main_db": "vendors/t-mobile/8146defe-d6a3-4ac2-be50-b1a84ab9ae07/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/t-mobile/8146defe-d6a3-4ac2-be50-b1a84ab9ae07/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "t-mobile", "uuid": "5f01dbaf-1dee-4fb5-a7c3-1d81e180c14d", "main_db": "vendors/t-mobile/5f01dbaf-1dee-4fb5-a7c3-1d81e180c14d/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/t-mobile/5f01dbaf-1dee-4fb5-a7c3-1d81e180c14d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "t-mobile", "uuid": "7d055e05-939e-4901-83d3-200c65eb7715", "main_db": "vendors/t-mobile/7d055e05-939e-4901-83d3-200c65eb7715/88d1dcaf923e4a8b67b7aeaa40e47696.diaout", "diff_db": "vendors/t-mobile/7d055e05-939e-4901-83d3-200c65eb7715/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "foxxd", "uuid": "3a11db0d-8ca8-42f9-9908-39c03a416937", "main_db": "vendors/foxxd/3a11db0d-8ca8-42f9-9908-39c03a416937/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/foxxd/3a11db0d-8ca8-42f9-9908-39c03a416937/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cloud", "uuid": "1eb3f7ad-7942-43fa-a317-10a5f59a30ff", "main_db": "vendors/cloud/1eb3f7ad-7942-43fa-a317-10a5f59a30ff/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/cloud/1eb3f7ad-7942-43fa-a317-10a5f59a30ff/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "zeeker", "uuid": "4264a08d-63e0-44ca-ab63-b6844e50ecfe", "main_db": "vendors/zeeker/4264a08d-63e0-44ca-ab63-b6844e50ecfe/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/zeeker/4264a08d-63e0-44ca-ab63-b6844e50ecfe/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "unihertz", "uuid": "35700649-435f-4977-8209-907d7f2f0b67", "main_db": "vendors/unihertz/35700649-435f-4977-8209-907d7f2f0b67/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/unihertz/35700649-435f-4977-8209-907d7f2f0b67/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "unihertz", "uuid": "9626f172-9242-498c-a611-f50aef381d5b", "main_db": "vendors/unihertz/9626f172-9242-498c-a611-f50aef381d5b/b8cdc7fff5eb78e4890b594c17a64cbe.diaout", "diff_db": "vendors/unihertz/9626f172-9242-498c-a611-f50aef381d5b/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "unihertz", "uuid": "4062762e-4cd5-467c-a69e-e35defa70913", "main_db": "vendors/unihertz/4062762e-4cd5-467c-a69e-e35defa70913/ec674e391439f36ee9b561cc2970f181.diaout", "diff_db": "vendors/unihertz/4062762e-4cd5-467c-a69e-e35defa70913/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cubot", "uuid": "e978bc0d-cac9-4762-9286-a57936b8a2a4", "main_db": "vendors/cubot/e978bc0d-cac9-4762-9286-a57936b8a2a4/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/cubot/e978bc0d-cac9-4762-9286-a57936b8a2a4/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cubot", "uuid": "d8d2bd07-5b56-401b-b159-e53c40e3f5eb", "main_db": "vendors/cubot/d8d2bd07-5b56-401b-b159-e53c40e3f5eb/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/cubot/d8d2bd07-5b56-401b-b159-e53c40e3f5eb/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cubot", "uuid": "ea289c26-a3db-4bb7-a2d8-1ad56c8c649d", "main_db": "vendors/cubot/ea289c26-a3db-4bb7-a2d8-1ad56c8c649d/a19fe4b5ca4cdcd36966b7a1b5f99ce7.diaout", "diff_db": "vendors/cubot/ea289c26-a3db-4bb7-a2d8-1ad56c8c649d/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "cubot", "uuid": "29a15a73-0e3f-43cf-8a9a-23bbceeb6697", "main_db": "vendors/cubot/29a15a73-0e3f-43cf-8a9a-23bbceeb6697/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/cubot/29a15a73-0e3f-43cf-8a9a-23bbceeb6697/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "vortex", "uuid": "556a1ae1-df20-4aa5-9764-c40948413306", "main_db": "vendors/vortex/556a1ae1-df20-4aa5-9764-c40948413306/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/vortex/556a1ae1-df20-4aa5-9764-c40948413306/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "nuu", "uuid": "e4f47c44-bd87-418b-9b9c-b3af6f824221", "main_db": "vendors/nuu/e4f47c44-bd87-418b-9b9c-b3af6f824221/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/nuu/e4f47c44-bd87-418b-9b9c-b3af6f824221/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "sky_devices", "uuid": "0fbc3568-9880-473e-bd78-4d2907d4d057", "main_db": "vendors/sky_devices/0fbc3568-9880-473e-bd78-4d2907d4d057/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/sky_devices/0fbc3568-9880-473e-bd78-4d2907d4d057/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "sky_devices", "uuid": "27f85ad4-d02b-4e84-927f-9346c12b2f02", "main_db": "vendors/sky_devices/27f85ad4-d02b-4e84-927f-9346c12b2f02/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/sky_devices/27f85ad4-d02b-4e84-927f-9346c12b2f02/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "yqsavior", "uuid": "e2686470-d866-4019-80d8-ea351a1c3f82", "main_db": "vendors/yqsavior/e2686470-d866-4019-80d8-ea351a1c3f82/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/yqsavior/e2686470-d866-4019-80d8-ea351a1c3f82/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "maxwest", "uuid": "5551f486-3d01-4962-b17c-0312a5ca90b2", "main_db": "vendors/maxwest/5551f486-3d01-4962-b17c-0312a5ca90b2/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/maxwest/5551f486-3d01-4962-b17c-0312a5ca90b2/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "maxwest", "uuid": "9f7bd38f-ef79-4b03-848f-b6e935191d7a", "main_db": "vendors/maxwest/9f7bd38f-ef79-4b03-848f-b6e935191d7a/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/maxwest/9f7bd38f-ef79-4b03-848f-b6e935191d7a/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "itel", "uuid": "af685ba4-7987-4c80-8af2-cea0dd2337f8", "main_db": "vendors/itel/af685ba4-7987-4c80-8af2-cea0dd2337f8/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/itel/af685ba4-7987-4c80-8af2-cea0dd2337f8/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "itel", "uuid": "2cdb7840-e6c9-4639-8ed3-8c3705e54c1f", "main_db": "vendors/itel/2cdb7840-e6c9-4639-8ed3-8c3705e54c1f/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/itel/2cdb7840-e6c9-4639-8ed3-8c3705e54c1f/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "itel", "uuid": "a85823c7-7f2d-4b9b-9593-8f70b81a0f1b", "main_db": "vendors/itel/a85823c7-7f2d-4b9b-9593-8f70b81a0f1b/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/itel/a85823c7-7f2d-4b9b-9593-8f70b81a0f1b/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "sky", "uuid": "7ce43876-5d22-46c4-b4df-846d07491d5e", "main_db": "vendors/sky/7ce43876-5d22-46c4-b4df-846d07491d5e/a621e44901d8da7a57f690b23642605a.diaout", "diff_db": "vendors/sky/7ce43876-5d22-46c4-b4df-846d07491d5e/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "omix", "uuid": "5caf0249-8aa3-4c93-867f-690c325c61b0", "main_db": "vendors/omix/5caf0249-8aa3-4c93-867f-690c325c61b0/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/omix/5caf0249-8aa3-4c93-867f-690c325c61b0/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "omix", "uuid": "f7f3f4b8-5e06-455e-9d9a-9c7269723aec", "main_db": "vendors/omix/f7f3f4b8-5e06-455e-9d9a-9c7269723aec/2b1b52a080fc270f3a20b57f1e1427fa.diaout", "diff_db": "vendors/omix/f7f3f4b8-5e06-455e-9d9a-9c7269723aec/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "woxter", "uuid": "cd31f718-c33d-4827-b6ee-35a90ec84fe7", "main_db": "vendors/woxter/cd31f718-c33d-4827-b6ee-35a90ec84fe7/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/woxter/cd31f718-c33d-4827-b6ee-35a90ec84fe7/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "woxter", "uuid": "041afe80-f8a9-4c43-a5c8-a5fb3da0dcdb", "main_db": "vendors/woxter/041afe80-f8a9-4c43-a5c8-a5fb3da0dcdb/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/woxter/041afe80-f8a9-4c43-a5c8-a5fb3da0dcdb/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "kruger_matz", "uuid": "04c19a9e-6705-4332-914d-28e3679a0f24", "main_db": "vendors/kruger_matz/04c19a9e-6705-4332-914d-28e3679a0f24/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/kruger_matz/04c19a9e-6705-4332-914d-28e3679a0f24/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lenovo", "uuid": "8a5e0125-1297-4f23-b89d-1eec5a3d81d7", "main_db": "vendors/lenovo/8a5e0125-1297-4f23-b89d-1eec5a3d81d7/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/lenovo/8a5e0125-1297-4f23-b89d-1eec5a3d81d7/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lenovo", "uuid": "f8165146-de2c-4a89-abc5-aa3b13a80298", "main_db": "vendors/lenovo/f8165146-de2c-4a89-abc5-aa3b13a80298/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/lenovo/f8165146-de2c-4a89-abc5-aa3b13a80298/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lenovo", "uuid": "f70de9b4-17e4-4f24-924c-ce11bcabd00d", "main_db": "vendors/lenovo/f70de9b4-17e4-4f24-924c-ce11bcabd00d/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/lenovo/f70de9b4-17e4-4f24-924c-ce11bcabd00d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lenovo", "uuid": "06d11c9f-4447-4d48-b27f-973b084002d0", "main_db": "vendors/lenovo/06d11c9f-4447-4d48-b27f-973b084002d0/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/lenovo/06d11c9f-4447-4d48-b27f-973b084002d0/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "lenovo", "uuid": "a1b1e77e-dd6a-44dd-a343-68d8530fd448", "main_db": "vendors/lenovo/a1b1e77e-dd6a-44dd-a343-68d8530fd448/b01aab26ca0b68e966eef5d8cbb9c8a4.diaout", "diff_db": "vendors/lenovo/a1b1e77e-dd6a-44dd-a343-68d8530fd448/baseline.diaout", "added_cnt": 4, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "vsmart", "uuid": "99cfc7e1-178d-4c89-81e2-d2b657d0edff", "main_db": "vendors/vsmart/99cfc7e1-178d-4c89-81e2-d2b657d0edff/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/vsmart/99cfc7e1-178d-4c89-81e2-d2b657d0edff/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "vsmart", "uuid": "f3569c34-2005-46e5-b856-9b3fc9404a74", "main_db": "vendors/vsmart/f3569c34-2005-46e5-b856-9b3fc9404a74/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/vsmart/f3569c34-2005-46e5-b856-9b3fc9404a74/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "vsmart", "uuid": "1246253b-fe4c-4873-9f70-954c62e55c58", "main_db": "vendors/vsmart/1246253b-fe4c-4873-9f70-954c62e55c58/5808a1f71f7404c906b03657bae732aa.diaout", "diff_db": "vendors/vsmart/1246253b-fe4c-4873-9f70-954c62e55c58/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "vsmart", "uuid": "34dfc07a-d5a8-4529-812f-535c7cfa18bf", "main_db": "vendors/vsmart/34dfc07a-d5a8-4529-812f-535c7cfa18bf/ceb0031fc091bc50c1f957d535ffa3da.diaout", "diff_db": "vendors/vsmart/34dfc07a-d5a8-4529-812f-535c7cfa18bf/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "vsmart", "uuid": "54ddf3fd-49e7-44b4-8576-ef2a139aec5d", "main_db": "vendors/vsmart/54ddf3fd-49e7-44b4-8576-ef2a139aec5d/b01aab26ca0b68e966eef5d8cbb9c8a4.diaout", "diff_db": "vendors/vsmart/54ddf3fd-49e7-44b4-8576-ef2a139aec5d/baseline.diaout", "added_cnt": 4, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "visible", "uuid": "a1719556-b357-4905-b68f-7c2f06b2d99d", "main_db": "vendors/visible/a1719556-b357-4905-b68f-7c2f06b2d99d/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/visible/a1719556-b357-4905-b68f-7c2f06b2d99d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "agm", "uuid": "beaebfc8-b73b-4df3-8af9-f26c1b2fe235", "main_db": "vendors/agm/beaebfc8-b73b-4df3-8af9-f26c1b2fe235/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/agm/beaebfc8-b73b-4df3-8af9-f26c1b2fe235/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "agm", "uuid": "d671ddee-934d-4f7c-8b1f-e5b9c623f77a", "main_db": "vendors/agm/d671ddee-934d-4f7c-8b1f-e5b9c623f77a/2b1b52a080fc270f3a20b57f1e1427fa.diaout", "diff_db": "vendors/agm/d671ddee-934d-4f7c-8b1f-e5b9c623f77a/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "gm", "uuid": "c2a3e557-2a59-4dfe-b9b5-07f63b0d00cc", "main_db": "vendors/gm/c2a3e557-2a59-4dfe-b9b5-07f63b0d00cc/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/gm/c2a3e557-2a59-4dfe-b9b5-07f63b0d00cc/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "gm", "uuid": "364fe3cc-dddf-4721-b6ec-1de306924b8e", "main_db": "vendors/gm/364fe3cc-dddf-4721-b6ec-1de306924b8e/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/gm/364fe3cc-dddf-4721-b6ec-1de306924b8e/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "gm", "uuid": "da6608a5-3da0-4eb4-887d-0d7f060cc26e", "main_db": "vendors/gm/da6608a5-3da0-4eb4-887d-0d7f060cc26e/088e694f56accdd62ceffcc9eda0f299.diaout", "diff_db": "vendors/gm/da6608a5-3da0-4eb4-887d-0d7f060cc26e/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "gm", "uuid": "faf93336-f307-4ac0-b798-cea138b70113", "main_db": "vendors/gm/faf93336-f307-4ac0-b798-cea138b70113/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/gm/faf93336-f307-4ac0-b798-cea138b70113/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "gm", "uuid": "18d07c18-9c90-4e3a-ab9c-d0f6890c5ec6", "main_db": "vendors/gm/18d07c18-9c90-4e3a-ab9c-d0f6890c5ec6/4c367a8e1f5d891d2ca73cd3dbf2d9f6.diaout", "diff_db": "vendors/gm/18d07c18-9c90-4e3a-ab9c-d0f6890c5ec6/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "oukitel", "uuid": "235131e2-4263-4e15-b5ef-d58701162739", "main_db": "vendors/oukitel/235131e2-4263-4e15-b5ef-d58701162739/5ae3b4c450cc998511780e75be19b667.diaout", "diff_db": "vendors/oukitel/235131e2-4263-4e15-b5ef-d58701162739/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oukitel", "uuid": "f7d5912d-1aea-4b18-9f8f-1fa16a9fb524", "main_db": "vendors/oukitel/f7d5912d-1aea-4b18-9f8f-1fa16a9fb524/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/oukitel/f7d5912d-1aea-4b18-9f8f-1fa16a9fb524/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "oukitel", "uuid": "11d86434-e769-4460-8871-a2fa81afc403", "main_db": "vendors/oukitel/11d86434-e769-4460-8871-a2fa81afc403/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/oukitel/11d86434-e769-4460-8871-a2fa81afc403/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "oukitel", "uuid": "25ee9c10-0ed7-46a1-9e04-470ae8071bb5", "main_db": "vendors/oukitel/25ee9c10-0ed7-46a1-9e04-470ae8071bb5/6cecd67a97534cc65bf59b2a3d3a9c8c.diaout", "diff_db": "vendors/oukitel/25ee9c10-0ed7-46a1-9e04-470ae8071bb5/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "philco", "uuid": "a92471f7-2e0d-4675-9e0a-9e1496cb3386", "main_db": "vendors/philco/a92471f7-2e0d-4675-9e0a-9e1496cb3386/088e694f56accdd62ceffcc9eda0f299.diaout", "diff_db": "vendors/philco/a92471f7-2e0d-4675-9e0a-9e1496cb3386/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "philco", "uuid": "2045b0c3-860b-41a9-a22e-9065b9267765", "main_db": "vendors/philco/2045b0c3-860b-41a9-a22e-9065b9267765/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/philco/2045b0c3-860b-41a9-a22e-9065b9267765/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "advan", "uuid": "4d38d251-3a4d-4a9d-9e33-7377c563e911", "main_db": "vendors/advan/4d38d251-3a4d-4a9d-9e33-7377c563e911/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/advan/4d38d251-3a4d-4a9d-9e33-7377c563e911/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "advan", "uuid": "34d25363-92be-4254-8ccb-c090f176202f", "main_db": "vendors/advan/34d25363-92be-4254-8ccb-c090f176202f/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/advan/34d25363-92be-4254-8ccb-c090f176202f/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "toscido", "uuid": "c70b1fca-e9ba-4847-aed5-0749e4131df2", "main_db": "vendors/toscido/c70b1fca-e9ba-4847-aed5-0749e4131df2/c182c43eb75bdff6d306e3baa5d20259.diaout", "diff_db": "vendors/toscido/c70b1fca-e9ba-4847-aed5-0749e4131df2/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "symphony", "uuid": "f3625693-aa60-4077-959b-9ce777154a34", "main_db": "vendors/symphony/f3625693-aa60-4077-959b-9ce777154a34/5f61d0e8387e964503ece10267872907.diaout", "diff_db": "vendors/symphony/f3625693-aa60-4077-959b-9ce777154a34/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": []}, {"vendor": "symphony", "uuid": "3b87dc5a-2261-403c-93c6-b1a27e278b0c", "main_db": "vendors/symphony/3b87dc5a-2261-403c-93c6-b1a27e278b0c/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/symphony/3b87dc5a-2261-403c-93c6-b1a27e278b0c/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "symphony", "uuid": "990027f9-b61d-4511-ab5f-0de1d478a6ef", "main_db": "vendors/symphony/990027f9-b61d-4511-ab5f-0de1d478a6ef/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/symphony/990027f9-b61d-4511-ab5f-0de1d478a6ef/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "teclast", "uuid": "1e65c351-fd83-4977-8ff5-bf6bd0e9f2f3", "main_db": "vendors/teclast/1e65c351-fd83-4977-8ff5-bf6bd0e9f2f3/ea7e9bd44cb9a256fa2164747228e6f1.diaout", "diff_db": "vendors/teclast/1e65c351-fd83-4977-8ff5-bf6bd0e9f2f3/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "teclast", "uuid": "4f4d4d37-344b-45d1-be11-ce3a7f58fe47", "main_db": "vendors/teclast/4f4d4d37-344b-45d1-be11-ce3a7f58fe47/05ad4ae9b624a856c13da73e1623732c.diaout", "diff_db": "vendors/teclast/4f4d4d37-344b-45d1-be11-ce3a7f58fe47/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lnmbbs", "uuid": "f0e87f6b-9e0c-41b0-8241-c20f56a79b97", "main_db": "vendors/lnmbbs/f0e87f6b-9e0c-41b0-8241-c20f56a79b97/ea7e9bd44cb9a256fa2164747228e6f1.diaout", "diff_db": "vendors/lnmbbs/f0e87f6b-9e0c-41b0-8241-c20f56a79b97/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "meberry", "uuid": "830477e2-89a3-4993-b891-1c17c26d4c85", "main_db": "vendors/meberry/830477e2-89a3-4993-b891-1c17c26d4c85/5af6105965678486d44910e81d472788.diaout", "diff_db": "vendors/meberry/830477e2-89a3-4993-b891-1c17c26d4c85/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "x-tigi", "uuid": "8b5aac9c-d445-4057-8098-da59b65e2689", "main_db": "vendors/x-tigi/8b5aac9c-d445-4057-8098-da59b65e2689/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/x-tigi/8b5aac9c-d445-4057-8098-da59b65e2689/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "facetel", "uuid": "03d5b96c-96cf-472b-b7c3-35cd0d4920ae", "main_db": "vendors/facetel/03d5b96c-96cf-472b-b7c3-35cd0d4920ae/ea7e9bd44cb9a256fa2164747228e6f1.diaout", "diff_db": "vendors/facetel/03d5b96c-96cf-472b-b7c3-35cd0d4920ae/baseline.diaout", "added_cnt": 79, "removed_cnt": 38, "added_funcs": ["bssl::dtls1_get_incoming_message(ssl_st *,unsigned char *,bssl::hm_header_st const*)", "bssl::dtls1_hm_fragment_mark(bssl::hm_fragment *,unsigned long,unsigned long)", "bssl::dtls1_get_message(ssl_st const*,bssl::SSLMessage *)", "ssl_ctx_make_profiles(char const*,std::__1::unique_ptr<stack_st_SRTP_PROTECTION_PROFILE,bssl::internal::Deleter<stack_st_SRTP_PROTECTION_PROFILE>> *)", "dtls1_set_read_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "dtls1_set_write_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::dtls1_bitmap_should_discard(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::dtls1_bitmap_record(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *,ssl_early_callback_ctx *)", "bssl::serialize_features(cbb_st *)", "std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>::operator=(std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>&&)", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::Array<unsigned short>::Init(unsigned long)", "bssl::SSL_HANDSHAKE::ResizeSecrets(unsigned long)", "bssl::ssl3_get_message(ssl_st const*,bssl::SSLMessage *)", "bssl::read_v2_client_hello(ssl_st *,unsigned long *,bssl::Span<unsigned char const>)", "bssl::ssl_choose_tls13_cipher(cbs_st,unsigned short,unsigned short)", "bssl::ssl_send_alert_impl(ssl_st *,int,int)", "bssl::ssl3_write_pending(ssl_st *,int,unsigned char const*,unsigned int)", "bssl::SSL_SESSION_parse_long(cbs_st *,long *,unsigned int,long)", "bssl::SSL_SESSION_parse_string(cbs_st *,std::__1::unique_ptr<char,bssl::internal::Deleter<char>> *,unsigned int)", "bssl::SSL_SESSION_parse_u32(cbs_st *,unsigned int *,unsigned int,unsigned int)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,bssl::Array<unsigned char> *,unsigned int)", "bssl::SSL_SESSION_parse_crypto_buffer(cbs_st *,std::__1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>> *,unsigned int,crypto_buffer_pool_st *)", "bssl::SSL_SESSION_parse_u16(cbs_st *,unsigned short *,unsigned int,unsigned short)", "bssl::ssl_set_cert(bssl::CERT *,std::__1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>>)", "bssl::ssl_parse_cert_chain(unsigned char *,std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,std::__1::unique_ptr<evp_pkey_st,bssl::internal::Deleter<evp_pkey_st>> *,unsigned char *,cbs_st *,crypto_buffer_pool_st *)", "SSL_delegated_credential_used", "bssl::SSLCipherPreferenceList::Init(std::__1::unique_ptr<stack_st_SSL_CIPHER,bssl::internal::Deleter<stack_st_SSL_CIPHER>>,bssl::Span<bool const>)", "bssl::ssl_create_cipher_list(std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>> *,char const*,bool)", "std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>::operator=(std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>&&)", "SSL_CIPHER_get_value", "bssl::Array<unsigned char>::Init(unsigned long)", "bssl::ssl_set_read_error(ssl_st *)", "bssl::ssl_log_secret(ssl_st const*,char const*,bssl::Span<unsigned char const>)", "bssl::ssl_do_msg_callback(ssl_st const*,int,int,bssl::Span<unsigned char const>)", "bssl::ssl_maybe_shed_handshake_config(ssl_st *)", "SSL_CTX_enable_pq_experiment_signal", "SSL_pq_experiment_signal_seen", "SSL_get_early_data_reason", "SSL_error_description", "use_psk_identity_hint(std::__1::unique_ptr<char,bssl::internal::Deleter<char>> *,char const*)", "bssl::GrowableArray<bssl::CertCompressionAlg>::MaybeGrow(void)", "std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> bssl::MakeUnique<ssl_session_st,bssl::SSL_X509_METHOD const*&>(bssl::SSL_X509_METHOD const*&)", "bssl::ssl_get_prev_session(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bool *,ssl_early_callback_ctx const*)", "SSL_SESSION_early_data_capable", "bssl::ssl_lookup_session(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bssl::Span<unsigned char const>)::$_1::__invoke(void const*,ssl_session_st const*)", "bssl::SSLTranscript::CopyToHashContext(env_md_ctx_st *,env_md_st const*)", "SSL_CTX_get_min_proto_version", "SSL_CTX_get_max_proto_version", "SSL_get_min_proto_version", "SSL_get_max_proto_version", "set_client_CA_list(std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,stack_st_X509_NAME const*,crypto_buffer_pool_st *)", "add_client_CA(std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,x509_st *,crypto_buffer_pool_st *)", "bssl::ssl_client_hello_init(ssl_st const*,ssl_early_callback_ctx *,bssl::SSLMessage const&)", "bssl::ssl_ext_pre_shared_key_parse_clienthello(bssl::SSL_HANDSHAKE *,cbs_st *,cbs_st *,unsigned int *,unsigned char *,ssl_early_callback_ctx const*,cbs_st *)", "bssl::ssl_process_ticket(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::ssl_decrypt_ticket_with_ticket_keys(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,bssl::Span<unsigned char const>)", "bssl::ext_pq_experiment_signal_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_pq_experiment_signal_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ec_point_add_extension(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::select_tb_param(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_init_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_init_early_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_advance_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::hkdf_expand_label(bssl::Span<unsigned char>,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>)", "bssl::tls13_set_traffic_key(ssl_st *,ssl_encryption_level_t,evp_aead_direction_t,bssl::Span<unsigned char const>)", "bssl::tls13_derive_early_secret(bssl::SSL_HANDSHAKE *)", "bssl::tls13_set_early_secret_for_quic(bssl::SSL_HANDSHAKE *)", "bssl::set_quic_secrets(bssl::SSL_HANDSHAKE *,ssl_encryption_level_t,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls13_write_psk_binder(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char>)", "bssl::hash_transcript_and_truncated_client_hello(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,env_md_st const*,bssl::Span<unsigned char const>,unsigned long)", "bssl::tls13_psk_binder(unsigned char *,unsigned long *,unsigned short,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::ssl3_set_read_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::ssl3_set_write_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::skip_early_data(ssl_st *,unsigned char *,unsigned long)", "EVP_MD_type"], "removed_funcs": ["__atexit_handler_wrapper", "atexit", "bssl::dtls1_get_message(ssl_st *,bssl::SSLMessage *)", "ssl_ctx_make_profiles(char const*,std::__ndk1::unique_ptr<stack_st_SRTP_PROTECTION_PROFILE,bssl::internal::Deleter<stack_st_SRTP_PROTECTION_PROFILE>> *)", "dtls1_set_read_state(ssl_st *,std::__ndk1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "dtls1_set_write_state(ssl_st *,std::__ndk1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *)", "bssl::ssl3_get_message(ssl_st *,bssl::SSLMessage *)", "bssl::SSL_SESSION_parse_crypto_buffer(cbs_st *,std::__ndk1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>> *,unsigned int,crypto_buffer_pool_st *)", "bssl::ssl_set_cert(bssl::CERT *,std::__ndk1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>>)", "bssl::ssl_parse_cert_chain(unsigned char *,std::__ndk1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,std::__ndk1::unique_ptr<evp_pkey_st,bssl::internal::Deleter<evp_pkey_st>> *,unsigned char *,cbs_st *,crypto_buffer_pool_st *)", "bssl::SSLCipherPreferenceList::Init(std::__ndk1::unique_ptr<stack_st_SSL_CIPHER,bssl::internal::Deleter<stack_st_SSL_CIPHER>>,bssl::Span<bool const>)", "bssl::ssl_create_cipher_list(std::__ndk1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>> *,char const*,bool)", "bssl::ssl_log_secret(ssl_st const*,char const*,unsigned char const*,unsigned long)", "bssl::ssl_do_msg_callback(ssl_st *,int,int,bssl::Span<unsigned char const>)", "use_psk_identity_hint(std::__ndk1::unique_ptr<char,bssl::internal::Deleter<char>> *,char const*)", "bssl::internal::DeleterImpl<stack_st_CertCompressionAlg,void>::Free(stack_st_CertCompressionAlg*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> bssl::MakeUnique<ssl_session_st,bssl::SSL_X509_METHOD const*&>(bssl::SSL_X509_METHOD const*&)", "bssl::ssl_get_prev_session(bssl::SSL_HANDSHAKE *,std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bool *,ssl_early_callback_ctx const*)", "bssl::ssl_lookup_session(bssl::SSL_HANDSHAKE *,std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bssl::Span<unsigned char const>)::$_1::__invoke(void const*,ssl_session_st const*)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "set_client_CA_list(std::__ndk1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,stack_st_X509_NAME const*,crypto_buffer_pool_st *)", "add_client_CA(std::__ndk1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,x509_st *,crypto_buffer_pool_st *)", "SSL_export_early_keying_material", "bssl::ssl_client_hello_init(ssl_st *,ssl_early_callback_ctx *,bssl::SSLMessage const&)", "bssl::ssl_ext_pre_shared_key_parse_clienthello(bssl::SSL_HANDSHAKE *,cbs_st *,cbs_st *,unsigned int *,unsigned char *,cbs_st *)", "bssl::ssl_process_ticket(bssl::SSL_HANDSHAKE *,std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls13_init_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned long)", "bssl::tls13_init_early_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned long)", "bssl::tls13_advance_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned long)", "bssl::hkdf_expand_label(unsigned char *,env_md_st const*,unsigned char const*,unsigned long,char const*,unsigned long,unsigned char const*,unsigned long,unsigned long)", "bssl::tls13_set_traffic_key(ssl_st *,ssl_encryption_level_t,evp_aead_direction_t,unsigned char const*,unsigned long)", "bssl::tls13_derive_early_secrets(bssl::SSL_HANDSHAKE *)", "bssl::tls13_write_psk_binder(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long)", "bssl::tls13_psk_binder(unsigned char *,unsigned short,env_md_st const*,unsigned char *,unsigned long,unsigned char *,unsigned long,unsigned long)", "bssl::ssl3_set_read_state(ssl_st *,std::__ndk1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::ssl3_set_write_state(ssl_st *,std::__ndk1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "__cxa_atexit"]}, {"vendor": "sprd", "uuid": "b63cfd7a-1da3-42b4-a623-9be9d8123910", "main_db": "vendors/sprd/b63cfd7a-1da3-42b4-a623-9be9d8123910/c182c43eb75bdff6d306e3baa5d20259.diaout", "diff_db": "vendors/sprd/b63cfd7a-1da3-42b4-a623-9be9d8123910/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "bmxc", "uuid": "24f034d1-da2a-49a8-94b9-64c54794d76c", "main_db": "vendors/bmxc/24f034d1-da2a-49a8-94b9-64c54794d76c/ed05f83d415f04707a1e1f541dfa00a2.diaout", "diff_db": "vendors/bmxc/24f034d1-da2a-49a8-94b9-64c54794d76c/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "hisense", "uuid": "ab1d3845-a31b-4dcb-9f0f-a5d93de050d7", "main_db": "vendors/hisense/ab1d3845-a31b-4dcb-9f0f-a5d93de050d7/d29a67485c0c437a5b70072ac72301f4.diaout", "diff_db": "vendors/hisense/ab1d3845-a31b-4dcb-9f0f-a5d93de050d7/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "hisense", "uuid": "f028d286-ac0e-45b9-9fff-d06593432ed4", "main_db": "vendors/hisense/f028d286-ac0e-45b9-9fff-d06593432ed4/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/hisense/f028d286-ac0e-45b9-9fff-d06593432ed4/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "hisense", "uuid": "7f74272d-fa99-49b9-8e70-e28128fb3c51", "main_db": "vendors/hisense/7f74272d-fa99-49b9-8e70-e28128fb3c51/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/hisense/7f74272d-fa99-49b9-8e70-e28128fb3c51/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "dexp", "uuid": "e735a080-3d36-4d9e-a679-ed548455b498", "main_db": "vendors/dexp/e735a080-3d36-4d9e-a679-ed548455b498/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/dexp/e735a080-3d36-4d9e-a679-ed548455b498/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "dexp", "uuid": "e019637a-7313-4ca3-b36c-b975844c875e", "main_db": "vendors/dexp/e019637a-7313-4ca3-b36c-b975844c875e/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/dexp/e019637a-7313-4ca3-b36c-b975844c875e/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "dexp", "uuid": "981821a9-e9e9-4c5b-9d31-1679a714186c", "main_db": "vendors/dexp/981821a9-e9e9-4c5b-9d31-1679a714186c/3b465265ae34cd751ab8ce89aaa1b48e.diaout", "diff_db": "vendors/dexp/981821a9-e9e9-4c5b-9d31-1679a714186c/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "dexp", "uuid": "a68663e4-6fb2-4299-8b10-512eb50fa9c3", "main_db": "vendors/dexp/a68663e4-6fb2-4299-8b10-512eb50fa9c3/dfcf9a116dd5601eb0e2713d7e61c231.diaout", "diff_db": "vendors/dexp/a68663e4-6fb2-4299-8b10-512eb50fa9c3/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "multilaser", "uuid": "c73c2d09-768c-4fe6-abba-399e32313b2e", "main_db": "vendors/multilaser/c73c2d09-768c-4fe6-abba-399e32313b2e/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/multilaser/c73c2d09-768c-4fe6-abba-399e32313b2e/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "multilaser", "uuid": "fbb06eb4-7d78-4932-8c3b-eacbbcc7bb5d", "main_db": "vendors/multilaser/fbb06eb4-7d78-4932-8c3b-eacbbcc7bb5d/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/multilaser/fbb06eb4-7d78-4932-8c3b-eacbbcc7bb5d/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "cherry_mobile", "uuid": "8d5342d6-4401-431c-9645-4599be819489", "main_db": "vendors/cherry_mobile/8d5342d6-4401-431c-9645-4599be819489/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/cherry_mobile/8d5342d6-4401-431c-9645-4599be819489/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "positivo", "uuid": "2caaa782-d496-432a-ae80-d92932a37861", "main_db": "vendors/positivo/2caaa782-d496-432a-ae80-d92932a37861/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/positivo/2caaa782-d496-432a-ae80-d92932a37861/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "positivo", "uuid": "696d695c-efa6-4b34-8a9c-60b70017f963", "main_db": "vendors/positivo/696d695c-efa6-4b34-8a9c-60b70017f963/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/positivo/696d695c-efa6-4b34-8a9c-60b70017f963/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "kddi", "uuid": "049216b1-4b5a-4b0d-b336-5efa9177d74c", "main_db": "vendors/kddi/049216b1-4b5a-4b0d-b336-5efa9177d74c/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/kddi/049216b1-4b5a-4b0d-b336-5efa9177d74c/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "kddi", "uuid": "7ee61b6d-58dc-44a6-99eb-74174610a112", "main_db": "vendors/kddi/7ee61b6d-58dc-44a6-99eb-74174610a112/06c626bca570ce4a51a8379e6115b357.diaout", "diff_db": "vendors/kddi/7ee61b6d-58dc-44a6-99eb-74174610a112/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "kddi", "uuid": "599fd632-a96f-4136-a902-6a048c4965eb", "main_db": "vendors/kddi/599fd632-a96f-4136-a902-6a048c4965eb/47214e845377233b740a6bd4fe50f75e.diaout", "diff_db": "vendors/kddi/599fd632-a96f-4136-a902-6a048c4965eb/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "kddi", "uuid": "3695e8de-0d16-4fa4-9fda-c94489d84a45", "main_db": "vendors/kddi/3695e8de-0d16-4fa4-9fda-c94489d84a45/185c9f5fe7eaea1ee34d07ed18a645a0.diaout", "diff_db": "vendors/kddi/3695e8de-0d16-4fa4-9fda-c94489d84a45/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "alps", "uuid": "447c8956-a120-4df6-b37b-3147f91600a1", "main_db": "vendors/alps/447c8956-a120-4df6-b37b-3147f91600a1/68ed4afd6c1ccff9d73170741e7b36e3.diaout", "diff_db": "vendors/alps/447c8956-a120-4df6-b37b-3147f91600a1/baseline.diaout", "added_cnt": 333, "removed_cnt": 263, "added_funcs": ["DTLSv1_get_timeout", "DTLSv1_handle_timeout", "SSL_CTX_set_srtp_profiles", "SSL_set_srtp_profiles", "SSL_CTX_set_tlsext_use_srtp", "SSL_set_tlsext_use_srtp", "pitem_new", "pqueue_free", "pqueue_new", "pqueue_peek", "pqueue_find", "pqueue_size", "pqueue_next", "pqueue_insert", "pqueue_pop", "SSL_session_reused", "SSL_CTX_set_tmp_ecdh", "SSL_set_tmp_ecdh", "SSL_CTX_enable_tls_channel_id", "SSL_enable_tls_channel_id", "SSL_CTX_set1_tls_channel_id", "SSL_set1_tls_channel_id", "SSL_get_tls_channel_id", "SSL_set_tlsext_host_name", "SSLv3_method", "SSL_library_init", "SSL_SESSION_to_bytes", "SSL_SESSION_to_bytes_for_ticket", "i2d_SSL_SESSION", "d2i_SSL_SESSION", "SSL_dup_CA_list", "SSL_set_client_CA_list", "SSL_CTX_set_client_CA_list", "SSL_get_session", "SSL_get_client_CA_list", "SSL_add_client_CA", "SSL_CTX_add_client_CA", "SSL_load_client_CA_file", "SSL_add_file_cert_subjects_to_stack", "SSL_add_dir_cert_subjects_to_stack", "SSL_get_cipher_by_value", "SSL_CIPHER_is_AES", "SSL_CIPHER_has_MD5_HMAC", "SSL_CIPHER_is_AESGCM", "SSL_CIPHER_is_CHACHA20POLY1305", "SSL_CIPHER_get_kx_name", "SSL_CIPHER_get_rfc_name", "SSL_CIPHER_get_bits", "SSL_CIPHER_description", "SSL_CTX_set_session_id_context", "SSL_set_session_id_context", "SSL_CTX_set_generate_session_id", "SSL_set_generate_session_id", "SSL_has_matching_session_id", "SSL_CTX_set_purpose", "SSL_set_purpose", "SSL_CTX_set_trust", "SSL_set_trust", "SSL_CTX_set1_param", "SSL_set1_param", "SSL_certs_clear", "SSL_set_bio", "SSL_get_rfd", "SSL_get_wfd", "SSL_set_fd", "SSL_set_wfd", "SSL_set_rfd", "SSL_get_finished", "SSL_get_peer_finished", "SSL_get_verify_mode", "SSL_get_verify_depth", "SSL_CTX_get_verify_depth", "SSL_set_verify_depth", "SSL_get_peer_certificate", "SSL_get_peer_cert_chain", "SSL_get_default_timeout", "SSL_read", "SSL_peek", "SSL_write", "SSL_renegotiate", "SSL_CTX_clear_options", "SSL_clear_options", "SSL_CTX_clear_mode", "SSL_clear_mode", "SSL_CTX_set_max_cert_list", "SSL_set_max_cert_list", "SSL_CTX_set_max_send_fragment", "SSL_set_max_send_fragment", "SSL_get_secure_renegotiation_support", "SSL_ctrl", "SSL_CTX_sessions", "SSL_CTX_sess_number", "SSL_CTX_ctrl", "SSL_get_cipher_list", "SSL_CTX_set_cipher_list_tls11", "SSL_get_servername_type", "SSL_CTX_enable_signed_cert_timestamps", "SSL_enable_signed_cert_timestamps", "SSL_CTX_enable_ocsp_stapling", "SSL_enable_ocsp_stapling", "SSL_get0_signed_cert_timestamp_list", "SSL_get0_ocsp_response", "SSL_select_next_proto", "SSL_CTX_set_next_protos_advertised_cb", "SSL_CTX_set_next_proto_select_cb", "SSL_CTX_set_alpn_protos", "SSL_set_alpn_protos", "SSL_CTX_set_alpn_select_cb", "SSL_export_keying_material", "SSL_CTX_free", "SSL_CTX_set_cert_verify_callback", "SSL_CTX_set_verify", "SSL_CTX_set_verify_depth", "SSL_CTX_set_cert_cb", "SSL_set_cert_cb", "SSL_get_version", "SSL_free", "SSL_set_accept_state", "SSL_accept", "SSL_set_connect_state", "SSL_connect", "SSL_get_certificate", "SSL_CTX_get0_certificate", "SSL_get_current_cipher", "SSL_CTX_set_quiet_shutdown", "SSL_CTX_get_quiet_shutdown", "SSL_set_quiet_shutdown", "SSL_get_quiet_shutdown", "SSL_get_shutdown", "SSL_set_SSL_CTX", "SSL_CTX_set_default_verify_paths", "SSL_CTX_load_verify_locations", "SSL_state", "SSL_shutdown", "SSL_renegotiate_pending", "SSL_do_handshake", "SSL_set_verify_result", "SSL_get_verify_result", "SSL_get_ex_new_index", "SSL_set_ex_data", "SSL_get_ex_data", "SSL_CTX_get_ex_new_index", "SSL_CTX_set_ex_data", "SSL_CTX_get_ex_data", "SSL_CTX_set_cert_store", "SSL_get_error", "SSL_CTX_set_tmp_ecdh_callback", "SSL_set_tmp_ecdh_callback", "SSL_CTX_use_psk_identity_hint", "SSL_use_psk_identity_hint", "SSL_get_psk_identity", "SSL_CTX_set_min_version", "SSL_CTX_set_max_version", "SSL_CTX_new", "SSL_set_min_version", "SSL_set_max_version", "SSL_CTX_set_keylog_bio", "SSL_in_false_start", "SSL_get_structure_sizes", "SSL_clear", "SSL_new", "SSL_is_server", "SSL_get_rc4_state", "SSL_get_tls_unique", "SSL_use_certificate", "SSL_use_certificate_file", "SSL_use_certificate_ASN1", "SSL_use_RSAPrivateKey", "SSL_use_RSAPrivateKey_file", "SSL_use_RSAPrivateKey_ASN1", "SSL_use_PrivateKey", "SSL_use_PrivateKey_file", "SSL_use_PrivateKey_ASN1", "SSL_CTX_use_certificate", "SSL_CTX_use_certificate_file", "SSL_CTX_use_certificate_ASN1", "SSL_CTX_use_RSAPrivateKey", "SSL_CTX_use_RSAPrivateKey_file", "SSL_CTX_use_RSAPrivateKey_ASN1", "SSL_CTX_use_PrivateKey", "SSL_CTX_use_PrivateKey_file", "SSL_CTX_use_PrivateKey_ASN1", "SSL_CTX_use_certificate_chain_file", "SSL_SESSION_get_ex_new_index", "SSL_SESSION_set_ex_data", "SSL_SESSION_get_ex_data", "SSL_SESSION_new", "SSL_SESSION_up_ref", "SSL_get1_session", "SSL_SESSION_free", "SSL_CTX_remove_session", "SSL_CTX_add_session", "SSL_set_session", "SSL_SESSION_set_timeout", "SSL_SESSION_get_time", "SSL_SESSION_set_time", "SSL_SESSION_set1_id_context", "SSL_CTX_set_timeout", "SSL_CTX_flush_sessions", "SSL_CTX_set_client_cert_cb", "SSL_CTX_get_client_cert_cb", "PEM_read_bio_SSL_SESSION", "PEM_read_SSL_SESSION", "PEM_write_bio_SSL_SESSION", "PEM_write_SSL_SESSION", "SSL_state_string_long", "SSL_rstate_string_long", "SSL_alert_type_string_long", "SSL_alert_desc_string_long", "SSL_rstate_string", "SSL_SESSION_print", "SSL_SESSION_print_fp", "SSL_early_callback_ctx_extension_get", "SSL_get_sigalgs", "SSL_get_shared_sigalgs", "__imp_dladdr", "__imp___gnu_Unwind_Find_exidx", "__imp___snprintf_chk", "__imp___aeabi_memcpy", "__imp___aeabi_memset", "__imp___register_atfork", "__imp___android_log_print", "__imp_BIO_wpending", "__imp_BIO_set_flags", "__imp_memcpy", "__imp_BUF_MEM_grow", "__imp_BIO_push", "__imp_fprintf", "__imp_ERR_add_error_data", "__imp_BUF_MEM_grow_clean", "__imp_BIO_mem_contents", "__imp_EVP_DigestFinal", "__imp_EVP_sha1", "__imp_d2i_X509", "__imp_X509_get_pubkey", "__imp_EVP_PKEY_missing_parameters", "__imp_sk_pop_free", "__imp_CBS_stow", "__imp_DHparams_dup", "__imp_DH_generate_key", "__imp_DH_free", "__imp_DH_size", "__imp_DH_compute_key", "__imp_BN_bn2bin", "__imp_EC_KEY_generate_key", "__imp_ECDH_compute_key", "__imp_EC_POINT_point2oct", "__imp_OPENSSL_cleanse", "__imp_EVP_PKEY_CTX_new", "__imp_EVP_PKEY_sign_init", "__imp_EVP_PKEY_CTX_set_signature_md", "__imp_EVP_PKEY_sign", "__imp_EVP_PKEY_CTX_free", "__imp_X509_certificate_type", "__imp_DH_new", "__imp_DH_num_bits", "__imp_EC_KEY_new_by_curve_name", "__imp_EVP_DigestVerifyUpdate", "__imp_EVP_DigestVerifyFinal", "__imp_i2d_PublicKey", "__imp_EVP_DigestSignFinal", "__imp_d2i_ECDSA_SIG", "__imp_EVP_md5", "__imp_EVP_MD_CTX_destroy", "__imp_BIO_s_mem", "__imp_BIO_set_close", "__imp_EVP_MD_CTX_create", "__imp_EVP_MD_CTX_type", "__imp_EVP_MD_CTX_size", "__imp_EVP_PKEY_bits", "__imp_EVP_PKEY_set1_DH", "__imp_EVP_PKEY_set1_EC_KEY", "__imp_memmove", "__imp_EVP_DigestSignUpdate", "__imp_RSA_message_index_PKCS1_type_2", "__imp_BN_clear_free", "__imp_EC_KEY_get0_private_key", "__imp_EC_KEY_set_private_key", "__imp_EVP_PKEY_verify_init", "__imp_EVP_PKEY_verify", "__imp_BN_init", "__imp___memcpy_chk", "__imp_EVP_AEAD_CTX_seal", "__imp___strlen_chk", "__imp_X509_STORE_CTX_get_ex_new_index", "__imp_CRYPTO_once", "__imp___errno", "__imp_BN_dup", "__imp_X509_cmp", "__imp_OPENSSL_DIR_read", "__imp_OPENSSL_DIR_end", "__imp_X509_STORE_add_cert", "__imp_X509_STORE_CTX_get1_chain", "__imp_X509_check_purpose", "__imp_sk_pop", "__imp_X509_STORE_CTX_get_error", "__imp_X509_verify_cert_error_string", "__imp_EVP_aead_rc4_md5_ssl3", "__imp_EVP_aead_rc4_md5_tls", "__imp_EVP_aead_rc4_sha1_ssl3", "__imp_EVP_aead_rc4_sha1_tls", "__imp_EVP_aead_aes_128_cbc_sha1_ssl3", "__imp_EVP_aead_aes_128_cbc_sha256_tls", "__imp_EVP_aead_aes_256_cbc_sha1_ssl3", "__imp_EVP_aead_aes_256_cbc_sha256_tls", "__imp_EVP_aead_aes_256_cbc_sha384_tls", "__imp_EVP_aead_des_ede3_cbc_sha1_ssl3", "__imp_BUF_strlcpy", "__imp_BUF_strlcat", "__imp_CRYPTO_MUTEX_unlock", "__imp_BIO_free_all", "__imp_BIO_s_fd", "__imp_X509_check_private_key", "__imp_OBJ_obj2nid", "__imp_OBJ_find_sigid_algs", "__imp_BIO_pop", "__imp_BIO_f_buffer", "__imp_BIO_reset", "__imp_BIO_set_read_buffer_size", "__imp_EVP_AEAD_CTX_get_rc4_state", "__imp_RSA_up_ref", "__imp_EVP_PKEY_assign_RSA", "__imp_d2i_RSAPrivateKey", "__imp_BIO_puts", "__imp_BIO_printf", "__imp_BIO_hexdump", "__imp_BIO_set_fp", "__imp_HMAC_CTX_copy_ex", "__imp_OBJ_find_sigid_by_algs", "__imp_EVP_MD_type", "__imp_EVP_sha224", "__imp_EVP_sha512", "__imp_EVP_PKEY_supports_digest"], "removed_funcs": ["__on_dlclose", "__emutls_unregister_key", "__on_dlclose_late", "atexit", "BIO_f_ssl", "ssl_new(bio_st *)", "bssl::dtls1_min_mtu(void)", "DTLSv1_set_initial_timeout_duration", "DTLS_with_buffers_method", "DTLSv1_2_server_method", "DTLSv1_server_method", "DTLSv1_2_client_method", "DTLSv1_client_method", "DTLS_server_method", "DTLS_client_method", "bssl::ssl3_add_change_cipher_spec(ssl_st *)", "bssl::SSLAEADContext::SetVersionIfNullCipher(unsigned short)", "bssl::SSLAEADContext::ExplicitNonceLen(void)const", "SSL_get0_server_requested_CAs", "sk_CRYPTO_BUFFER_call_copy_func", "sk_CRYPTO_BUFFER_call_free_func", "bssl::ssl_cipher_get_value(ssl_cipher_st const*)", "bssl::ssl_cipher_get_record_split_len(ssl_cipher_st const*)", "SSL_CIPHER_get_kx_nid", "SSL_CIPHER_get_auth_nid", "SSL_CIPHER_get_prf_nid", "SSL_CIPHER_is_block_cipher", "SSL_CIPHER_standard_name", "SSL_COMP_get_compression_methods", "SSL_COMP_add_compression_method", "SSL_COMP_get_name", "SSL_COMP_get0_name", "SSL_COMP_get_id", "SSL_COMP_free_compression_methods", "SSL_CTX_get_default_passwd_cb", "SSL_CTX_get_default_passwd_cb_userdata", "sk_X509_NAME_call_free_func", "bssl::SSLKeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::GroupID(void)const", "bssl::`anonymous namespace'::X25519KeyShare::GroupID(void)const", "bssl::SSLKeyShare::~SSLKeyShare()", "bssl::ssl_do_info_callback(ssl_st const*,int,int)", "SSL_CTX_set_strict_cipher_list", "SSL_quic_read_level", "SSL_quic_write_level", "SSL_is_dtls", "SSL_get_peer_quic_transport_params", "SSL_CTX_get_mode", "SSL_CTX_set0_buffer_pool", "SSL_get0_session_id_context", "SSL_CTX_get_read_ahead", "SSL_CTX_set_read_ahead", "SSL_set_read_ahead", "SSL_CTX_get_max_cert_list", "SSL_CTX_get_session_cache_mode", "SSL_set1_curves", "SSL_set1_curves_list", "SSL_CTX_get_ciphers", "SSL_set_strict_cipher_list", "SSL_CTX_set_custom_verify", "SSL_set_custom_verify", "SSL_get_negotiated_token_binding_param", "SSL_get_current_compression", "SSL_get_current_expansion", "SSL_get_server_tmp_key", "SSL_set_state", "SSL_get_shared_ciphers", "SSL_CTX_set_quic_method", "SSL_set_quic_method", "SSL_CTX_set_tmp_rsa_callback", "SSL_CTX_set_msg_callback_arg", "SSL_CTX_set_keylog_callback", "SSL_CTX_get_keylog_callback", "SSL_CTX_set_current_time_cb", "SSL_CTX_set_select_certificate_cb", "SSL_CTX_set_reverify_on_resume", "SSL_get_pending_cipher", "SSL_get_ticket_age_skew", "SSL_CTX_sess_connect", "SSL_CTX_sess_connect_good", "SSL_CTX_sess_connect_renegotiate", "SSL_CTX_sess_accept", "SSL_CTX_sess_accept_renegotiate", "SSL_CTX_sess_accept_good", "SSL_CTX_sess_hits", "SSL_CTX_sess_cb_hits", "SSL_CTX_sess_misses", "SSL_CTX_sess_timeouts", "SSL_CTX_sess_cache_full", "SSL_num_renegotiations", "SSL_CTX_need_tmp_RSA", "SSL_need_tmp_RSA", "SSL_CTX_set_tmp_rsa", "ERR_load_SSL_strings", "SSL_load_error_strings", "SSL_CTX_set_ticket_aead_method", "SSL_CTX_set_tlsext_status_cb", "SSL_CTX_set_tlsext_status_arg", "SSL_set_private_key_method", "SSL_CTX_set_private_key_method", "SSL_CTX_set_signing_algorithm_prefs", "SSL_set_signing_algorithm_prefs", "SSL_SESSION_get0_peer_certificates", "SSL_SESSION_get0_id_context", "SSL_SESSION_has_ticket", "SSL_SESSION_get0_ticket", "SSL_SESSION_get_ticket_lifetime_hint", "SSL_SESSION_get0_cipher", "SSL_CTX_set_session_psk_dhe_timeout", "lh_SSL_SESSION_call_hash_func(unsigned int (*)(void const*),void const*)", "lh_SSL_SESSION_call_cmp_func(int (*)(void const*,void const*),void const*,void const*)", "SSL_SESSION_get_protocol_version", "SSL_get0_chain_certs", "SSL_alert_from_verify_result", "sk_X509_call_free_func", "sk_X509_NAME_call_copy_func", "bssl::ext_supported_groups_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::dont_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ignore_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_srtp_init(bssl::SSL_HANDSHAKE *)", "bssl::cert_compression_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_delegated_credential_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::tls13_client_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::tls13_server_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_check_client_CA_names(stack_st_CRYPTO_BUFFER *)", "bssl::ssl_noop_x509_clear(bssl::CERT *)", "bssl::ssl_noop_x509_free(bssl::CERT *)", "bssl::ssl_noop_x509_dup(bssl::CERT *,bssl::CERT const*)", "bssl::ssl_noop_x509_flush_cached_chain(bssl::CERT *)", "bssl::ssl_noop_x509_flush_cached_leaf(bssl::CERT *)", "bssl::ssl_noop_x509_session_cache_objects(ssl_session_st *)", "bssl::ssl_noop_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "bssl::ssl_noop_x509_session_clear(ssl_session_st *)", "bssl::ssl_noop_x509_session_verify_cert_chain(ssl_session_st *,bssl::SSL_HANDSHAKE *,unsigned char *)", "bssl::ssl_noop_x509_hs_flush_cached_ca_names(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_new(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_config_free(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_flush_cached_client_CA(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_auto_chain_if_needed(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_ctx_new(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_free(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "SSLv23_method", "TLS_with_buffers_method", "TLSv1_2_server_method", "TLSv1_1_server_method", "TLSv1_server_method", "TLSv1_2_client_method", "TLSv1_1_client_method", "TLSv1_client_method", "SSLv23_server_method", "SSLv23_client_method", "TLS_server_method", "TLS_client_method", "`anonymous namespace'::unwindOneFrame(unsigned int,_Unwind_Control_Block *,_Unwind_Context *)", "unw_step", "__aeabi_memset8", "__aeabi_memclr8", "__aeabi_memcpy8_0", "__aeabi_memmove8_0", "__imp_BIO_callback_ctrl", "__imp_BIO_clear_retry_flags", "__imp_BIO_copy_next_retry", "__imp_BIO_set_retry_read", "__imp_BIO_set_retry_special", "__imp_BIO_set_retry_write", "__imp_CBB_zero", "__imp_OPENSSL_free", "__imp_OPENSSL_malloc", "__imp_CBS_copy_bytes", "__imp_BUF_MEM_append", "__imp_CBB_add_asn1_bool", "__imp_CBB_add_asn1_octet_string", "__imp_CBB_flush", "__imp_CBS_get_asn1_bool", "__imp_CRYPTO_BUFFER_data", "__imp_CRYPTO_BUFFER_free", "__imp_CRYPTO_BUFFER_len", "__imp_CRYPTO_BUFFER_up_ref", "__imp_ERR_SAVE_STATE_free", "__imp_ERR_add_error_dataf", "__imp_ERR_restore_state", "__imp_ERR_save_state", "__imp_sk_pop_free_ex", "__imp_CBB_add_u8_length_prefixed", "__imp_CBB_did_write", "__imp_CBB_len", "__imp_CBB_reserve", "__imp_CRYPTO_BUFFER_new_from_CBS", "__imp_EVP_PKEY_get0_RSA", "__imp_SHA256", "__imp_CBB_add_u32", "__imp_BUF_MEM_reserve", "__imp_EVP_AEAD_CTX_aead", "__imp_EVP_AEAD_CTX_get_iv", "__imp_EVP_AEAD_CTX_seal_scatter", "__imp_EVP_AEAD_CTX_tag_len", "__imp_EVP_AEAD_CTX_zero", "__imp_CBS_get_any_asn1_element", "__imp_CBS_peek_asn1_tag", "__imp_CBS_asn1_bitstring_has_bit", "__imp_CBS_is_valid_asn1_bitstring", "__imp_CRYPTO_BUFFER_init_CBS", "__imp_CRYPTO_BUFFER_new", "__imp_EVP_PKEY_cmp", "__imp_EVP_PKEY_get0_EC_KEY", "__imp_EVP_parse_public_key", "__imp_sk_deep_copy", "__imp_sk_set", "__imp_EVP_aead_aes_128_gcm_tls12", "__imp_EVP_aead_aes_128_gcm_tls13", "__imp_EVP_aead_aes_256_gcm_tls12", "__imp_EVP_aead_aes_256_gcm_tls13", "__imp_EVP_aead_chacha20_poly1305", "__imp_EVP_aead_null_sha1_tls", "__imp_OPENSSL_strdup", "__imp_sk_delete", "__imp_BN_CTX_end", "__imp_BN_CTX_get", "__imp_BN_CTX_start", "__imp_BN_bn2cbb_padded", "__imp_BN_rand_range_ex", "__imp_EC_GROUP_get0_order", "__imp_EC_POINT_get_affine_coordinates_GFp", "__imp_EC_POINT_mul", "__imp_EC_POINT_point2cbb", "__imp_HRSS_decap", "__imp_HRSS_encap", "__imp_HRSS_generate_key", "__imp_HRSS_marshal_public_key", "__imp_HRSS_parse_public_key", "__imp_X25519", "__imp_X25519_keypair", "__imp_BIO_s_socket", "__imp_BIO_up_ref", "__imp_CRYPTO_MUTEX_unlock_read", "__imp_CRYPTO_MUTEX_unlock_write", "__imp_EVP_DigestSign", "__imp_EVP_DigestVerify", "__imp_EVP_PKEY_CTX_set_rsa_padding", "__imp_EVP_PKEY_CTX_set_rsa_pss_saltlen", "__imp_EVP_PKEY_set1_RSA", "EVP_sha1", "EVP_sha512", "__imp_RSA_private_key_from_bytes", "__imp_strcmp", "__imp_CBB_data", "__imp_lh_retrieve_key", "__imp_BIO_read_asn1", "__imp_BIO_write_all", "__imp_X509_STORE_CTX_zero", "__imp_X509_STORE_up_ref", "__imp_X509_parse_from_buffer", "__imp_CRYPTO_tls1_prf", "__imp_CBB_discard_child", "__imp_ECDSA_SIG_new", "__imp_ECDSA_do_sign", "__imp_EVP_CIPHER_iv_length", "__imp_HKDF_expand", "__imp_HKDF_extract", "__imp_HMAC", "memcpy", "memmove"]}, {"vendor": "alps", "uuid": "83c81132-5455-40c8-8b34-fdbe1411512a", "main_db": "vendors/alps/83c81132-5455-40c8-8b34-fdbe1411512a/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/alps/83c81132-5455-40c8-8b34-fdbe1411512a/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "alps", "uuid": "ffef68ba-339a-4aa9-86fe-c621e379292a", "main_db": "vendors/alps/ffef68ba-339a-4aa9-86fe-c621e379292a/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/alps/ffef68ba-339a-4aa9-86fe-c621e379292a/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "hometech", "uuid": "f6b09fb7-9adb-456f-a7f7-f8dc1e299591", "main_db": "vendors/hometech/f6b09fb7-9adb-456f-a7f7-f8dc1e299591/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/hometech/f6b09fb7-9adb-456f-a7f7-f8dc1e299591/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "rca", "uuid": "50d3b485-7921-4aa1-bf8e-205cd8c8a7da", "main_db": "vendors/rca/50d3b485-7921-4aa1-bf8e-205cd8c8a7da/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/rca/50d3b485-7921-4aa1-bf8e-205cd8c8a7da/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "rca", "uuid": "71a09ab1-371a-48fe-a269-aacb316bc89f", "main_db": "vendors/rca/71a09ab1-371a-48fe-a269-aacb316bc89f/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/rca/71a09ab1-371a-48fe-a269-aacb316bc89f/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "rca", "uuid": "48c55129-4e64-4874-81a8-4d2b017e9f5a", "main_db": "vendors/rca/48c55129-4e64-4874-81a8-4d2b017e9f5a/3b465265ae34cd751ab8ce89aaa1b48e.diaout", "diff_db": "vendors/rca/48c55129-4e64-4874-81a8-4d2b017e9f5a/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "rca", "uuid": "21626ed8-edab-421e-8abb-4b446f5cb30a", "main_db": "vendors/rca/21626ed8-edab-421e-8abb-4b446f5cb30a/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/rca/21626ed8-edab-421e-8abb-4b446f5cb30a/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "trident", "uuid": "03fad8d5-88a1-41e9-9b0e-0399fa77cd45", "main_db": "vendors/trident/03fad8d5-88a1-41e9-9b0e-0399fa77cd45/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/trident/03fad8d5-88a1-41e9-9b0e-0399fa77cd45/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "vestel", "uuid": "25f2172b-dc01-49d6-a95a-6856f360fadc", "main_db": "vendors/vestel/25f2172b-dc01-49d6-a95a-6856f360fadc/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/vestel/25f2172b-dc01-49d6-a95a-6856f360fadc/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "bqru", "uuid": "3b93e863-1fad-453c-850c-c4c75c9d2197", "main_db": "vendors/bqru/3b93e863-1fad-453c-850c-c4c75c9d2197/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/bqru/3b93e863-1fad-453c-850c-c4c75c9d2197/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "bqru", "uuid": "5bb36a4f-84a6-4fa0-95f3-ca9f8d047d48", "main_db": "vendors/bqru/5bb36a4f-84a6-4fa0-95f3-ca9f8d047d48/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/bqru/5bb36a4f-84a6-4fa0-95f3-ca9f8d047d48/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "bqru", "uuid": "ebb94aba-ffa0-4377-87ff-099011ea1a75", "main_db": "vendors/bqru/ebb94aba-ffa0-4377-87ff-099011ea1a75/a19fe4b5ca4cdcd36966b7a1b5f99ce7.diaout", "diff_db": "vendors/bqru/ebb94aba-ffa0-4377-87ff-099011ea1a75/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "ihunt", "uuid": "56e35248-d815-4f0b-948a-540a31889510", "main_db": "vendors/ihunt/56e35248-d815-4f0b-948a-540a31889510/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/ihunt/56e35248-d815-4f0b-948a-540a31889510/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "ihunt", "uuid": "91caa7bd-32e9-40a5-8953-1f1edf5d5d93", "main_db": "vendors/ihunt/91caa7bd-32e9-40a5-8953-1f1edf5d5d93/a19fe4b5ca4cdcd36966b7a1b5f99ce7.diaout", "diff_db": "vendors/ihunt/91caa7bd-32e9-40a5-8953-1f1edf5d5d93/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "ihunt", "uuid": "3aebf4b1-e583-4836-8120-85b1c506b25b", "main_db": "vendors/ihunt/3aebf4b1-e583-4836-8120-85b1c506b25b/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/ihunt/3aebf4b1-e583-4836-8120-85b1c506b25b/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "venturer", "uuid": "7b2ef42d-6ab5-482e-be25-520ce7c289a4", "main_db": "vendors/venturer/7b2ef42d-6ab5-482e-be25-520ce7c289a4/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/venturer/7b2ef42d-6ab5-482e-be25-520ce7c289a4/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "compumax", "uuid": "a9e73652-eacc-477c-b345-90234997a7dc", "main_db": "vendors/compumax/a9e73652-eacc-477c-b345-90234997a7dc/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/compumax/a9e73652-eacc-477c-b345-90234997a7dc/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "gigaset", "uuid": "4fd833d9-3608-42a4-9b82-15d635f3a7c5", "main_db": "vendors/gigaset/4fd833d9-3608-42a4-9b82-15d635f3a7c5/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/gigaset/4fd833d9-3608-42a4-9b82-15d635f3a7c5/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "gigaset", "uuid": "00c7b1cc-decb-4e96-add1-b2bb76107eca", "main_db": "vendors/gigaset/00c7b1cc-decb-4e96-add1-b2bb76107eca/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/gigaset/00c7b1cc-decb-4e96-add1-b2bb76107eca/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "clearcellular", "uuid": "e09a9876-df7f-439d-af30-ed61a9fd2074", "main_db": "vendors/clearcellular/e09a9876-df7f-439d-af30-ed61a9fd2074/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/clearcellular/e09a9876-df7f-439d-af30-ed61a9fd2074/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "mobiiot", "uuid": "0dd0495c-45de-4499-9789-6cec0378289d", "main_db": "vendors/mobiiot/0dd0495c-45de-4499-9789-6cec0378289d/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/mobiiot/0dd0495c-45de-4499-9789-6cec0378289d/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "pcbox", "uuid": "8b969f58-ef5e-4ddb-8808-cc1c78388f69", "main_db": "vendors/pcbox/8b969f58-ef5e-4ddb-8808-cc1c78388f69/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/pcbox/8b969f58-ef5e-4ddb-8808-cc1c78388f69/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lanix", "uuid": "2615b681-ec42-45f6-b832-37ba5706d8db", "main_db": "vendors/lanix/2615b681-ec42-45f6-b832-37ba5706d8db/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/lanix/2615b681-ec42-45f6-b832-37ba5706d8db/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "lanix", "uuid": "af0b1457-7a35-4417-83ce-cd77119525ca", "main_db": "vendors/lanix/af0b1457-7a35-4417-83ce-cd77119525ca/a19fe4b5ca4cdcd36966b7a1b5f99ce7.diaout", "diff_db": "vendors/lanix/af0b1457-7a35-4417-83ce-cd77119525ca/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "safaricom", "uuid": "d8a79ae4-2364-4f31-b108-b55a4c50a972", "main_db": "vendors/safaricom/d8a79ae4-2364-4f31-b108-b55a4c50a972/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/safaricom/d8a79ae4-2364-4f31-b108-b55a4c50a972/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "safaricom", "uuid": "6736f55c-8645-434d-8b67-aae4b5d3130a", "main_db": "vendors/safaricom/6736f55c-8645-434d-8b67-aae4b5d3130a/dfcf9a116dd5601eb0e2713d7e61c231.diaout", "diff_db": "vendors/safaricom/6736f55c-8645-434d-8b67-aae4b5d3130a/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "stg", "uuid": "c7b171e3-ef89-45b1-b621-d085870788b0", "main_db": "vendors/stg/c7b171e3-ef89-45b1-b621-d085870788b0/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/stg/c7b171e3-ef89-45b1-b621-d085870788b0/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "stg", "uuid": "8a378f3f-d358-4543-9bcc-45015bcd88b4", "main_db": "vendors/stg/8a378f3f-d358-4543-9bcc-45015bcd88b4/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/stg/8a378f3f-d358-4543-9bcc-45015bcd88b4/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "cat", "uuid": "d8cb85f5-e953-4a63-90c6-b4f76fd24898", "main_db": "vendors/cat/d8cb85f5-e953-4a63-90c6-b4f76fd24898/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/cat/d8cb85f5-e953-4a63-90c6-b4f76fd24898/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cat", "uuid": "9032bc06-2703-4fd5-b61f-e0af15d504d5", "main_db": "vendors/cat/9032bc06-2703-4fd5-b61f-e0af15d504d5/d8df3e4c71ec03d9badcb993f8c5b70b.diaout", "diff_db": "vendors/cat/9032bc06-2703-4fd5-b61f-e0af15d504d5/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "mobiwire", "uuid": "eafacc1f-cafe-4d25-b41c-f3b0ec11ad06", "main_db": "vendors/mobiwire/eafacc1f-cafe-4d25-b41c-f3b0ec11ad06/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/mobiwire/eafacc1f-cafe-4d25-b41c-f3b0ec11ad06/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "micromax", "uuid": "bd060c61-01ef-4633-8587-0716afff4319", "main_db": "vendors/micromax/bd060c61-01ef-4633-8587-0716afff4319/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/micromax/bd060c61-01ef-4633-8587-0716afff4319/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "micromax", "uuid": "37cbda5a-8951-45ca-95c4-50d8e71f88d7", "main_db": "vendors/micromax/37cbda5a-8951-45ca-95c4-50d8e71f88d7/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/micromax/37cbda5a-8951-45ca-95c4-50d8e71f88d7/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "micromax", "uuid": "bd8c9557-faad-4b3a-9b9d-e0dd5eedfaaa", "main_db": "vendors/micromax/bd8c9557-faad-4b3a-9b9d-e0dd5eedfaaa/ea7e9bd44cb9a256fa2164747228e6f1.diaout", "diff_db": "vendors/micromax/bd8c9557-faad-4b3a-9b9d-e0dd5eedfaaa/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "htc", "uuid": "542b80eb-b7b5-4638-8da4-9e61a007bae2", "main_db": "vendors/htc/542b80eb-b7b5-4638-8da4-9e61a007bae2/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/htc/542b80eb-b7b5-4638-8da4-9e61a007bae2/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "htc", "uuid": "0a94be47-90ed-44d0-8256-abfbfdbe44a2", "main_db": "vendors/htc/0a94be47-90ed-44d0-8256-abfbfdbe44a2/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/htc/0a94be47-90ed-44d0-8256-abfbfdbe44a2/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "htc", "uuid": "0a0ca56a-5c33-42b8-bf5e-01dc9a98f39d", "main_db": "vendors/htc/0a0ca56a-5c33-42b8-bf5e-01dc9a98f39d/29e1386386e74659422ff8bcee8b000d.diaout", "diff_db": "vendors/htc/0a0ca56a-5c33-42b8-bf5e-01dc9a98f39d/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["bssl::SSLAEADContext::ExplicitNonceLen(void)const"]}, {"vendor": "htc", "uuid": "b23285d4-f1e3-40d7-ab1e-32cb28ad6f3a", "main_db": "vendors/htc/b23285d4-f1e3-40d7-ab1e-32cb28ad6f3a/2e58e478d854575a44481d342155d548.diaout", "diff_db": "vendors/htc/b23285d4-f1e3-40d7-ab1e-32cb28ad6f3a/baseline.diaout", "added_cnt": 0, "removed_cnt": 2, "added_funcs": [], "removed_funcs": ["bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "f150", "uuid": "69e3ed33-fe08-4e67-b374-12d21a88ec00", "main_db": "vendors/f150/69e3ed33-fe08-4e67-b374-12d21a88ec00/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/f150/69e3ed33-fe08-4e67-b374-12d21a88ec00/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "elevate", "uuid": "9f55e1a4-65f4-4d24-a8e6-dc97e52305ea", "main_db": "vendors/elevate/9f55e1a4-65f4-4d24-a8e6-dc97e52305ea/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/elevate/9f55e1a4-65f4-4d24-a8e6-dc97e52305ea/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "carbonmobile", "uuid": "1ec49b12-f0d9-4848-bf15-6ca2b997884b", "main_db": "vendors/carbonmobile/1ec49b12-f0d9-4848-bf15-6ca2b997884b/2c5d00d114f8e05e64761e6cef44b3e4.diaout", "diff_db": "vendors/carbonmobile/1ec49b12-f0d9-4848-bf15-6ca2b997884b/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "walton", "uuid": "7bd72130-5767-4bfb-a141-aa646a47d9e7", "main_db": "vendors/walton/7bd72130-5767-4bfb-a141-aa646a47d9e7/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/walton/7bd72130-5767-4bfb-a141-aa646a47d9e7/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "walton", "uuid": "3dde4955-8d06-4b56-b2e0-2d280e9c4297", "main_db": "vendors/walton/3dde4955-8d06-4b56-b2e0-2d280e9c4297/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/walton/3dde4955-8d06-4b56-b2e0-2d280e9c4297/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "walton", "uuid": "a167011b-6e56-4405-bb14-4b02b961d94d", "main_db": "vendors/walton/a167011b-6e56-4405-bb14-4b02b961d94d/d8df3e4c71ec03d9badcb993f8c5b70b.diaout", "diff_db": "vendors/walton/a167011b-6e56-4405-bb14-4b02b961d94d/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "sylvania", "uuid": "7980c9e4-21f3-4fca-8347-8e8a7dadf7be", "main_db": "vendors/sylvania/7980c9e4-21f3-4fca-8347-8e8a7dadf7be/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/sylvania/7980c9e4-21f3-4fca-8347-8e8a7dadf7be/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "simbans", "uuid": "67e39919-5cb9-4dd8-992f-50919bfccca3", "main_db": "vendors/simbans/67e39919-5cb9-4dd8-992f-50919bfccca3/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/simbans/67e39919-5cb9-4dd8-992f-50919bfccca3/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "aligator", "uuid": "7dcb6e20-050b-459b-b511-78ea32413360", "main_db": "vendors/aligator/7dcb6e20-050b-459b-b511-78ea32413360/50d634f4265143f48199a534b7a515fc.diaout", "diff_db": "vendors/aligator/7dcb6e20-050b-459b-b511-78ea32413360/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "azom", "uuid": "71ec5a6e-b99f-400d-8c0f-3e278e9bec2c", "main_db": "vendors/azom/71ec5a6e-b99f-400d-8c0f-3e278e9bec2c/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/azom/71ec5a6e-b99f-400d-8c0f-3e278e9bec2c/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "tanoshischolar", "uuid": "b9ffdbed-cb38-4240-8a32-12ceed210dfa", "main_db": "vendors/tanoshischolar/b9ffdbed-cb38-4240-8a32-12ceed210dfa/d86242978cf7503a918c8fe2ac246fc3.diaout", "diff_db": "vendors/tanoshischolar/b9ffdbed-cb38-4240-8a32-12ceed210dfa/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "benco", "uuid": "91d2e4d9-faf3-4b79-a60f-9d253242c3f6", "main_db": "vendors/benco/91d2e4d9-faf3-4b79-a60f-9d253242c3f6/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/benco/91d2e4d9-faf3-4b79-a60f-9d253242c3f6/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "lava", "uuid": "ad3f7079-c211-4e96-94e3-ff920a5997e2", "main_db": "vendors/lava/ad3f7079-c211-4e96-94e3-ff920a5997e2/5f61d0e8387e964503ece10267872907.diaout", "diff_db": "vendors/lava/ad3f7079-c211-4e96-94e3-ff920a5997e2/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": []}, {"vendor": "lava", "uuid": "63f4ad67-812a-47ae-a52b-e042909fc693", "main_db": "vendors/lava/63f4ad67-812a-47ae-a52b-e042909fc693/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/lava/63f4ad67-812a-47ae-a52b-e042909fc693/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "lava", "uuid": "6d730b0b-7287-4ac9-bd0e-839d8714b8ca", "main_db": "vendors/lava/6d730b0b-7287-4ac9-bd0e-839d8714b8ca/e6238acfce804bc97d39be1d14bd664e.diaout", "diff_db": "vendors/lava/6d730b0b-7287-4ac9-bd0e-839d8714b8ca/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "ematic", "uuid": "460d9e9c-fec1-4d82-9550-132a9087541f", "main_db": "vendors/ematic/460d9e9c-fec1-4d82-9550-132a9087541f/53cbafc88a5882f06130b303af3dfdaa.diaout", "diff_db": "vendors/ematic/460d9e9c-fec1-4d82-9550-132a9087541f/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "estream4k", "uuid": "28f489a8-7d70-4823-8fc7-42dac7b04b44", "main_db": "vendors/estream4k/28f489a8-7d70-4823-8fc7-42dac7b04b44/53cbafc88a5882f06130b303af3dfdaa.diaout", "diff_db": "vendors/estream4k/28f489a8-7d70-4823-8fc7-42dac7b04b44/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "amlogic", "uuid": "04d913bb-7dd2-47d0-93d3-2929a7f53095", "main_db": "vendors/amlogic/04d913bb-7dd2-47d0-93d3-2929a7f53095/53cbafc88a5882f06130b303af3dfdaa.diaout", "diff_db": "vendors/amlogic/04d913bb-7dd2-47d0-93d3-2929a7f53095/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "dhiraagu", "uuid": "0dd12f97-9b7c-4f51-a57b-5279249a7b5d", "main_db": "vendors/dhiraagu/0dd12f97-9b7c-4f51-a57b-5279249a7b5d/53cbafc88a5882f06130b303af3dfdaa.diaout", "diff_db": "vendors/dhiraagu/0dd12f97-9b7c-4f51-a57b-5279249a7b5d/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "ruio", "uuid": "40f7c3b3-4d65-4435-98cb-2055ce533c03", "main_db": "vendors/ruio/40f7c3b3-4d65-4435-98cb-2055ce533c03/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/ruio/40f7c3b3-4d65-4435-98cb-2055ce533c03/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "ruio", "uuid": "3f7005b3-523f-4f26-86cc-43c70ffcc907", "main_db": "vendors/ruio/3f7005b3-523f-4f26-86cc-43c70ffcc907/2c5d00d114f8e05e64761e6cef44b3e4.diaout", "diff_db": "vendors/ruio/3f7005b3-523f-4f26-86cc-43c70ffcc907/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "digicel", "uuid": "2cef08d6-02a6-4352-bee6-44bc175aaa0c", "main_db": "vendors/digicel/2cef08d6-02a6-4352-bee6-44bc175aaa0c/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/digicel/2cef08d6-02a6-4352-bee6-44bc175aaa0c/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "droidlogic", "uuid": "cfc2f201-5ca9-4633-a08e-2d8e6c32eeaa", "main_db": "vendors/droidlogic/cfc2f201-5ca9-4633-a08e-2d8e6c32eeaa/53cbafc88a5882f06130b303af3dfdaa.diaout", "diff_db": "vendors/droidlogic/cfc2f201-5ca9-4633-a08e-2d8e6c32eeaa/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "azumi", "uuid": "944a0ab1-d8ff-4901-b356-5a091f2cc086", "main_db": "vendors/azumi/944a0ab1-d8ff-4901-b356-5a091f2cc086/3b415730049a6e13e83acea555fb7b48.diaout", "diff_db": "vendors/azumi/944a0ab1-d8ff-4901-b356-5a091f2cc086/baseline.diaout", "added_cnt": 4, "removed_cnt": 1, "added_funcs": ["__udivsi3", "__aeabi_uidivmod", "__aeabi_ldiv0", "__imp_raise"], "removed_funcs": ["__on_dlclose"]}, {"vendor": "true", "uuid": "606c09b3-481e-4236-a4ab-2235e3ca9bf4", "main_db": "vendors/true/606c09b3-481e-4236-a4ab-2235e3ca9bf4/088e694f56accdd62ceffcc9eda0f299.diaout", "diff_db": "vendors/true/606c09b3-481e-4236-a4ab-2235e3ca9bf4/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "gplus", "uuid": "2985df52-fab5-4f49-9ad6-a47c554eb1a3", "main_db": "vendors/gplus/2985df52-fab5-4f49-9ad6-a47c554eb1a3/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/gplus/2985df52-fab5-4f49-9ad6-a47c554eb1a3/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "mediacom", "uuid": "0f0dec3f-1a96-4728-a7c5-68606215c2fe", "main_db": "vendors/mediacom/0f0dec3f-1a96-4728-a7c5-68606215c2fe/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/mediacom/0f0dec3f-1a96-4728-a7c5-68606215c2fe/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "neffos", "uuid": "a135977a-9599-4176-bf85-545adea48f22", "main_db": "vendors/neffos/a135977a-9599-4176-bf85-545adea48f22/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/neffos/a135977a-9599-4176-bf85-545adea48f22/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "neffos", "uuid": "577f24f1-a2f5-46d7-90c2-ea0021ac8a96", "main_db": "vendors/neffos/577f24f1-a2f5-46d7-90c2-ea0021ac8a96/da5a801954c4cc67bfdec499f71c0dda.diaout", "diff_db": "vendors/neffos/577f24f1-a2f5-46d7-90c2-ea0021ac8a96/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "neffos", "uuid": "9693d45a-118c-419d-96de-23ea489f5d22", "main_db": "vendors/neffos/9693d45a-118c-419d-96de-23ea489f5d22/e6238acfce804bc97d39be1d14bd664e.diaout", "diff_db": "vendors/neffos/9693d45a-118c-419d-96de-23ea489f5d22/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "vankyo", "uuid": "4a523edd-b4c2-4358-b371-4cab0a5cb3cc", "main_db": "vendors/vankyo/4a523edd-b4c2-4358-b371-4cab0a5cb3cc/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/vankyo/4a523edd-b4c2-4358-b371-4cab0a5cb3cc/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "spc", "uuid": "34dc72eb-093d-48ee-b7aa-fbe414b3a4df", "main_db": "vendors/spc/34dc72eb-093d-48ee-b7aa-fbe414b3a4df/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/spc/34dc72eb-093d-48ee-b7aa-fbe414b3a4df/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "myphone", "uuid": "45c649f6-6375-46ce-82bd-a6b2de44b358", "main_db": "vendors/myphone/45c649f6-6375-46ce-82bd-a6b2de44b358/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/myphone/45c649f6-6375-46ce-82bd-a6b2de44b358/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "myphone", "uuid": "2c8f627b-b941-4b85-8c1f-27ee2d997a59", "main_db": "vendors/myphone/2c8f627b-b941-4b85-8c1f-27ee2d997a59/da5a801954c4cc67bfdec499f71c0dda.diaout", "diff_db": "vendors/myphone/2c8f627b-b941-4b85-8c1f-27ee2d997a59/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "hyundai", "uuid": "0e4c0f81-f32c-438c-ac65-9659c530333d", "main_db": "vendors/hyundai/0e4c0f81-f32c-438c-ac65-9659c530333d/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/hyundai/0e4c0f81-f32c-438c-ac65-9659c530333d/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "hyundai", "uuid": "d2d3db54-15c7-473b-aaa8-a745e1cdcc7e", "main_db": "vendors/hyundai/d2d3db54-15c7-473b-aaa8-a745e1cdcc7e/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/hyundai/d2d3db54-15c7-473b-aaa8-a745e1cdcc7e/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "blaupunkt", "uuid": "93bf4806-a9dd-40ca-94ac-5c0de455f842", "main_db": "vendors/blaupunkt/93bf4806-a9dd-40ca-94ac-5c0de455f842/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/blaupunkt/93bf4806-a9dd-40ca-94ac-5c0de455f842/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "invens", "uuid": "68dc168a-004d-4334-b910-969fa89d14e7", "main_db": "vendors/invens/68dc168a-004d-4334-b910-969fa89d14e7/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/invens/68dc168a-004d-4334-b910-969fa89d14e7/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "unonu", "uuid": "cfc8e850-d7a3-4b54-84ca-723c3a86e7d0", "main_db": "vendors/unonu/cfc8e850-d7a3-4b54-84ca-723c3a86e7d0/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/unonu/cfc8e850-d7a3-4b54-84ca-723c3a86e7d0/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "premio", "uuid": "85218ca7-7eb6-49cb-9954-279bc380aac9", "main_db": "vendors/premio/85218ca7-7eb6-49cb-9954-279bc380aac9/906f66d8b8b28990129d37cd3909748b.diaout", "diff_db": "vendors/premio/85218ca7-7eb6-49cb-9954-279bc380aac9/baseline.diaout", "added_cnt": 0, "removed_cnt": 1, "added_funcs": [], "removed_funcs": ["pthread_atfork"]}, {"vendor": "premio", "uuid": "f2553e9d-9f4d-4004-be1b-1e0cab5eb7e7", "main_db": "vendors/premio/f2553e9d-9f4d-4004-be1b-1e0cab5eb7e7/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/premio/f2553e9d-9f4d-4004-be1b-1e0cab5eb7e7/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "corn", "uuid": "749f6c64-9a3a-4fd5-a6af-91dadef399bf", "main_db": "vendors/corn/749f6c64-9a3a-4fd5-a6af-91dadef399bf/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/corn/749f6c64-9a3a-4fd5-a6af-91dadef399bf/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "maxon", "uuid": "fddb95b1-81b0-4ed2-86e3-6393d19c7776", "main_db": "vendors/maxon/fddb95b1-81b0-4ed2-86e3-6393d19c7776/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/maxon/fddb95b1-81b0-4ed2-86e3-6393d19c7776/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "quest", "uuid": "f2ee026d-71ea-45c5-b16e-d51fc4c1f048", "main_db": "vendors/quest/f2ee026d-71ea-45c5-b16e-d51fc4c1f048/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/quest/f2ee026d-71ea-45c5-b16e-d51fc4c1f048/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "x_tigi", "uuid": "7137cb41-8c41-4a4b-b52e-d457da155e6a", "main_db": "vendors/x_tigi/7137cb41-8c41-4a4b-b52e-d457da155e6a/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/x_tigi/7137cb41-8c41-4a4b-b52e-d457da155e6a/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "x_tigi", "uuid": "51107a1e-65e3-4d23-bf18-6622b1fbd895", "main_db": "vendors/x_tigi/51107a1e-65e3-4d23-bf18-6622b1fbd895/dfcf9a116dd5601eb0e2713d7e61c231.diaout", "diff_db": "vendors/x_tigi/51107a1e-65e3-4d23-bf18-6622b1fbd895/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "qubo", "uuid": "4b065763-709e-48b7-a2b3-d5e78a697ef6", "main_db": "vendors/qubo/4b065763-709e-48b7-a2b3-d5e78a697ef6/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/qubo/4b065763-709e-48b7-a2b3-d5e78a697ef6/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "movitel", "uuid": "6bf100ec-8a20-4895-92e9-fade916a96fd", "main_db": "vendors/movitel/6bf100ec-8a20-4895-92e9-fade916a96fd/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/movitel/6bf100ec-8a20-4895-92e9-fade916a96fd/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "movitel", "uuid": "3b70ef7f-951f-4e88-9abb-96869ca0c4fc", "main_db": "vendors/movitel/3b70ef7f-951f-4e88-9abb-96869ca0c4fc/dfcf9a116dd5601eb0e2713d7e61c231.diaout", "diff_db": "vendors/movitel/3b70ef7f-951f-4e88-9abb-96869ca0c4fc/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "yezz", "uuid": "4bde0689-c567-49d3-9f69-ec621d27072d", "main_db": "vendors/yezz/4bde0689-c567-49d3-9f69-ec621d27072d/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/yezz/4bde0689-c567-49d3-9f69-ec621d27072d/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "pritom", "uuid": "b32d93be-3b3f-46d5-a7aa-1a25da10584a", "main_db": "vendors/pritom/b32d93be-3b3f-46d5-a7aa-1a25da10584a/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/pritom/b32d93be-3b3f-46d5-a7aa-1a25da10584a/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "prestigio", "uuid": "3c940e12-c208-41a8-9c0f-bf278a1594df", "main_db": "vendors/prestigio/3c940e12-c208-41a8-9c0f-bf278a1594df/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/prestigio/3c940e12-c208-41a8-9c0f-bf278a1594df/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "prestigio", "uuid": "413c1dff-6e22-41e8-a876-d81ede3539e6", "main_db": "vendors/prestigio/413c1dff-6e22-41e8-a876-d81ede3539e6/dfcf9a116dd5601eb0e2713d7e61c231.diaout", "diff_db": "vendors/prestigio/413c1dff-6e22-41e8-a876-d81ede3539e6/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "d_light", "uuid": "ffa19773-95ed-4225-9ecf-b9e1dfdfc903", "main_db": "vendors/d_light/ffa19773-95ed-4225-9ecf-b9e1dfdfc903/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/d_light/ffa19773-95ed-4225-9ecf-b9e1dfdfc903/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "smadl", "uuid": "6c34b5d4-2c6d-41a2-a621-d396ec2c85c6", "main_db": "vendors/smadl/6c34b5d4-2c6d-41a2-a621-d396ec2c85c6/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/smadl/6c34b5d4-2c6d-41a2-a621-d396ec2c85c6/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "hurricane", "uuid": "033741c6-ff11-4725-9903-a3acc5ecef95", "main_db": "vendors/hurricane/033741c6-ff11-4725-9903-a3acc5ecef95/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/hurricane/033741c6-ff11-4725-9903-a3acc5ecef95/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "kgtel", "uuid": "0311dff1-8564-400c-87a0-4631d7090163", "main_db": "vendors/kgtel/0311dff1-8564-400c-87a0-4631d7090163/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/kgtel/0311dff1-8564-400c-87a0-4631d7090163/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "bmobile", "uuid": "cbbb6f70-3f26-4303-96c6-0e8805884b69", "main_db": "vendors/bmobile/cbbb6f70-3f26-4303-96c6-0e8805884b69/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/bmobile/cbbb6f70-3f26-4303-96c6-0e8805884b69/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "bmobile", "uuid": "6b786730-74b9-423d-bff6-78e77d601691", "main_db": "vendors/bmobile/6b786730-74b9-423d-bff6-78e77d601691/dfcf9a116dd5601eb0e2713d7e61c231.diaout", "diff_db": "vendors/bmobile/6b786730-74b9-423d-bff6-78e77d601691/baseline.diaout", "added_cnt": 2, "removed_cnt": 0, "added_funcs": ["bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "SSL_CTX_set1_tls_channel_id"], "removed_funcs": []}, {"vendor": "stylo", "uuid": "a7f927f5-14f8-4265-b88d-331b0e53fb1a", "main_db": "vendors/stylo/a7f927f5-14f8-4265-b88d-331b0e53fb1a/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/stylo/a7f927f5-14f8-4265-b88d-331b0e53fb1a/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "mobicel", "uuid": "739fa2bd-f371-4b4c-985c-36b067badb85", "main_db": "vendors/mobicel/739fa2bd-f371-4b4c-985c-36b067badb85/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/mobicel/739fa2bd-f371-4b4c-985c-36b067badb85/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "mobicel", "uuid": "155d07fa-7727-431a-b78f-8053896b0f4e", "main_db": "vendors/mobicel/155d07fa-7727-431a-b78f-8053896b0f4e/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/mobicel/155d07fa-7727-431a-b78f-8053896b0f4e/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "goodtel", "uuid": "e6d85ead-fba7-4e17-843f-b24fd0d293fd", "main_db": "vendors/goodtel/e6d85ead-fba7-4e17-843f-b24fd0d293fd/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/goodtel/e6d85ead-fba7-4e17-843f-b24fd0d293fd/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "exo", "uuid": "f86100f9-9d25-4197-a8c8-8abb6d4e886c", "main_db": "vendors/exo/f86100f9-9d25-4197-a8c8-8abb6d4e886c/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/exo/f86100f9-9d25-4197-a8c8-8abb6d4e886c/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "dixon", "uuid": "ba5aa404-5b79-484a-b6c7-2b3ebe4a64f1", "main_db": "vendors/dixon/ba5aa404-5b79-484a-b6c7-2b3ebe4a64f1/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/dixon/ba5aa404-5b79-484a-b6c7-2b3ebe4a64f1/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "gateway", "uuid": "9a940be1-a599-406c-b2a9-7632c011fd21", "main_db": "vendors/gateway/9a940be1-a599-406c-b2a9-7632c011fd21/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/gateway/9a940be1-a599-406c-b2a9-7632c011fd21/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "inoi", "uuid": "ea0abd6a-338f-4be3-bc1e-af12c4154a42", "main_db": "vendors/inoi/ea0abd6a-338f-4be3-bc1e-af12c4154a42/9a799dd5e25cd568aafacdd56d19111a.diaout", "diff_db": "vendors/inoi/ea0abd6a-338f-4be3-bc1e-af12c4154a42/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "surface", "uuid": "19378ef4-f33e-44b2-bb44-637792275b50", "main_db": "vendors/surface/19378ef4-f33e-44b2-bb44-637792275b50/88072172fc02c8c5fa734fb7043a3d5e.diaout", "diff_db": "vendors/surface/19378ef4-f33e-44b2-bb44-637792275b50/baseline.diaout", "added_cnt": 16, "removed_cnt": 16, "added_funcs": ["bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *,ssl_early_callback_ctx *)", "bssl::SSL_decline_handoff(ssl_st *)", "bssl::SSL_apply_handoff(ssl_st *,bssl::Span<unsigned char const>)", "bssl::SSL_serialize_handback(ssl_st const*,cbb_st *)", "bssl::SSL_apply_handback(ssl_st *,bssl::Span<unsigned char const>)", "bssl::SSL_SESSION_parse(cbs_st *,bssl::SSL_X509_METHOD const*,crypto_buffer_pool_st *)", "bssl::ssl_session_serialize(ssl_session_st const*,cbb_st *)", "bssl::CBBFinishArray(cbb_st *,bssl::Array<unsigned char> *)", "bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st *,bool)", "bssl::SSL_set_handoff_mode(ssl_st *,bool)", "bssl::SSL_get_traffic_secrets(ssl_st const*,bssl::Span<unsigned char const> *,bssl::Span<unsigned char const> *)", "bssl::SSL_SESSION_dup(ssl_session_st *,int)", "bssl::OpenRecord(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::SealRecordPrefixLen(ssl_st const*,unsigned long)", "bssl::SealRecordSuffixLen(ssl_st const*,unsigned long)", "bssl::SealRecord(ssl_st *,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char const>)"], "removed_funcs": ["bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *,ssl_early_callback_ctx *)", "bssl::SSL_decline_handoff(ssl_st *)", "bssl::SSL_apply_handoff(ssl_st *,bssl::Span<unsigned char const>)", "bssl::SSL_serialize_handback(ssl_st const*,cbb_st *)", "bssl::SSL_apply_handback(ssl_st *,bssl::Span<unsigned char const>)", "bssl::SSL_SESSION_parse(cbs_st *,bssl::SSL_X509_METHOD const*,crypto_buffer_pool_st *)", "bssl::ssl_session_serialize(ssl_session_st const*,cbb_st *)", "bssl::CBBFinishArray(cbb_st *,bssl::Array<unsigned char> *)", "bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st *,bool)", "bssl::SSL_set_handoff_mode(ssl_st *,bool)", "bssl::SSL_get_traffic_secrets(ssl_st const*,bssl::Span<unsigned char const> *,bssl::Span<unsigned char const> *)", "bssl::SSL_SESSION_dup(ssl_session_st *,int)", "bssl::OpenRecord(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::SealRecordPrefixLen(ssl_st const*,unsigned long)", "bssl::SealRecordSuffixLen(ssl_st const*,unsigned long)", "bssl::SealRecord(ssl_st *,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char const>)"]}, {"vendor": "surface", "uuid": "f4d59431-434f-4241-b69e-d7a7069752d2", "main_db": "vendors/surface/f4d59431-434f-4241-b69e-d7a7069752d2/3e90f86dc5f15e5a11ac86a71a08a018.diaout", "diff_db": "vendors/surface/f4d59431-434f-4241-b69e-d7a7069752d2/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blackshark", "uuid": "123b98c2-44b4-4704-9098-43c69e28edff", "main_db": "vendors/blackshark/123b98c2-44b4-4704-9098-43c69e28edff/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/blackshark/123b98c2-44b4-4704-9098-43c69e28edff/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blackshark", "uuid": "215b60e8-1b91-48c4-87e3-e661eef29056", "main_db": "vendors/blackshark/215b60e8-1b91-48c4-87e3-e661eef29056/cb58b8f233408ed5338474d2b24dde40.diaout", "diff_db": "vendors/blackshark/215b60e8-1b91-48c4-87e3-e661eef29056/baseline.diaout", "added_cnt": 0, "removed_cnt": 4, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "blackshark", "uuid": "014556c4-7ec3-4f83-a562-c4ee1f88caf2", "main_db": "vendors/blackshark/014556c4-7ec3-4f83-a562-c4ee1f88caf2/b01aab26ca0b68e966eef5d8cbb9c8a4.diaout", "diff_db": "vendors/blackshark/014556c4-7ec3-4f83-a562-c4ee1f88caf2/baseline.diaout", "added_cnt": 4, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "blackshark", "uuid": "79b6e3e0-59d7-4f98-a2af-b39f6014d7b0", "main_db": "vendors/blackshark/79b6e3e0-59d7-4f98-a2af-b39f6014d7b0/47214e845377233b740a6bd4fe50f75e.diaout", "diff_db": "vendors/blackshark/79b6e3e0-59d7-4f98-a2af-b39f6014d7b0/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "blackshark", "uuid": "df8c94d8-bf0b-4f72-bd48-cf83998ffbb1", "main_db": "vendors/blackshark/df8c94d8-bf0b-4f72-bd48-cf83998ffbb1/d5b3ee448c67fe9bd104504e9b3f1827.diaout", "diff_db": "vendors/blackshark/df8c94d8-bf0b-4f72-bd48-cf83998ffbb1/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "hdf", "uuid": "3542f99a-11c9-423b-bc66-a3c78c419866", "main_db": "vendors/hdf/3542f99a-11c9-423b-bc66-a3c78c419866/088e694f56accdd62ceffcc9eda0f299.diaout", "diff_db": "vendors/hdf/3542f99a-11c9-423b-bc66-a3c78c419866/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "docomo", "uuid": "4a71c9da-e915-4adf-afcf-587cf14fe183", "main_db": "vendors/docomo/4a71c9da-e915-4adf-afcf-587cf14fe183/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/docomo/4a71c9da-e915-4adf-afcf-587cf14fe183/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "docomo", "uuid": "71e09513-8a4d-45f9-8241-870a333c4a77", "main_db": "vendors/docomo/71e09513-8a4d-45f9-8241-870a333c4a77/06c626bca570ce4a51a8379e6115b357.diaout", "diff_db": "vendors/docomo/71e09513-8a4d-45f9-8241-870a333c4a77/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "docomo", "uuid": "a30cf697-e95b-4c2c-881d-b55db509b5a0", "main_db": "vendors/docomo/a30cf697-e95b-4c2c-881d-b55db509b5a0/d5b3ee448c67fe9bd104504e9b3f1827.diaout", "diff_db": "vendors/docomo/a30cf697-e95b-4c2c-881d-b55db509b5a0/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "zonko", "uuid": "da54d299-bae8-4dfe-8384-c4b562c24ed5", "main_db": "vendors/zonko/da54d299-bae8-4dfe-8384-c4b562c24ed5/088e694f56accdd62ceffcc9eda0f299.diaout", "diff_db": "vendors/zonko/da54d299-bae8-4dfe-8384-c4b562c24ed5/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "acepad", "uuid": "772d7013-5b26-4799-bf10-1ea8b98fd518", "main_db": "vendors/acepad/772d7013-5b26-4799-bf10-1ea8b98fd518/088e694f56accdd62ceffcc9eda0f299.diaout", "diff_db": "vendors/acepad/772d7013-5b26-4799-bf10-1ea8b98fd518/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "kyocera", "uuid": "c89fda87-3953-482a-b117-a12adf566855", "main_db": "vendors/kyocera/c89fda87-3953-482a-b117-a12adf566855/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/kyocera/c89fda87-3953-482a-b117-a12adf566855/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "wowi", "uuid": "3f3d2574-b2be-4520-abfd-494c7f2ba06b", "main_db": "vendors/wowi/3f3d2574-b2be-4520-abfd-494c7f2ba06b/1f7b400db9bf0c9ff8d0714fc534528d.diaout", "diff_db": "vendors/wowi/3f3d2574-b2be-4520-abfd-494c7f2ba06b/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "coolpad", "uuid": "f7a5e40c-7271-4a4f-9d9e-3997eb600718", "main_db": "vendors/coolpad/f7a5e40c-7271-4a4f-9d9e-3997eb600718/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/coolpad/f7a5e40c-7271-4a4f-9d9e-3997eb600718/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "coolpad", "uuid": "c167916b-50ab-4b7f-8ae3-12a79b4d8a3b", "main_db": "vendors/coolpad/c167916b-50ab-4b7f-8ae3-12a79b4d8a3b/07795463df797f53fe61f2348775dcd5.diaout", "diff_db": "vendors/coolpad/c167916b-50ab-4b7f-8ae3-12a79b4d8a3b/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "coolpad", "uuid": "03e0bef2-c7c3-4f40-9318-64524f1f2751", "main_db": "vendors/coolpad/03e0bef2-c7c3-4f40-9318-64524f1f2751/4c367a8e1f5d891d2ca73cd3dbf2d9f6.diaout", "diff_db": "vendors/coolpad/03e0bef2-c7c3-4f40-9318-64524f1f2751/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "coolpad", "uuid": "a061004f-3b6a-469c-b065-453df0b13543", "main_db": "vendors/coolpad/a061004f-3b6a-469c-b065-453df0b13543/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/coolpad/a061004f-3b6a-469c-b065-453df0b13543/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "elephone", "uuid": "b3686685-f246-403e-beed-ed32fd88c068", "main_db": "vendors/elephone/b3686685-f246-403e-beed-ed32fd88c068/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/elephone/b3686685-f246-403e-beed-ed32fd88c068/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "panasonic", "uuid": "79030ecf-5911-41a6-af92-bafe20894f56", "main_db": "vendors/panasonic/79030ecf-5911-41a6-af92-bafe20894f56/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/panasonic/79030ecf-5911-41a6-af92-bafe20894f56/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "panasonic", "uuid": "93937a98-9a89-4dc9-aa26-a27f0575df76", "main_db": "vendors/panasonic/93937a98-9a89-4dc9-aa26-a27f0575df76/3b465265ae34cd751ab8ce89aaa1b48e.diaout", "diff_db": "vendors/panasonic/93937a98-9a89-4dc9-aa26-a27f0575df76/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "hotwav", "uuid": "4b2546e8-3b6e-4af5-aa7e-ad0dc4372c08", "main_db": "vendors/hotwav/4b2546e8-3b6e-4af5-aa7e-ad0dc4372c08/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/hotwav/4b2546e8-3b6e-4af5-aa7e-ad0dc4372c08/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "hotwav", "uuid": "04f843cc-a2db-47af-a154-b9780a150609", "main_db": "vendors/hotwav/04f843cc-a2db-47af-a154-b9780a150609/3b465265ae34cd751ab8ce89aaa1b48e.diaout", "diff_db": "vendors/hotwav/04f843cc-a2db-47af-a154-b9780a150609/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}, {"vendor": "datalogic", "uuid": "c25d4036-76d0-45c6-9043-6fd1089bc155", "main_db": "vendors/datalogic/c25d4036-76d0-45c6-9043-6fd1089bc155/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/datalogic/c25d4036-76d0-45c6-9043-6fd1089bc155/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "datalogic", "uuid": "6071ba7b-517d-40a8-8ce7-7d11d374206c", "main_db": "vendors/datalogic/6071ba7b-517d-40a8-8ce7-7d11d374206c/d8df3e4c71ec03d9badcb993f8c5b70b.diaout", "diff_db": "vendors/datalogic/6071ba7b-517d-40a8-8ce7-7d11d374206c/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "stk", "uuid": "5aa2fc4f-4e2b-4d14-a31a-cc3cd97b98dc", "main_db": "vendors/stk/5aa2fc4f-4e2b-4d14-a31a-cc3cd97b98dc/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/stk/5aa2fc4f-4e2b-4d14-a31a-cc3cd97b98dc/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "casper", "uuid": "5a729ad8-3886-43ae-8184-3d6318b040a3", "main_db": "vendors/casper/5a729ad8-3886-43ae-8184-3d6318b040a3/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/casper/5a729ad8-3886-43ae-8184-3d6318b040a3/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "condor", "uuid": "31784943-5898-4390-9d3b-50a623569000", "main_db": "vendors/condor/31784943-5898-4390-9d3b-50a623569000/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/condor/31784943-5898-4390-9d3b-50a623569000/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "hoozo", "uuid": "f016d467-476c-4669-90d0-bff3877f15bf", "main_db": "vendors/hoozo/f016d467-476c-4669-90d0-bff3877f15bf/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/hoozo/f016d467-476c-4669-90d0-bff3877f15bf/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "kenbo", "uuid": "395c5ff2-64d5-4bdc-8769-70bae7dbc2b0", "main_db": "vendors/kenbo/395c5ff2-64d5-4bdc-8769-70bae7dbc2b0/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/kenbo/395c5ff2-64d5-4bdc-8769-70bae7dbc2b0/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "artel", "uuid": "b96ef156-8e29-4abf-a4b6-30a4fe6767c4", "main_db": "vendors/artel/b96ef156-8e29-4abf-a4b6-30a4fe6767c4/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/artel/b96ef156-8e29-4abf-a4b6-30a4fe6767c4/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "hotpepper", "uuid": "3f6d2718-c0e5-45ea-85ff-06d89558a5c7", "main_db": "vendors/hotpepper/3f6d2718-c0e5-45ea-85ff-06d89558a5c7/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/hotpepper/3f6d2718-c0e5-45ea-85ff-06d89558a5c7/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "smart", "uuid": "69bb144a-d1cb-4b53-9f1f-59fd37278256", "main_db": "vendors/smart/69bb144a-d1cb-4b53-9f1f-59fd37278256/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/smart/69bb144a-d1cb-4b53-9f1f-59fd37278256/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "digi_c2", "uuid": "33036628-601a-4f82-a407-9c6bb9aeced6", "main_db": "vendors/digi_c2/33036628-601a-4f82-a407-9c6bb9aeced6/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/digi_c2/33036628-601a-4f82-a407-9c6bb9aeced6/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "cherrymobile", "uuid": "4aed3343-cef0-41b6-9648-40981967ac58", "main_db": "vendors/cherrymobile/4aed3343-cef0-41b6-9648-40981967ac58/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/cherrymobile/4aed3343-cef0-41b6-9648-40981967ac58/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "ravoz", "uuid": "58915ede-d116-4b93-a3fd-fcef0f83f225", "main_db": "vendors/ravoz/58915ede-d116-4b93-a3fd-fcef0f83f225/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/ravoz/58915ede-d116-4b93-a3fd-fcef0f83f225/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "ceibal", "uuid": "9e6302e4-5862-4f94-b88e-d27b12e331ca", "main_db": "vendors/ceibal/9e6302e4-5862-4f94-b88e-d27b12e331ca/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/ceibal/9e6302e4-5862-4f94-b88e-d27b12e331ca/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "digi", "uuid": "162c8d7a-04b0-4b4c-87e2-9b310c721caa", "main_db": "vendors/digi/162c8d7a-04b0-4b4c-87e2-9b310c721caa/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/digi/162c8d7a-04b0-4b4c-87e2-9b310c721caa/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "packard_bell", "uuid": "1aa54945-1eee-4c9c-9213-6b391d6955b8", "main_db": "vendors/packard_bell/1aa54945-1eee-4c9c-9213-6b391d6955b8/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/packard_bell/1aa54945-1eee-4c9c-9213-6b391d6955b8/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "everis", "uuid": "20f80873-ea11-4078-9409-4093fd4b2f05", "main_db": "vendors/everis/20f80873-ea11-4078-9409-4093fd4b2f05/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/everis/20f80873-ea11-4078-9409-4093fd4b2f05/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "mintt", "uuid": "d772e451-91e5-4a67-aee4-29068b8b1f3d", "main_db": "vendors/mintt/d772e451-91e5-4a67-aee4-29068b8b1f3d/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/mintt/d772e451-91e5-4a67-aee4-29068b8b1f3d/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "kalley", "uuid": "9cd22c5b-64c5-4776-89f7-c4010a4ea7b0", "main_db": "vendors/kalley/9cd22c5b-64c5-4776-89f7-c4010a4ea7b0/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/kalley/9cd22c5b-64c5-4776-89f7-c4010a4ea7b0/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "iproda", "uuid": "80a05a65-b51c-48e5-a2c7-75e35514feae", "main_db": "vendors/iproda/80a05a65-b51c-48e5-a2c7-75e35514feae/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/iproda/80a05a65-b51c-48e5-a2c7-75e35514feae/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "leagoo", "uuid": "fa7e98af-1852-447e-ae01-c62b4d3db3ef", "main_db": "vendors/leagoo/fa7e98af-1852-447e-ae01-c62b4d3db3ef/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/leagoo/fa7e98af-1852-447e-ae01-c62b4d3db3ef/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "advance", "uuid": "0e4b8fd8-3b28-470d-81fa-8f36ff21aa80", "main_db": "vendors/advance/0e4b8fd8-3b28-470d-81fa-8f36ff21aa80/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/advance/0e4b8fd8-3b28-470d-81fa-8f36ff21aa80/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "digi_r2", "uuid": "bd6c305c-d27d-482b-a291-620ec041a75c", "main_db": "vendors/digi_r2/bd6c305c-d27d-482b-a291-620ec041a75c/67bb4d83362d9ba6645cff058a93219c.diaout", "diff_db": "vendors/digi_r2/bd6c305c-d27d-482b-a291-620ec041a75c/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "etalk", "uuid": "4638c656-10b1-4cbd-9360-bc8bf72759a0", "main_db": "vendors/etalk/4638c656-10b1-4cbd-9360-bc8bf72759a0/07795463df797f53fe61f2348775dcd5.diaout", "diff_db": "vendors/etalk/4638c656-10b1-4cbd-9360-bc8bf72759a0/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "bq", "uuid": "f8be9bbc-b8ab-40d9-b24f-fe5fccc635cf", "main_db": "vendors/bq/f8be9bbc-b8ab-40d9-b24f-fe5fccc635cf/d8df3e4c71ec03d9badcb993f8c5b70b.diaout", "diff_db": "vendors/bq/f8be9bbc-b8ab-40d9-b24f-fe5fccc635cf/baseline.diaout", "added_cnt": 5, "removed_cnt": 2, "added_funcs": ["__on_dlclose", "`anonymous namespace'::BumpPointerAllocator::allocate(unsigned int)", "`anonymous namespace'::itanium_demangle::ArraySubscriptExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "__ThumbV7PILongThunk_CRYPTO_MUTEX_unlock_write"], "removed_funcs": ["`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)"]}, {"vendor": "bq", "uuid": "56d2e328-824f-40ca-b9ca-4d05f7c8605e", "main_db": "vendors/bq/56d2e328-824f-40ca-b9ca-4d05f7c8605e/2e58e478d854575a44481d342155d548.diaout", "diff_db": "vendors/bq/56d2e328-824f-40ca-b9ca-4d05f7c8605e/baseline.diaout", "added_cnt": 0, "removed_cnt": 2, "added_funcs": [], "removed_funcs": ["bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "moxee", "uuid": "1b65bf84-ae24-4f75-afc5-7b6d0869677a", "main_db": "vendors/moxee/1b65bf84-ae24-4f75-afc5-7b6d0869677a/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/moxee/1b65bf84-ae24-4f75-afc5-7b6d0869677a/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "cipherlab", "uuid": "7d9105e4-b042-456c-82ba-553ce25c54c3", "main_db": "vendors/cipherlab/7d9105e4-b042-456c-82ba-553ce25c54c3/91134ef739b42d70c696426fa5b803cc.diaout", "diff_db": "vendors/cipherlab/7d9105e4-b042-456c-82ba-553ce25c54c3/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "zebra", "uuid": "b2de0261-5010-4f0e-b52d-a0fd453f6b78", "main_db": "vendors/zebra/b2de0261-5010-4f0e-b52d-a0fd453f6b78/c9442bce1c49f46d0c28c394e46b21b6.diaout", "diff_db": "vendors/zebra/b2de0261-5010-4f0e-b52d-a0fd453f6b78/baseline.diaout", "added_cnt": 70, "removed_cnt": 153, "added_funcs": ["bssl::dtls1_get_incoming_message(ssl_st *,unsigned char *,bssl::hm_header_st const*)", "OPENSSL_memcpy(void *,void const*,unsigned int)", "bssl::dtls1_hm_fragment_mark(bssl::hm_fragment *,unsigned int,unsigned int)", "bssl::dtls1_get_message(ssl_st const*,bssl::SSLMessage *)", "OPENSSL_memset(void *,int,unsigned int)", "bssl::dtls1_bitmap_should_discard(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::dtls1_bitmap_record(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *,ssl_early_callback_ctx *)", "bssl::serialize_features(cbb_st *)", "std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>::operator=(std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>&&)", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::Array<unsigned short>::Init(unsigned int)", "bssl::SSL_HANDSHAKE::ResizeSecrets(unsigned int)", "bssl::ssl3_get_message(ssl_st const*,bssl::SSLMessage *)", "bssl::read_v2_client_hello(ssl_st *,unsigned int *,bssl::Span<unsigned char const>)", "bssl::ssl_choose_tls13_cipher(cbs_st,unsigned short,unsigned short)", "bssl::ssl_send_alert_impl(ssl_st *,int,int)", "bssl::ssl3_write_pending(ssl_st *,int,unsigned char const*,unsigned int)", "bssl::SSL_SESSION_parse_long(cbs_st *,long *,unsigned int,long)", "bssl::SSL_SESSION_parse_string(cbs_st *,std::__1::unique_ptr<char,bssl::internal::Deleter<char>> *,unsigned int)", "bssl::SSL_SESSION_parse_u32(cbs_st *,unsigned int *,unsigned int,unsigned int)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,bssl::Array<unsigned char> *,unsigned int)", "bssl::SSL_SESSION_parse_u16(cbs_st *,unsigned short *,unsigned int,unsigned short)", "SSL_delegated_credential_used", "std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>::operator=(std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>&&)", "SSL_CIPHER_get_value", "__cxxabiv1::__function_type_info::can_catch(__cxxabiv1::__shim_type_info const*,void *&)const", "bssl::Array<unsigned char>::Init(unsigned int)", "__cxxabiv1::__shim_type_info::noop2(void)const", "bssl::ssl_set_read_error(ssl_st *)", "bssl::ssl_log_secret(ssl_st const*,char const*,bssl::Span<unsigned char const>)", "bssl::ssl_do_msg_callback(ssl_st const*,int,int,bssl::Span<unsigned char const>)", "bssl::ssl_maybe_shed_handshake_config(ssl_st *)", "SSL_CTX_enable_pq_experiment_signal", "SSL_pq_experiment_signal_seen", "SSL_get_early_data_reason", "SSL_error_description", "bssl::GrowableArray<bssl::CertCompressionAlg>::MaybeGrow(void)", "SSL_SESSION_early_data_capable", "bssl::SSLTranscript::CopyToHashContext(env_md_ctx_st *,env_md_st const*)", "SSL_CTX_get_min_proto_version", "SSL_CTX_get_max_proto_version", "SSL_get_min_proto_version", "SSL_get_max_proto_version", "bssl::ssl_client_hello_init(ssl_st const*,ssl_early_callback_ctx *,bssl::SSLMessage const&)", "bssl::ssl_ext_pre_shared_key_parse_clienthello(bssl::SSL_HANDSHAKE *,cbs_st *,cbs_st *,unsigned int *,unsigned char *,ssl_early_callback_ctx const*,cbs_st *)", "bssl::ssl_decrypt_ticket_with_ticket_keys(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,bssl::Span<unsigned char const>)", "bssl::ext_pq_experiment_signal_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_pq_experiment_signal_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::select_tb_param(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_init_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_init_early_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_advance_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::hkdf_expand_label(bssl::Span<unsigned char>,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>)", "bssl::tls13_set_traffic_key(ssl_st *,ssl_encryption_level_t,evp_aead_direction_t,bssl::Span<unsigned char const>)", "bssl::tls13_derive_early_secret(bssl::SSL_HANDSHAKE *)", "bssl::tls13_set_early_secret_for_quic(bssl::SSL_HANDSHAKE *)", "bssl::set_quic_secrets(bssl::SSL_HANDSHAKE *,ssl_encryption_level_t,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls13_write_psk_binder(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char>)", "bssl::hash_transcript_and_truncated_client_hello(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned int *,env_md_st const*,bssl::Span<unsigned char const>,unsigned int)", "bssl::tls13_psk_binder(unsigned char *,unsigned int *,unsigned short,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::skip_early_data(ssl_st *,unsigned char *,unsigned int)", "__cxxabiv1::exception_spec_can_catch(long long,unsigned char const*,unsigned char,__cxxabiv1::__shim_type_info const*,void *,_Unwind_Control_Block *)", "__cxxabiv1::__pointer_to_member_type_info::can_catch_nested(__cxxabiv1::__shim_type_info const*)const", "__ThumbV7PILongThunk___aeabi_memcpy", "__ThumbV7PILongThunk_ERR_SAVE_STATE_free", "__imp_EVP_MD_type", "__imp_dl_unwind_find_exidx"], "removed_funcs": ["bssl::dtls1_get_message(ssl_st *,bssl::SSLMessage *)", "bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *)", "bssl::ssl3_get_message(ssl_st *,bssl::SSLMessage *)", "`anonymous namespace'::itanium_demangle::Node::hasRHSComponentSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::Node::getSyntaxNode(`anonymous namespace'::OutputStream &)const", "bssl::ssl_log_secret(ssl_st const*,char const*,unsigned char const*,unsigned int)", "bssl::ssl_do_msg_callback(ssl_st *,int,int,bssl::Span<unsigned char const>)", "bssl::internal::DeleterImpl<stack_st_CertCompressionAlg,void>::Free(stack_st_CertCompressionAlg*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "SSL_export_early_keying_material", "bssl::ssl_client_hello_init(ssl_st *,ssl_early_callback_ctx *,bssl::SSLMessage const&)", "bssl::ssl_ext_pre_shared_key_parse_clienthello(bssl::SSL_HANDSHAKE *,cbs_st *,cbs_st *,unsigned int *,unsigned char *,cbs_st *)", "bssl::tls13_init_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned int)", "bssl::tls13_init_early_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned int)", "bssl::tls13_advance_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned int)", "bssl::hkdf_expand_label(unsigned char *,env_md_st const*,unsigned char const*,unsigned int,char const*,unsigned int,unsigned char const*,unsigned int,unsigned int)", "bssl::tls13_set_traffic_key(ssl_st *,ssl_encryption_level_t,evp_aead_direction_t,unsigned char const*,unsigned int)", "bssl::tls13_derive_early_secrets(bssl::SSL_HANDSHAKE *)", "bssl::tls13_write_psk_binder(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned int)", "bssl::tls13_psk_binder(unsigned char *,unsigned short,env_md_st const*,unsigned char *,unsigned int,unsigned char *,unsigned int,unsigned int)", "snprintf(char *,unsigned int  {pass_object_size1},char const*,...)", "libunwind::LocalAddressSpace::findUnwindSections(unsigned int,libunwind::UnwindInfoSections &)::{lambda(dl_phdr_info *,unsigned int,void *)#1}::__invoke(dl_phdr_info *,unsigned int,void *)", "__cxa_demangle", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseEncoding(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseType(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseName(`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::NameState *)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseTemplateArg(void)", "`anonymous namespace'::itanium_demangle::PODSmallVector<`anonymous namespace'::itanium_demangle::Node *,32u>::push_back(`anonymous namespace'::itanium_demangle::Node * const&)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseCallOffset(void)", "`anonymous namespace'::itanium_demangle::SpecialName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::Node::getBaseName(void)const", "`anonymous namespace'::itanium_demangle::ThrowExpr::~ThrowExpr()", "`anonymous namespace'::itanium_demangle::CtorVtableSpecialName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseSubstitution(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseTemplateArgs(bool)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseTemplateParam(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseDecltype(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseCtorDtorName(`anonymous namespace'::itanium_demangle::Node *&,`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::NameState *)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseAbiTags(`anonymous namespace'::itanium_demangle::Node *)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseUnqualifiedName(`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::NameState *)", "`anonymous namespace'::itanium_demangle::NameType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NameType::getBaseName(void)const", "`anonymous namespace'::itanium_demangle::LocalName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::QualifiedName::getBaseName(void)const", "`anonymous namespace'::itanium_demangle::ForwardTemplateReference::hasRHSComponentSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ForwardTemplateReference::hasArraySlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ForwardTemplateReference::hasFunctionSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ForwardTemplateReference::getSyntaxNode(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ForwardTemplateReference::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ForwardTemplateReference::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseExpr(void)", "`anonymous namespace'::itanium_demangle::Node * `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::make<`anonymous namespace'::itanium_demangle::EnclosingExpr,char const(&)[9],`anonymous namespace'::itanium_demangle::Node *&,char const(&)[2]>(char const(&)[9],`anonymous namespace'::itanium_demangle::Node *&,char const(&)[2] &&)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseExprPrimary(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseFunctionParam(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseBinaryExpr(`anonymous namespace'::StringView)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parsePrefixExpr(`anonymous namespace'::StringView)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseUnresolvedName(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseBracedExpr(void)", "`anonymous namespace'::itanium_demangle::Node * `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::make<`anonymous namespace'::itanium_demangle::EnclosingExpr,char const(&)[12],`anonymous namespace'::itanium_demangle::Node *&,char const(&)[2]>(char const(&)[12],`anonymous namespace'::itanium_demangle::Node *&,char const(&)[2] &&)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseIntegerLiteral(`anonymous namespace'::StringView)", "`anonymous namespace'::itanium_demangle::IntegerLiteral::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::BoolExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FloatLiteralImpl<float>::printLeft(`anonymous namespace'::OutputStream &)const", "_ZL8snprintfPcU17pass_object_size1jPKcz_0", "`anonymous namespace'::itanium_demangle::FloatLiteralImpl<double>::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FloatLiteralImpl<long double>::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::IntegerCastExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FunctionParam::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FoldExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ParameterPackExpansion::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::BinaryExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::PrefixExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::CastExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::CallExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray::printWithComma(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NodeArray `anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::makeNodeArray<`anonymous namespace'::itanium_demangle::Node **>(`anonymous namespace'::itanium_demangle::Node **,`anonymous namespace'::itanium_demangle::Node **)", "`anonymous namespace'::itanium_demangle::ConversionExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::DeleteExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseUnresolvedType(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseBaseUnresolvedName(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseSourceName(`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::NameState *)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseOperatorName(`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::NameState *)", "`anonymous namespace'::itanium_demangle::DtorName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ConversionOperatorType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::LiteralOperator::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::GlobalQualifiedName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NameWithTemplateArgs::getBaseName(void)const", "`anonymous namespace'::itanium_demangle::MemberExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::BracedExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::BracedRangeExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::InitListExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NewExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::EnclosingExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ConditionalExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SizeofParamPackExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::TemplateArgumentPack::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ThrowExpr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ExpandedSpecialSubstitution::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ExpandedSpecialSubstitution::getBaseName(void)const", "`anonymous namespace'::itanium_demangle::CtorDtorName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::AbiTagAttr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::UnnamedTypeName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ClosureTypeName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::StructuredBindingName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::SpecialSubstitution::getBaseName(void)const", "`anonymous namespace'::itanium_demangle::ParameterPack::hasRHSComponentSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ParameterPack::hasArraySlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ParameterPack::hasFunctionSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ParameterPack::getSyntaxNode(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ParameterPack::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ParameterPack::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::TemplateArgs::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::NameWithTemplateArgs::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::StdQualifiedName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::EnableIfAttr::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ArrayType::hasRHSComponentSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FunctionEncoding::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FunctionEncoding::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::DotSuffix::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseFunctionType(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseQualifiedType(void)", "`anonymous namespace'::itanium_demangle::AbstractManglingParser<`anonymous namespace'::itanium_demangle::ManglingParser<`anonymous namespace'::DefaultAllocator>,`anonymous namespace'::DefaultAllocator>::parseClassEnumType(void)", "`anonymous namespace'::itanium_demangle::NoexceptSpec::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::DynamicExceptionSpec::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FunctionType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::FunctionType::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ObjCProtoName::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::VendorExtQualType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::QualType::hasRHSComponentSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::QualType::hasArraySlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::QualType::hasFunctionSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::QualType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::QualType::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::PixelVectorType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::VectorType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ArrayType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ArrayType::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::PointerToMemberType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::PointerToMemberType::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ElaboratedTypeSpefType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ReferenceType::hasRHSComponentSlow(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::PointerType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::PointerType::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ReferenceType::printLeft(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::ReferenceType::printRight(`anonymous namespace'::OutputStream &)const", "`anonymous namespace'::itanium_demangle::PostfixQualifiedType::printLeft(`anonymous namespace'::OutputStream &)const", "__imp___memmove_chk", "__imp___vsnprintf_chk", "__imp_islower", "__imp_isxdigit", "__imp_realloc", "__imp_dl_iterate_phdr", "__imp_dladdr"]}, {"vendor": "hafury", "uuid": "140f25ac-b491-4660-9ace-23eebc083d0a", "main_db": "vendors/hafury/140f25ac-b491-4660-9ace-23eebc083d0a/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/hafury/140f25ac-b491-4660-9ace-23eebc083d0a/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "gomobile", "uuid": "d4fdc541-cffa-44f6-9c87-7dcf15717a0e", "main_db": "vendors/gomobile/d4fdc541-cffa-44f6-9c87-7dcf15717a0e/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/gomobile/d4fdc541-cffa-44f6-9c87-7dcf15717a0e/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "rt_project", "uuid": "9c04f360-feb7-46c5-99b5-307f7582fe12", "main_db": "vendors/rt_project/9c04f360-feb7-46c5-99b5-307f7582fe12/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/rt_project/9c04f360-feb7-46c5-99b5-307f7582fe12/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "iris", "uuid": "3c3e639e-0f05-4ec1-a2f3-07e9fc65187b", "main_db": "vendors/iris/3c3e639e-0f05-4ec1-a2f3-07e9fc65187b/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/iris/3c3e639e-0f05-4ec1-a2f3-07e9fc65187b/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "tm_cell", "uuid": "b1fe2969-a9e7-4e7f-91ba-9a2962dcc68a", "main_db": "vendors/tm_cell/b1fe2969-a9e7-4e7f-91ba-9a2962dcc68a/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/tm_cell/b1fe2969-a9e7-4e7f-91ba-9a2962dcc68a/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "yestel", "uuid": "227e3f49-7d29-4a91-a664-f157d300bdff", "main_db": "vendors/yestel/227e3f49-7d29-4a91-a664-f157d300bdff/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/yestel/227e3f49-7d29-4a91-a664-f157d300bdff/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "techpad", "uuid": "891856f8-89e8-474e-aaa4-aff42c97c915", "main_db": "vendors/techpad/891856f8-89e8-474e-aaa4-aff42c97c915/455ea76b435971fbeb4bf78c9aacc706.diaout", "diff_db": "vendors/techpad/891856f8-89e8-474e-aaa4-aff42c97c915/baseline.diaout", "added_cnt": 7, "removed_cnt": 2, "added_funcs": ["bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": ["__on_dlclose", "pthread_atfork"]}, {"vendor": "amazon", "uuid": "aa422da6-de72-4ed0-8733-3a686e553182", "main_db": "vendors/amazon/aa422da6-de72-4ed0-8733-3a686e553182/c03fc167ba59d5ac4defb658dd25766d.diaout", "diff_db": "vendors/amazon/aa422da6-de72-4ed0-8733-3a686e553182/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "essential", "uuid": "6f35e673-cf71-4e54-8d11-1e8fb9c27407", "main_db": "vendors/essential/6f35e673-cf71-4e54-8d11-1e8fb9c27407/6fd29e87699a6dae8f878446a63d93ce.diaout", "diff_db": "vendors/essential/6f35e673-cf71-4e54-8d11-1e8fb9c27407/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "qti", "uuid": "2cf12449-75d5-485c-ae0b-a7bd9ac6ac94", "main_db": "vendors/qti/2cf12449-75d5-485c-ae0b-a7bd9ac6ac94/cb58b8f233408ed5338474d2b24dde40.diaout", "diff_db": "vendors/qti/2cf12449-75d5-485c-ae0b-a7bd9ac6ac94/baseline.diaout", "added_cnt": 0, "removed_cnt": 4, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "umx", "uuid": "0237e7d0-dbd3-4c07-a505-b399a21910e7", "main_db": "vendors/umx/0237e7d0-dbd3-4c07-a505-b399a21910e7/4c367a8e1f5d891d2ca73cd3dbf2d9f6.diaout", "diff_db": "vendors/umx/0237e7d0-dbd3-4c07-a505-b399a21910e7/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "lt", "uuid": "f6eef9b1-4c22-421a-ba97-766c98d46e01", "main_db": "vendors/lt/f6eef9b1-4c22-421a-ba97-766c98d46e01/4c367a8e1f5d891d2ca73cd3dbf2d9f6.diaout", "diff_db": "vendors/lt/f6eef9b1-4c22-421a-ba97-766c98d46e01/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "razer", "uuid": "a9496dac-ef5e-4b5e-ab5c-48ed14ca8968", "main_db": "vendors/razer/a9496dac-ef5e-4b5e-ab5c-48ed14ca8968/74fed9ef508d651fa777acefbaa4026d.diaout", "diff_db": "vendors/razer/a9496dac-ef5e-4b5e-ab5c-48ed14ca8968/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "razer", "uuid": "55de1735-9df3-40bb-bd12-b54a40fdf15d", "main_db": "vendors/razer/55de1735-9df3-40bb-bd12-b54a40fdf15d/06c626bca570ce4a51a8379e6115b357.diaout", "diff_db": "vendors/razer/55de1735-9df3-40bb-bd12-b54a40fdf15d/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "vodafone", "uuid": "766b5e36-ee06-4fd4-b01e-d2f39b247fe0", "main_db": "vendors/vodafone/766b5e36-ee06-4fd4-b01e-d2f39b247fe0/4c367a8e1f5d891d2ca73cd3dbf2d9f6.diaout", "diff_db": "vendors/vodafone/766b5e36-ee06-4fd4-b01e-d2f39b247fe0/baseline.diaout", "added_cnt": 0, "removed_cnt": 3, "added_funcs": [], "removed_funcs": ["bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)"]}, {"vendor": "yandex", "uuid": "b265e767-00b8-41f3-9f83-972789592178", "main_db": "vendors/yandex/b265e767-00b8-41f3-9f83-972789592178/06c626bca570ce4a51a8379e6115b357.diaout", "diff_db": "vendors/yandex/b265e767-00b8-41f3-9f83-972789592178/baseline.diaout", "added_cnt": 0, "removed_cnt": 5, "added_funcs": [], "removed_funcs": ["pthread_atfork", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "celero5g", "uuid": "1a58ddec-3102-49a7-917a-f2622e3f4e57", "main_db": "vendors/celero5g/1a58ddec-3102-49a7-917a-f2622e3f4e57/ea7e9bd44cb9a256fa2164747228e6f1.diaout", "diff_db": "vendors/celero5g/1a58ddec-3102-49a7-917a-f2622e3f4e57/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "whoop", "uuid": "9465586f-5680-49da-bb49-190752e65ef0", "main_db": "vendors/whoop/9465586f-5680-49da-bb49-190752e65ef0/ea7e9bd44cb9a256fa2164747228e6f1.diaout", "diff_db": "vendors/whoop/9465586f-5680-49da-bb49-190752e65ef0/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "iku", "uuid": "bfaea356-3756-42a2-b4d5-ed89ce9b0b24", "main_db": "vendors/iku/bfaea356-3756-42a2-b4d5-ed89ce9b0b24/ea7e9bd44cb9a256fa2164747228e6f1.diaout", "diff_db": "vendors/iku/bfaea356-3756-42a2-b4d5-ed89ce9b0b24/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "beista", "uuid": "0ad12fc2-e99d-4bd8-8440-6a0ecf7195c2", "main_db": "vendors/beista/0ad12fc2-e99d-4bd8-8440-6a0ecf7195c2/ed05f83d415f04707a1e1f541dfa00a2.diaout", "diff_db": "vendors/beista/0ad12fc2-e99d-4bd8-8440-6a0ecf7195c2/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "beista", "uuid": "1e85f2b7-4041-43d9-8f6d-f81ab3f4f317", "main_db": "vendors/beista/1e85f2b7-4041-43d9-8f6d-f81ab3f4f317/8d4b2063ecf42a1a528090bce66c48d9.diaout", "diff_db": "vendors/beista/1e85f2b7-4041-43d9-8f6d-f81ab3f4f317/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "yotopt", "uuid": "5adee9b3-e22a-4158-b207-f0ca9d778b1f", "main_db": "vendors/yotopt/5adee9b3-e22a-4158-b207-f0ca9d778b1f/ed05f83d415f04707a1e1f541dfa00a2.diaout", "diff_db": "vendors/yotopt/5adee9b3-e22a-4158-b207-f0ca9d778b1f/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "yotopt", "uuid": "b027082d-2606-482d-b73f-8d00711dbd32", "main_db": "vendors/yotopt/b027082d-2606-482d-b73f-8d00711dbd32/7125de3112081926ead6ebbde2b2c619.diaout", "diff_db": "vendors/yotopt/b027082d-2606-482d-b73f-8d00711dbd32/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "hanyeal", "uuid": "7ef7e720-19f1-4426-b3d8-762c53fec8ef", "main_db": "vendors/hanyeal/7ef7e720-19f1-4426-b3d8-762c53fec8ef/ed05f83d415f04707a1e1f541dfa00a2.diaout", "diff_db": "vendors/hanyeal/7ef7e720-19f1-4426-b3d8-762c53fec8ef/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "sta", "uuid": "47e17489-cb85-46e2-af94-bcc1cd773f02", "main_db": "vendors/sta/47e17489-cb85-46e2-af94-bcc1cd773f02/ed05f83d415f04707a1e1f541dfa00a2.diaout", "diff_db": "vendors/sta/47e17489-cb85-46e2-af94-bcc1cd773f02/baseline.diaout", "added_cnt": 4, "removed_cnt": 0, "added_funcs": ["bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned int *,unsigned int)", "bssl::Array<int>::Init(unsigned int)", "bssl::Array<unsigned short>::Init(unsigned int)", "__imp___android_log_print"], "removed_funcs": []}, {"vendor": "digma", "uuid": "9fec6186-1338-45bd-868f-65ba8373b55b", "main_db": "vendors/digma/9fec6186-1338-45bd-868f-65ba8373b55b/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/digma/9fec6186-1338-45bd-868f-65ba8373b55b/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "umax", "uuid": "563486cd-8eec-4b3d-92b9-125c6245c6b2", "main_db": "vendors/umax/563486cd-8eec-4b3d-92b9-125c6245c6b2/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/umax/563486cd-8eec-4b3d-92b9-125c6245c6b2/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "eksx", "uuid": "337ed173-7447-4d27-9f36-8da2f9dc9264", "main_db": "vendors/eksx/337ed173-7447-4d27-9f36-8da2f9dc9264/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/eksx/337ed173-7447-4d27-9f36-8da2f9dc9264/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "mafe", "uuid": "8c2aa076-2163-4b9f-a98a-f7c3f7b81c1e", "main_db": "vendors/mafe/8c2aa076-2163-4b9f-a98a-f7c3f7b81c1e/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/mafe/8c2aa076-2163-4b9f-a98a-f7c3f7b81c1e/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "pipo", "uuid": "d20207c8-dab7-4f65-ba84-5d395ec5b9e7", "main_db": "vendors/pipo/d20207c8-dab7-4f65-ba84-5d395ec5b9e7/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/pipo/d20207c8-dab7-4f65-ba84-5d395ec5b9e7/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "haoqin", "uuid": "b69997b5-6faa-4168-af8b-32e4204a54aa", "main_db": "vendors/haoqin/b69997b5-6faa-4168-af8b-32e4204a54aa/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/haoqin/b69997b5-6faa-4168-af8b-32e4204a54aa/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "kodak", "uuid": "d1d6024f-0c4f-4955-b40a-bf15d400696e", "main_db": "vendors/kodak/d1d6024f-0c4f-4955-b40a-bf15d400696e/3730c0710339c1920b877f9f20c52983.diaout", "diff_db": "vendors/kodak/d1d6024f-0c4f-4955-b40a-bf15d400696e/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "viettel", "uuid": "0930d945-3ca2-43b0-a51e-f3653f4c043a", "main_db": "vendors/viettel/0930d945-3ca2-43b0-a51e-f3653f4c043a/edd791083a20bcd7f8206e5d1b383a08.diaout", "diff_db": "vendors/viettel/0930d945-3ca2-43b0-a51e-f3653f4c043a/baseline.diaout", "added_cnt": 1, "removed_cnt": 0, "added_funcs": ["__on_dlclose"], "removed_funcs": []}, {"vendor": "microtech", "uuid": "0472b12b-6379-4a46-bc38-f64eed5084be", "main_db": "vendors/microtech/0472b12b-6379-4a46-bc38-f64eed5084be/cc39ff21828bf966f12db3bd3a8a2e45.diaout", "diff_db": "vendors/microtech/0472b12b-6379-4a46-bc38-f64eed5084be/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "verizon", "uuid": "b9432816-e4da-4d46-8182-96975c8b2110", "main_db": "vendors/verizon/b9432816-e4da-4d46-8182-96975c8b2110/7e79d51f95d994eb49e893a510794f5c.diaout", "diff_db": "vendors/verizon/b9432816-e4da-4d46-8182-96975c8b2110/baseline.diaout", "added_cnt": 29, "removed_cnt": 4, "added_funcs": ["BIO_new_ssl(ssl_ctx_st *,int)", "BIO_new_ssl_connect(ssl_ctx_st *)", "BIO_new_buffer_ssl_connect(ssl_ctx_st *)", "BIO_ssl_shutdown(bio_st *)", "SSL_CIPHER_is_DHE", "bssl::SSLKeyShare::Create(dh_st *)", "bssl::SSLKeyShare::GroupID(void)const", "bssl::`anonymous namespace'::DHEKeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::DHEKeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "SSL_CTX_set_tmp_dh", "SSL_set_tmp_dh", "SSL_CTX_set_tmp_dh_callback", "SSL_set_tmp_dh_callback", "SSL_set_session_secret_cb", "SSL_set_session_ticket_ext_cb", "SSL_set_session_ticket_ext", "__imp_BIO_f_buffer", "__imp_BIO_push", "__imp_BIO_s_connect", "__imp_DH_free", "__imp_DH_new", "__imp_DH_num_bits", "__imp_BN_num_bytes", "__imp_DHparams_dup", "__imp_EVP_aead_rc4_sha1_ssl3", "__imp_EVP_aead_rc4_sha1_tls", "__imp_DH_compute_key", "__imp_DH_generate_key", "__imp_DH_size"], "removed_funcs": ["bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::tls_extension_find(unsigned int *,unsigned short)"]}, {"vendor": "magch", "uuid": "de94647f-d5d8-4356-8317-9a27e1f8a7e9", "main_db": "vendors/magch/de94647f-d5d8-4356-8317-9a27e1f8a7e9/e1bf51faef89ee4dd90f49c7f1b908e9.diaout", "diff_db": "vendors/magch/de94647f-d5d8-4356-8317-9a27e1f8a7e9/baseline.diaout", "added_cnt": 0, "removed_cnt": 0, "added_funcs": [], "removed_funcs": []}, {"vendor": "sg", "uuid": "e620db19-39d8-4427-8e3b-907f638f6713", "main_db": "vendors/sg/e620db19-39d8-4427-8e3b-907f638f6713/d9f7a00d0e412adc7ea3339db0c88f7a.diaout", "diff_db": "vendors/sg/e620db19-39d8-4427-8e3b-907f638f6713/baseline.diaout", "added_cnt": 515, "removed_cnt": 515, "added_funcs": ["ssl_write(bio_st *,char const*,int)", "ssl_read(bio_st *,char *,int)", "ssl_ctrl(bio_st *,int,long,void *)", "ssl_new(bio_st *)", "ssl_free(bio_st *)", "ssl_callback_ctrl(bio_st *,int,long (*)(bio_st *,int,char const*,int,long,long))", "bssl::hm_fragment::~hm_fragment()", "bssl::dtls1_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::dtls1_parse_fragment(cbs_st *,bssl::hm_header_st *,cbs_st *)", "bssl::dtls1_get_incoming_message(ssl_st *,unsigned char *,bssl::hm_header_st const*)", "bssl::dtls1_hm_fragment_mark(bssl::hm_fragment *,unsigned long,unsigned long)", "bssl::dtls1_get_message(ssl_st const*,bssl::SSLMessage *)", "bssl::dtls1_next_message(ssl_st *)", "bssl::dtls_has_unprocessed_handshake_data(ssl_st const*)", "bssl::dtls1_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::DTLS_OUTGOING_MESSAGE::Clear(void)", "bssl::dtls_clear_outgoing_messages(ssl_st *)", "bssl::dtls1_init_message(ssl_st *,cbb_st *,cbb_st *,unsigned char)", "bssl::dtls1_finish_message(ssl_st *,cbb_st *,bssl::Array<unsigned char> *)", "bssl::dtls1_add_message(ssl_st *,bssl::Array<unsigned char>)", "bssl::add_outgoing(ssl_st *,bool,bssl::Array<unsigned char>)", "bssl::dtls1_add_change_cipher_spec(ssl_st *)", "bssl::dtls1_flush_flight(ssl_st *)", "bssl::send_flight(ssl_st *)", "bssl::dtls1_retransmit_outgoing_messages(ssl_st *)", "bssl::dtls1_min_mtu(void)", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::dtls1_new(ssl_st *)", "bssl::dtls1_free(ssl_st *)", "bssl::dtls1_start_timer(ssl_st *)", "bssl::dtls1_stop_timer(ssl_st *)", "bssl::dtls1_check_timeout_num(ssl_st *)", "bssl::dtls1_open_app_data(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::dtls1_write_app_data(ssl_st *,bool *,unsigned char const*,int)", "bssl::dtls1_write_record(ssl_st *,int,unsigned char const*,unsigned long,bssl::dtls1_use_epoch_t)", "bssl::dtls1_dispatch_alert(ssl_st *)", "ssl_ctx_make_profiles(char const*,std::__1::unique_ptr<stack_st_SRTP_PROTECTION_PROFILE,bssl::internal::Deleter<stack_st_SRTP_PROTECTION_PROFILE>> *)", "dtls1_on_handshake_complete(ssl_st *)", "dtls1_set_read_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "dtls1_set_write_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::dtls_open_record(ssl_st *,unsigned char *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::dtls1_bitmap_should_discard(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::dtls1_bitmap_record(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::dtls_max_seal_overhead(ssl_st const*,bssl::dtls1_use_epoch_t)", "bssl::dtls_seal_prefix_len(ssl_st const*,bssl::dtls1_use_epoch_t)", "bssl::dtls_seal_record(ssl_st *,unsigned char *,unsigned long *,unsigned long,unsigned char,unsigned char const*,unsigned long,bssl::dtls1_use_epoch_t)", "bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *,ssl_early_callback_ctx *)", "bssl::serialize_features(cbb_st *)", "bssl::SSL_decline_handoff(ssl_st *)", "bssl::SSL_apply_handoff(ssl_st *,bssl::Span<unsigned char const>)", "bssl::SSL_serialize_handback(ssl_st const*,cbb_st *)", "bssl::SSL_apply_handback(ssl_st *,bssl::Span<unsigned char const>)", "std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>::operator=(std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>&&)", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::Array<unsigned short>::Init(unsigned long)", "bssl::SSL_HANDSHAKE::~SSL_HANDSHAKE()", "bssl::SSL_HANDSHAKE::ResizeSecrets(unsigned long)", "bssl::ssl_handshake_new(ssl_st *)", "bssl::ssl_check_message_type(ssl_st *,bssl::SSLMessage const&,int)", "bssl::ssl_add_message_cbb(ssl_st *,cbb_st *)", "bssl::ssl_max_handshake_message_len(ssl_st const*)", "bssl::ssl_hash_message(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&)", "bssl::ssl_parse_extensions(cbs_st const*,unsigned char *,bssl::SSL_EXTENSION_TYPE const*,unsigned long,int)", "bssl::ssl_verify_peer_cert(bssl::SSL_HANDSHAKE *)", "bssl::ssl_reverify_peer_cert(bssl::SSL_HANDSHAKE *)", "bssl::ssl_get_grease_value(bssl::SSL_HANDSHAKE *,bssl::ssl_grease_index_t)", "bssl::ssl_get_finished(bssl::SSL_HANDSHAKE *)", "bssl::ssl_send_finished(bssl::SSL_HANDSHAKE *)", "bssl::ssl_output_cert_chain(bssl::SSL_HANDSHAKE *)", "bssl::ssl_run_handshake(bssl::SSL_HANDSHAKE *,bool *)", "bssl::internal::DeleterImpl<stack_st_CRYPTO_BUFFER,void>::Free(stack_st_CRYPTO_BUFFER*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::ssl_write_client_hello(bssl::SSL_HANDSHAKE *)", "bssl::ssl_client_handshake(bssl::SSL_HANDSHAKE *)", "bssl::ssl_client_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl_client_cipher_list_contains_cipher(ssl_early_callback_ctx const*,unsigned short)", "bssl::ssl_server_handshake(bssl::SSL_HANDSHAKE *)", "bssl::ssl_server_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl3_init_message(ssl_st *,cbb_st *,cbb_st *,unsigned char)", "bssl::ssl3_finish_message(ssl_st *,cbb_st *,bssl::Array<unsigned char> *)", "bssl::ssl3_add_message(ssl_st *,bssl::Array<unsigned char>)", "bssl::add_record_to_flight(ssl_st *,unsigned char,bssl::Span<unsigned char const>)", "bssl::tls_flush_pending_hs_data(ssl_st *)", "bssl::ssl3_add_change_cipher_spec(ssl_st *)", "bssl::ssl3_flush_flight(ssl_st *)", "bssl::ssl3_get_message(ssl_st const*,bssl::SSLMessage *)", "bssl::parse_message(ssl_st const*,bssl::SSLMessage *,unsigned long *)", "bssl::tls_can_accept_handshake_data(ssl_st const*,unsigned char *)", "bssl::tls_has_unprocessed_handshake_data(ssl_st const*)", "bssl::tls_append_handshake_data(ssl_st *,bssl::Span<unsigned char const>)", "bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::read_v2_client_hello(ssl_st *,unsigned long *,bssl::Span<unsigned char const>)", "bssl::ssl3_next_message(ssl_st *)", "bssl::ssl_choose_tls13_cipher(cbs_st,unsigned short,unsigned short)", "bssl::SSL3_STATE::~SSL3_STATE()", "bssl::ssl3_new(ssl_st *)", "bssl::ssl3_free(ssl_st *)", "bssl::ssl3_write_app_data(ssl_st *,bool *,unsigned char const*,int)", "bssl::do_ssl3_write(ssl_st *,int,unsigned char const*,unsigned int)", "bssl::ssl3_open_app_data(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl3_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_send_alert(ssl_st *,int,int)", "bssl::ssl_send_alert_impl(ssl_st *,int,int)", "bssl::ssl3_dispatch_alert(ssl_st *)", "bssl::ssl3_write_pending(ssl_st *,int,unsigned char const*,unsigned int)", "bssl::SSLAEADContext::~SSLAEADContext()", "bssl::SSLAEADContext::CreateNullCipher(bool)", "bssl::SSLAEADContext::Create(evp_aead_direction_t,unsigned short,bool,ssl_cipher_st const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::SSLAEADContext::CreatePlaceholderForQUIC(unsigned short,ssl_cipher_st const*)", "bssl::SSLAEADContext::SetVersionIfNullCipher(unsigned short)", "bssl::SSLAEADContext::ProtocolVersion(void)const", "bssl::SSLAEADContext::RecordVersion(void)const", "bssl::SSLAEADContext::ExplicitNonceLen(void)const", "bssl::SSLAEADContext::SuffixLen(unsigned long *,unsigned long,unsigned long)const", "bssl::SSLAEADContext::CiphertextLen(unsigned long *,unsigned long,unsigned long)const", "bssl::SSLAEADContext::MaxOverhead(void)const", "bssl::SSLAEADContext::Open(bssl::Span<unsigned char> *,unsigned char,unsigned short,unsigned char const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char>)", "bssl::SSLAEADContext::SealScatter(unsigned char *,unsigned char *,unsigned char *,unsigned char,unsigned short,unsigned char const*,bssl::Span<unsigned char const>,unsigned char const*,unsigned long,unsigned char const*,unsigned long)", "bssl::SSLAEADContext::Seal(unsigned char *,unsigned long *,unsigned long,unsigned char,unsigned short,unsigned char const*,bssl::Span<unsigned char const>,unsigned char const*,unsigned long)", "bssl::SSLAEADContext::GetIV(unsigned char const**,unsigned long *)const", "bssl::SSL_SESSION_parse(cbs_st *,bssl::SSL_X509_METHOD const*,crypto_buffer_pool_st *)", "bssl::SSL_SESSION_parse_bounded_octet_string(cbs_st *,unsigned char *,unsigned char *,unsigned char,unsigned int)", "bssl::SSL_SESSION_parse_long(cbs_st *,long *,unsigned int,long)", "bssl::SSL_SESSION_parse_string(cbs_st *,std::__1::unique_ptr<char,bssl::internal::Deleter<char>> *,unsigned int)", "bssl::SSL_SESSION_parse_u32(cbs_st *,unsigned int *,unsigned int,unsigned int)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,bssl::Array<unsigned char> *,unsigned int)", "bssl::SSL_SESSION_parse_crypto_buffer(cbs_st *,std::__1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>> *,unsigned int,crypto_buffer_pool_st *)", "bssl::SSL_SESSION_parse_u16(cbs_st *,unsigned short *,unsigned int,unsigned short)", "bssl::ssl_session_serialize(ssl_session_st const*,cbb_st *)", "bssl::SSL_SESSION_to_bytes_full(ssl_session_st const*,cbb_st *,int)", "bssl::SSLBuffer::Clear(void)", "bssl::SSLBuffer::EnsureCap(unsigned long,unsigned long)", "bssl::SSLBuffer::DidWrite(unsigned long)", "bssl::SSLBuffer::DiscardConsumed(void)", "bssl::ssl_read_buffer_extend_to(ssl_st *,unsigned long)", "bssl::ssl_handle_open_record(ssl_st *,bool *,bssl::ssl_open_record_t,unsigned long,unsigned char)", "bssl::ssl_write_buffer_flush(ssl_st *)", "bssl::CERT::CERT(bssl::SSL_X509_METHOD const*)", "bssl::CERT::~CERT()", "bssl::ssl_cert_clear_certs(bssl::CERT *)", "bssl::ssl_cert_dup(bssl::CERT *)", "bssl::buffer_up_ref(crypto_buffer_st *)", "bssl::DC::Dup(void)", "bssl::ssl_set_cert(bssl::CERT *,std::__1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>>)", "bssl::check_leaf_cert_and_privkey(crypto_buffer_st *,evp_pkey_st *)", "bssl::ssl_has_certificate(bssl::SSL_HANDSHAKE const*)", "bssl::ssl_parse_cert_chain(unsigned char *,std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,std::__1::unique_ptr<evp_pkey_st,bssl::internal::Deleter<evp_pkey_st>> *,unsigned char *,cbs_st *,crypto_buffer_pool_st *)", "bssl::ssl_cert_parse_pubkey(cbs_st const*)", "bssl::ssl_add_cert_chain(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_cert_skip_to_spki(cbs_st const*,cbs_st*)", "bssl::ssl_compare_public_and_private_key(evp_pkey_st const*,evp_pkey_st const*)", "bssl::ssl_cert_check_private_key(bssl::CERT const*,evp_pkey_st const*)", "bssl::ssl_cert_check_key_usage(cbs_st const*,bssl::ssl_key_usage_t)", "bssl::ssl_parse_client_CA_list(ssl_st *,unsigned char *,cbs_st *)", "bssl::ssl_has_client_CAs(bssl::SSL_CONFIG const*)", "bssl::ssl_add_client_CA_list(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_check_leaf_certificate(bssl::SSL_HANDSHAKE *,evp_pkey_st *,crypto_buffer_st const*)", "bssl::ssl_on_certificate_selected(bssl::SSL_HANDSHAKE *)", "bssl::ssl_signing_with_dc(bssl::SSL_HANDSHAKE const*)", "bssl::DC::Parse(crypto_buffer_st *,unsigned char *)", "bssl::cert_set_chain_and_key(bssl::CERT *,crypto_buffer_st * const*,unsigned long,evp_pkey_st *,ssl_private_key_method_st const*)", "set_signed_cert_timestamp_list(bssl::CERT *,unsigned char const*,unsigned long)", "bssl::AllCiphers(void)", "bssl::ssl_cipher_get_evp_aead(evp_aead_st const**,unsigned long *,unsigned long *,ssl_cipher_st const*,unsigned short,bool)", "bssl::ssl_get_handshake_digest(unsigned short,ssl_cipher_st const*)", "bssl::SSLCipherPreferenceList::~SSLCipherPreferenceList()", "bssl::SSLCipherPreferenceList::Init(std::__1::unique_ptr<stack_st_SSL_CIPHER,bssl::internal::Deleter<stack_st_SSL_CIPHER>>,bssl::Span<bool const>)", "bssl::SSLCipherPreferenceList::Init(bssl::SSLCipherPreferenceList const&)", "bssl::SSLCipherPreferenceList::Remove(ssl_cipher_st const*)", "bssl::ssl_create_cipher_list(std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>> *,char const*,bool)", "bssl::ssl_cipher_apply_rule(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned short,int,int,bool,bssl::cipher_order_st **,bssl::cipher_order_st **)", "bssl::ssl_cipher_process_rulestr(char const*,bssl::cipher_order_st **,bssl::cipher_order_st **,bool)", "std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>::operator=(std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>&&)", "bssl::ssl_cipher_get_value(ssl_cipher_st const*)", "bssl::ssl_cipher_auth_mask_for_key(evp_pkey_st const*)", "bssl::ssl_cipher_uses_certificate_auth(ssl_cipher_st const*)", "bssl::ssl_cipher_requires_server_key_exchange(ssl_cipher_st const*)", "bssl::ssl_cipher_get_record_split_len(ssl_cipher_st const*)", "ssl_cipher_id_cmp(void const*,void const*)", "xname_cmp(X509_name_st const**,X509_name_st const**)", "bssl::NamedGroups(void)", "bssl::SSLKeyShare::Create(unsigned short)", "bssl::SSLKeyShare::Create(cbs_st *)", "bssl::SSLKeyShare::Accept(cbb_st *,bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::ssl_nid_to_group_id(unsigned short *,int)", "bssl::ssl_name_to_group_id(unsigned short *,char const*,unsigned long)", "bssl::SSLKeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::~ECKeyShare()", "bssl::`anonymous namespace'::ECKeyShare::~ECKeyShare()", "bssl::`anonymous namespace'::ECKeyShare::GroupID(void)const", "bssl::`anonymous namespace'::ECKeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::ECKeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::Deserialize(cbs_st *)", "bssl::Array<unsigned char>::Init(unsigned long)", "bssl::`anonymous namespace'::X25519KeyShare::~X25519KeyShare()", "bssl::`anonymous namespace'::X25519KeyShare::GroupID(void)const", "bssl::`anonymous namespace'::X25519KeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::X25519KeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::X25519KeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "bssl::SSLKeyShare::~SSLKeyShare()", "bssl::`anonymous namespace'::CECPQ2KeyShare::GroupID(void)const", "bssl::`anonymous namespace'::CECPQ2KeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::CECPQ2KeyShare::Accept(cbb_st *,bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::CECPQ2KeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::CBBFinishArray(cbb_st *,bssl::Array<unsigned char> *)", "bssl::ssl_reset_error_state(ssl_st *)", "bssl::ssl_set_read_error(ssl_st *)", "bssl::ssl_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_update_cache(bssl::SSL_HANDSHAKE *,int)", "bssl::ssl_get_current_time(ssl_st const*,bssl::OPENSSL_timeval *)", "bssl::ssl_log_secret(ssl_st const*,char const*,bssl::Span<unsigned char const>)", "bssl::ssl_do_info_callback(ssl_st const*,int,int)", "bssl::ssl_do_msg_callback(ssl_st const*,int,int,bssl::Span<unsigned char const>)", "bssl::ssl_ctx_get_current_time(ssl_ctx_st const*,bssl::OPENSSL_timeval *)", "bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st *,bool)", "bssl::SSL_set_handoff_mode(ssl_st *,bool)", "bssl::SSL_get_traffic_secrets(ssl_st const*,bssl::Span<unsigned char const> *,bssl::Span<unsigned char const> *)", "ssl_ctx_st::~ssl_ctx_st()", "ssl_session_hash(ssl_session_st const*)", "ssl_session_cmp(ssl_session_st const*,ssl_session_st const*)", "ssl_st::ssl_st(ssl_ctx_st *)", "ssl_st::~ssl_st()", "bssl::Array<unsigned short>::CopyFrom(bssl::Span<unsigned short const>)", "bssl::SSL_CONFIG::~SSL_CONFIG()", "bssl::ssl_maybe_shed_handshake_config(ssl_st *)", "ssl_do_post_handshake(ssl_st *,bssl::SSLMessage const&)", "ssl_read_impl(ssl_st *)", "use_psk_identity_hint(std::__1::unique_ptr<char,bssl::internal::Deleter<char>> *,char const*)", "bssl::GrowableArray<bssl::CertCompressionAlg>::MaybeGrow(void)", "bssl::ssl_is_key_type_supported(int)", "bssl::ssl_has_private_key(bssl::SSL_HANDSHAKE const*)", "bssl::ssl_private_key_sign(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,unsigned long,unsigned short,bssl::Span<unsigned char const>)", "bssl::setup_ctx(ssl_st *,env_md_ctx_st *,evp_pkey_st *,unsigned short,bool)", "bssl::ssl_public_key_verify(ssl_st *,bssl::Span<unsigned char const>,unsigned short,evp_pkey_st *,bssl::Span<unsigned char const>)", "bssl::ssl_private_key_decrypt(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,unsigned long,bssl::Span<unsigned char const>)", "bssl::ssl_private_key_supports_signature_algorithm(bssl::SSL_HANDSHAKE *,unsigned short)", "bssl::pkey_supports_algorithm(ssl_st const*,evp_pkey_st *,unsigned short)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "parse_sigalg_pairs(bssl::Array<unsigned short> *,int const*,unsigned long)", "sigalgs_unique(bssl::Span<unsigned short const>)", "parse_sigalgs_list(bssl::Array<unsigned short> *,char const*)", "compare_uint16_t(void const*,void const*)", "bssl::ssl_session_new(bssl::SSL_X509_METHOD const*)", "std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> bssl::MakeUnique<ssl_session_st,bssl::SSL_X509_METHOD const*&>(bssl::SSL_X509_METHOD const*&)", "bssl::ssl_hash_session_id(bssl::Span<unsigned char const>)", "bssl::SSL_SESSION_dup(ssl_session_st *,int)", "bssl::ssl_session_rebase_time(ssl_st *,ssl_session_st *)", "bssl::ssl_session_renew_timeout(ssl_st *,ssl_session_st *,unsigned int)", "bssl::ssl_session_protocol_version(ssl_session_st const*)", "bssl::ssl_session_get_digest(ssl_session_st const*)", "bssl::ssl_get_new_session(bssl::SSL_HANDSHAKE *,int)", "bssl::ssl_set_session(ssl_st *,ssl_session_st *)", "bssl::ssl_ctx_rotate_ticket_encryption_key(ssl_ctx_st *)", "bssl::ssl_encrypt_ticket(bssl::SSL_HANDSHAKE *,cbb_st *,ssl_session_st const*)", "bssl::ssl_session_is_context_valid(bssl::SSL_HANDSHAKE const*,ssl_session_st const*)", "bssl::ssl_session_is_time_valid(ssl_st const*,ssl_session_st const*)", "bssl::ssl_session_is_resumable(bssl::SSL_HANDSHAKE const*,ssl_session_st const*)", "bssl::ssl_get_prev_session(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bool *,ssl_early_callback_ctx const*)", "ssl_session_st::~ssl_session_st()", "bssl::remove_session_lock(ssl_ctx_st *,ssl_session_st *,int)", "timeout_doall_arg(ssl_session_st *,void *)", "bssl::SSL_SESSION_dup(ssl_session_st *,int)::$_0::__invoke(crypto_buffer_st *)", "lh_SSL_SESSION_call_cmp_key(void const*,void const*)", "bssl::ssl_lookup_session(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bssl::Span<unsigned char const>)::$_1::__invoke(void const*,ssl_session_st const*)", "lh_SSL_SESSION_call_hash_func(unsigned int (*)(void const*),void const*)", "lh_SSL_SESSION_call_cmp_func(int (*)(void const*,void const*),void const*,void const*)", "lh_SSL_SESSION_call_doall_arg(void *,void *)", "bssl::SSLTranscript::SSLTranscript(void)", "bssl::SSLTranscript::~SSLTranscript()", "bssl::SSLTranscript::Init(void)", "bssl::SSLTranscript::InitHash(unsigned short,ssl_cipher_st const*)", "bssl::SSLTranscript::FreeBuffer(void)", "bssl::SSLTranscript::DigestLen(void)const", "bssl::SSLTranscript::Digest(void)const", "bssl::SSLTranscript::UpdateForHelloRetryRequest(void)", "bssl::SSLTranscript::GetHash(unsigned char *,unsigned long *)", "bssl::SSLTranscript::Update(bssl::Span<unsigned char const>)", "bssl::SSLTranscript::CopyToHashContext(env_md_ctx_st *,env_md_st const*)", "bssl::SSLTranscript::GetFinishedMAC(unsigned char *,unsigned long *,ssl_session_st const*,bool)", "bssl::ssl_protocol_version_from_wire(unsigned short *,unsigned short)", "bssl::ssl_method_supports_version(bssl::SSL_PROTOCOL_METHOD const*,unsigned short)", "bssl::ssl_get_version_range(bssl::SSL_HANDSHAKE const*,unsigned short *,unsigned short *)", "bssl::ssl_protocol_version(ssl_st const*)", "bssl::ssl_supports_version(bssl::SSL_HANDSHAKE *,unsigned short)", "bssl::ssl_add_supported_versions(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_negotiate_version(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned short *,cbs_st const*)", "bssl::ssl_crypto_x509_check_client_CA_list(stack_st_CRYPTO_BUFFER *)", "bssl::ssl_crypto_x509_cert_clear(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_free(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_dup(bssl::CERT *,bssl::CERT const*)", "bssl::ssl_crypto_x509_cert_flush_cached_chain(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_flush_cached_leaf(bssl::CERT *)", "bssl::ssl_crypto_x509_session_cache_objects(ssl_session_st *)", "bssl::ssl_crypto_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "bssl::ssl_crypto_x509_session_clear(ssl_session_st *)", "bssl::ssl_crypto_x509_session_verify_cert_chain(ssl_session_st *,bssl::SSL_HANDSHAKE *,unsigned char *)", "bssl::ssl_crypto_x509_hs_flush_cached_ca_names(bssl::SSL_HANDSHAKE *)", "bssl::ssl_crypto_x509_ssl_new(bssl::SSL_HANDSHAKE *)", "bssl::ssl_crypto_x509_ssl_config_free(bssl::SSL_CONFIG *)", "bssl::ssl_crypto_x509_ssl_flush_cached_client_CA(bssl::SSL_CONFIG *)", "bssl::ssl_crypto_x509_ssl_auto_chain_if_needed(bssl::SSL_HANDSHAKE *)", "bssl::ssl_crypto_x509_ssl_ctx_new(ssl_ctx_st *)", "bssl::ssl_crypto_x509_ssl_ctx_free(ssl_ctx_st *)", "bssl::ssl_crypto_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "ssl_use_certificate(bssl::CERT *,x509_st *)", "ssl_cert_cache_chain_certs(bssl::CERT *)", "pem_read_bio_SSL_SESSION_d2i(void **,unsigned char const**,long)", "pem_read_SSL_SESSION_d2i(void **,unsigned char const**,long)", "pem_write_bio_SSL_SESSION_i2d(void const*,unsigned char **)", "pem_write_SSL_SESSION_i2d(void const*,unsigned char **)", "set_client_CA_list(std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,stack_st_X509_NAME const*,crypto_buffer_pool_st *)", "buffer_names_to_x509(stack_st_CRYPTO_BUFFER const*,stack_st_X509_NAME **)", "add_client_CA(std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,x509_st *,crypto_buffer_pool_st *)", "do_client_cert_cb(ssl_st *,void *)", "bssl::internal::DeleterImpl<stack_st_X509,void>::Free(stack_st_X509*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::ssl_cert_set_chain(bssl::CERT *,stack_st_X509 *)", "ssl_cert_append_cert(bssl::CERT *,x509_st *)", "bssl::internal::DeleterImpl<stack_st_X509_NAME,void>::Free(stack_st_X509_NAME*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::tls1_prf(env_md_st const*,bssl::Span<unsigned char>,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls1_configure_aead(ssl_st *,evp_aead_direction_t,bssl::Array<unsigned char> *,ssl_cipher_st const*,bssl::Span<unsigned char const>)", "bssl::get_key_block_lengths(ssl_st const*,unsigned long *,unsigned long *,unsigned long *,ssl_cipher_st const*)", "bssl::tls1_change_cipher_state(bssl::SSL_HANDSHAKE *,evp_aead_direction_t)", "bssl::tls1_generate_master_secret(bssl::SSL_HANDSHAKE *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::ssl_client_hello_init(ssl_st const*,ssl_early_callback_ctx *,bssl::SSLMessage const&)", "bssl::tls1_check_duplicate_extensions(cbs_st const*)", "bssl::ssl_client_hello_get_extension(ssl_early_callback_ctx const*,cbs_st *,unsigned short)", "bssl::tls1_get_grouplist(bssl::SSL_HANDSHAKE const*)", "bssl::tls1_get_shared_group(bssl::SSL_HANDSHAKE *,unsigned short *)", "bssl::tls1_set_curves(bssl::Array<unsigned short> *,bssl::Span<int const>)", "bssl::tls1_set_curves_list(bssl::Array<unsigned short> *,char const*)", "bssl::tls1_check_group_id(bssl::SSL_HANDSHAKE const*,unsigned short)", "bssl::tls12_add_verify_sigalgs(ssl_st const*,cbb_st *,bool)", "bssl::tls12_check_peer_sigalg(ssl_st const*,unsigned char *,unsigned short)", "bssl::tls12_has_different_verify_sigalgs_for_certs(ssl_st const*)", "bssl::ssl_is_alpn_protocol_allowed(bssl::SSL_HANDSHAKE const*,bssl::Span<unsigned char const>)", "bssl::ssl_negotiate_alpn(bssl::SSL_HANDSHAKE *,unsigned char *,ssl_early_callback_ctx const*)", "bssl::ssl_ext_pre_shared_key_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ssl_ext_pre_shared_key_parse_clienthello(bssl::SSL_HANDSHAKE *,cbs_st *,cbs_st *,unsigned int *,unsigned char *,ssl_early_callback_ctx const*,cbs_st *)", "bssl::ssl_ext_pre_shared_key_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_ext_key_share_parse_serverhello(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,unsigned char *,cbs_st *)", "bssl::ssl_ext_key_share_parse_clienthello(bssl::SSL_HANDSHAKE *,bool *,bssl::Array<unsigned char> *,unsigned char *,cbs_st *)", "bssl::ssl_ext_key_share_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_add_clienthello_tlsext(bssl::SSL_HANDSHAKE *,cbb_st *,unsigned long)", "bssl::ssl_add_serverhello_tlsext(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_parse_clienthello_tlsext(bssl::SSL_HANDSHAKE *,ssl_early_callback_ctx const*)", "bssl::ssl_parse_serverhello_tlsext(bssl::SSL_HANDSHAKE *,cbs_st *)", "bssl::ssl_process_ticket(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::ssl_decrypt_ticket_with_ticket_keys(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,bssl::Span<unsigned char const>)", "bssl::tls1_parse_peer_sigalgs(bssl::SSL_HANDSHAKE *,cbs_st const*)", "bssl::parse_u16_array(cbs_st const*,bssl::Array<unsigned short> *)", "bssl::tls1_get_legacy_signature_algorithm(unsigned short *,evp_pkey_st const*)", "bssl::tls1_choose_signature_algorithm(bssl::SSL_HANDSHAKE *,unsigned short *)", "bssl::tls1_get_peer_verify_algorithms(bssl::SSL_HANDSHAKE const*)", "bssl::tls1_verify_channel_id(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&)", "bssl::tls1_channel_id_hash(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *)", "bssl::tls1_write_channel_id(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::tls1_record_handshake_hashes_for_channel_id(bssl::SSL_HANDSHAKE *)", "bssl::ssl_do_channel_id_callback(bssl::SSL_HANDSHAKE *)", "bssl::ssl_is_sct_list_valid(cbs_st const*)", "bssl::compare_uint16_t(void const*,void const*)", "bssl::ext_sni_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sni_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sni_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sni_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ems_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ems_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ems_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ems_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ri_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ri_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ri_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ri_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_groups_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_groups_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_supported_groups_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::dont_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ec_point_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ec_point_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ec_point_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ec_point_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ticket_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ticket_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ignore_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ticket_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_alpn_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_alpn_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_alpn_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ocsp_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ocsp_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ocsp_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ocsp_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sigalgs_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::forbid_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sigalgs_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sigalgs_cert_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_npn_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_npn_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_npn_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_npn_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sct_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sct_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sct_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sct_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_channel_id_init(bssl::SSL_HANDSHAKE *)", "bssl::ext_channel_id_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_channel_id_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_channel_id_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_channel_id_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_srtp_init(bssl::SSL_HANDSHAKE *)", "bssl::ext_srtp_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_srtp_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_srtp_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_srtp_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_key_share_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_psk_key_exchange_modes_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_psk_key_exchange_modes_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_early_data_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_early_data_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_early_data_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_early_data_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_versions_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_cookie_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_quic_transport_params_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_quic_transport_params_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_quic_transport_params_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_quic_transport_params_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_token_binding_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_token_binding_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_token_binding_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_token_binding_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::cert_compression_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::cert_compression_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::cert_compression_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::cert_compression_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_delegated_credential_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_delegated_credential_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_pq_experiment_signal_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ec_point_add_extension(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::select_tb_param(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls_extension_find(unsigned int *,unsigned short)", "bssl::decrypt_ticket_with_cipher_ctx(bssl::Array<unsigned char> *,evp_cipher_ctx_st *,hmac_ctx_st *,bssl::Span<unsigned char const>)", "bssl::tls13_get_cert_verify_signature_input(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,bssl::ssl_cert_verify_context_t)", "bssl::tls13_process_certificate(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&,bool)", "bssl::tls13_process_certificate_verify(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&)", "bssl::tls13_process_finished(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&,bool)", "bssl::tls13_add_certificate(bssl::SSL_HANDSHAKE *)", "bssl::tls13_add_certificate_verify(bssl::SSL_HANDSHAKE *)", "bssl::tls13_add_finished(bssl::SSL_HANDSHAKE *)", "bssl::tls13_add_key_update(ssl_st *,int)", "bssl::tls13_post_handshake(ssl_st *,bssl::SSLMessage const&)", "bssl::tls13_client_handshake(bssl::SSL_HANDSHAKE *)", "bssl::tls13_client_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::tls13_process_new_session_ticket(ssl_st *,bssl::SSLMessage const&)", "bssl::tls13_init_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_init_early_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_advance_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::hkdf_expand_label(bssl::Span<unsigned char>,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>)", "bssl::tls13_set_traffic_key(ssl_st *,ssl_encryption_level_t,evp_aead_direction_t,bssl::Span<unsigned char const>)", "bssl::tls13_derive_early_secret(bssl::SSL_HANDSHAKE *)", "bssl::tls13_set_early_secret_for_quic(bssl::SSL_HANDSHAKE *)", "bssl::tls13_derive_handshake_secrets(bssl::SSL_HANDSHAKE *)", "bssl::set_quic_secrets(bssl::SSL_HANDSHAKE *,ssl_encryption_level_t,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls13_derive_application_secrets(bssl::SSL_HANDSHAKE *)", "bssl::tls13_rotate_traffic_key(ssl_st *,evp_aead_direction_t)", "bssl::tls13_derive_resumption_secret(bssl::SSL_HANDSHAKE *)", "bssl::tls13_finished_mac(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,bool)", "bssl::tls13_derive_session_psk(ssl_session_st *,bssl::Span<unsigned char const>)", "bssl::tls13_export_keying_material(ssl_st *,bssl::Span<unsigned char>,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>)", "bssl::tls13_write_psk_binder(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char>)", "bssl::hash_transcript_and_truncated_client_hello(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,env_md_st const*,bssl::Span<unsigned char const>,unsigned long)", "bssl::tls13_psk_binder(unsigned char *,unsigned long *,unsigned short,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls13_verify_psk_binder(bssl::SSL_HANDSHAKE *,ssl_session_st *,bssl::SSLMessage const&,cbs_st *)", "bssl::tls13_server_handshake(bssl::SSL_HANDSHAKE *)", "bssl::tls13_server_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::resolve_ecdhe_secret(bssl::SSL_HANDSHAKE *,bool *,ssl_early_callback_ctx *)", "bssl::add_new_session_tickets(bssl::SSL_HANDSHAKE *,bool *)", "bssl::ssl_noop_x509_check_client_CA_names(stack_st_CRYPTO_BUFFER *)", "bssl::ssl_noop_x509_clear(bssl::CERT *)", "bssl::ssl_noop_x509_free(bssl::CERT *)", "bssl::ssl_noop_x509_dup(bssl::CERT *,bssl::CERT const*)", "bssl::ssl_noop_x509_flush_cached_chain(bssl::CERT *)", "bssl::ssl_noop_x509_flush_cached_leaf(bssl::CERT *)", "bssl::ssl_noop_x509_session_cache_objects(ssl_session_st *)", "bssl::ssl_noop_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "bssl::ssl_noop_x509_session_clear(ssl_session_st *)", "bssl::ssl_noop_x509_session_verify_cert_chain(ssl_session_st *,bssl::SSL_HANDSHAKE *,unsigned char *)", "bssl::ssl_noop_x509_hs_flush_cached_ca_names(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_new(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_config_free(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_flush_cached_client_CA(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_auto_chain_if_needed(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_ctx_new(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_free(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "bssl::ssl3_on_handshake_complete(ssl_st *)", "bssl::ssl3_set_read_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::ssl3_set_write_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::ssl_record_sequence_update(unsigned char *,unsigned long)", "bssl::ssl_record_prefix_len(ssl_st const*)", "bssl::ssl_seal_align_prefix_len(ssl_st const*)", "bssl::tls_open_record(ssl_st *,unsigned char *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::skip_early_data(ssl_st *,unsigned char *,unsigned long)", "bssl::ssl_process_alert(ssl_st *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::tls_seal_record(ssl_st *,unsigned char *,unsigned long *,unsigned long,unsigned char,unsigned char const*,unsigned long)", "bssl::tls_seal_scatter_record(ssl_st *,unsigned char *,unsigned char *,unsigned char *,unsigned char,unsigned char const*,unsigned long)", "bssl::OpenRecord(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::SealRecordPrefixLen(ssl_st const*,unsigned long)", "bssl::SealRecordSuffixLen(ssl_st const*,unsigned long)", "bssl::SealRecord(ssl_st *,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char const>)", "bssl::do_seal_record(ssl_st *,unsigned char *,unsigned char *,unsigned char *,unsigned char,unsigned char const*,unsigned long)"], "removed_funcs": ["ssl_write(bio_st *,char const*,int)", "ssl_read(bio_st *,char *,int)", "ssl_ctrl(bio_st *,int,long,void *)", "ssl_new(bio_st *)", "ssl_free(bio_st *)", "ssl_callback_ctrl(bio_st *,int,long (*)(bio_st *,int,char const*,int,long,long))", "bssl::hm_fragment::~hm_fragment()", "bssl::dtls1_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::dtls1_parse_fragment(cbs_st *,bssl::hm_header_st *,cbs_st *)", "bssl::dtls1_get_incoming_message(ssl_st *,unsigned char *,bssl::hm_header_st const*)", "bssl::dtls1_hm_fragment_mark(bssl::hm_fragment *,unsigned long,unsigned long)", "bssl::dtls1_get_message(ssl_st const*,bssl::SSLMessage *)", "bssl::dtls1_next_message(ssl_st *)", "bssl::dtls_has_unprocessed_handshake_data(ssl_st const*)", "bssl::dtls1_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::DTLS_OUTGOING_MESSAGE::Clear(void)", "bssl::dtls_clear_outgoing_messages(ssl_st *)", "bssl::dtls1_init_message(ssl_st *,cbb_st *,cbb_st *,unsigned char)", "bssl::dtls1_finish_message(ssl_st *,cbb_st *,bssl::Array<unsigned char> *)", "bssl::dtls1_add_message(ssl_st *,bssl::Array<unsigned char>)", "bssl::add_outgoing(ssl_st *,bool,bssl::Array<unsigned char>)", "bssl::dtls1_add_change_cipher_spec(ssl_st *)", "bssl::dtls1_flush_flight(ssl_st *)", "bssl::send_flight(ssl_st *)", "bssl::dtls1_retransmit_outgoing_messages(ssl_st *)", "bssl::dtls1_min_mtu(void)", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::dtls1_new(ssl_st *)", "bssl::dtls1_free(ssl_st *)", "bssl::dtls1_start_timer(ssl_st *)", "bssl::dtls1_stop_timer(ssl_st *)", "bssl::dtls1_check_timeout_num(ssl_st *)", "bssl::dtls1_open_app_data(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::dtls1_write_app_data(ssl_st *,bool *,unsigned char const*,int)", "bssl::dtls1_write_record(ssl_st *,int,unsigned char const*,unsigned long,bssl::dtls1_use_epoch_t)", "bssl::dtls1_dispatch_alert(ssl_st *)", "ssl_ctx_make_profiles(char const*,std::__1::unique_ptr<stack_st_SRTP_PROTECTION_PROFILE,bssl::internal::Deleter<stack_st_SRTP_PROTECTION_PROFILE>> *)", "dtls1_on_handshake_complete(ssl_st *)", "dtls1_set_read_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "dtls1_set_write_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::dtls_open_record(ssl_st *,unsigned char *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::dtls1_bitmap_should_discard(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::dtls1_bitmap_record(bssl::DTLS1_BITMAP *,unsigned char const*)", "bssl::dtls_max_seal_overhead(ssl_st const*,bssl::dtls1_use_epoch_t)", "bssl::dtls_seal_prefix_len(ssl_st const*,bssl::dtls1_use_epoch_t)", "bssl::dtls_seal_record(ssl_st *,unsigned char *,unsigned long *,unsigned long,unsigned char,unsigned char const*,unsigned long,bssl::dtls1_use_epoch_t)", "bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *,ssl_early_callback_ctx *)", "bssl::serialize_features(cbb_st *)", "bssl::SSL_decline_handoff(ssl_st *)", "bssl::SSL_apply_handoff(ssl_st *,bssl::Span<unsigned char const>)", "bssl::SSL_serialize_handback(ssl_st const*,cbb_st *)", "bssl::SSL_apply_handback(ssl_st *,bssl::Span<unsigned char const>)", "std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>::operator=(std::__1::unique_ptr<bssl::SSL_HANDSHAKE,bssl::internal::Deleter<bssl::SSL_HANDSHAKE>>&&)", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::Array<unsigned short>::Init(unsigned long)", "bssl::SSL_HANDSHAKE::~SSL_HANDSHAKE()", "bssl::SSL_HANDSHAKE::ResizeSecrets(unsigned long)", "bssl::ssl_handshake_new(ssl_st *)", "bssl::ssl_check_message_type(ssl_st *,bssl::SSLMessage const&,int)", "bssl::ssl_add_message_cbb(ssl_st *,cbb_st *)", "bssl::ssl_max_handshake_message_len(ssl_st const*)", "bssl::ssl_hash_message(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&)", "bssl::ssl_parse_extensions(cbs_st const*,unsigned char *,bssl::SSL_EXTENSION_TYPE const*,unsigned long,int)", "bssl::ssl_verify_peer_cert(bssl::SSL_HANDSHAKE *)", "bssl::ssl_reverify_peer_cert(bssl::SSL_HANDSHAKE *)", "bssl::ssl_get_grease_value(bssl::SSL_HANDSHAKE *,bssl::ssl_grease_index_t)", "bssl::ssl_get_finished(bssl::SSL_HANDSHAKE *)", "bssl::ssl_send_finished(bssl::SSL_HANDSHAKE *)", "bssl::ssl_output_cert_chain(bssl::SSL_HANDSHAKE *)", "bssl::ssl_run_handshake(bssl::SSL_HANDSHAKE *,bool *)", "bssl::internal::DeleterImpl<stack_st_CRYPTO_BUFFER,void>::Free(stack_st_CRYPTO_BUFFER*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::ssl_write_client_hello(bssl::SSL_HANDSHAKE *)", "bssl::ssl_client_handshake(bssl::SSL_HANDSHAKE *)", "bssl::ssl_client_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl_client_cipher_list_contains_cipher(ssl_early_callback_ctx const*,unsigned short)", "bssl::ssl_server_handshake(bssl::SSL_HANDSHAKE *)", "bssl::ssl_server_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl3_init_message(ssl_st *,cbb_st *,cbb_st *,unsigned char)", "bssl::ssl3_finish_message(ssl_st *,cbb_st *,bssl::Array<unsigned char> *)", "bssl::ssl3_add_message(ssl_st *,bssl::Array<unsigned char>)", "bssl::add_record_to_flight(ssl_st *,unsigned char,bssl::Span<unsigned char const>)", "bssl::tls_flush_pending_hs_data(ssl_st *)", "bssl::ssl3_add_change_cipher_spec(ssl_st *)", "bssl::ssl3_flush_flight(ssl_st *)", "bssl::ssl3_get_message(ssl_st const*,bssl::SSLMessage *)", "bssl::parse_message(ssl_st const*,bssl::SSLMessage *,unsigned long *)", "bssl::tls_can_accept_handshake_data(ssl_st const*,unsigned char *)", "bssl::tls_has_unprocessed_handshake_data(ssl_st const*)", "bssl::tls_append_handshake_data(ssl_st *,bssl::Span<unsigned char const>)", "bssl::ssl3_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::read_v2_client_hello(ssl_st *,unsigned long *,bssl::Span<unsigned char const>)", "bssl::ssl3_next_message(ssl_st *)", "bssl::ssl_choose_tls13_cipher(cbs_st,unsigned short,unsigned short)", "bssl::SSL3_STATE::~SSL3_STATE()", "bssl::ssl3_new(ssl_st *)", "bssl::ssl3_free(ssl_st *)", "bssl::ssl3_write_app_data(ssl_st *,bool *,unsigned char const*,int)", "bssl::do_ssl3_write(ssl_st *,int,unsigned char const*,unsigned int)", "bssl::ssl3_open_app_data(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl3_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_send_alert(ssl_st *,int,int)", "bssl::ssl_send_alert_impl(ssl_st *,int,int)", "bssl::ssl3_dispatch_alert(ssl_st *)", "bssl::ssl3_write_pending(ssl_st *,int,unsigned char const*,unsigned int)", "bssl::SSLAEADContext::~SSLAEADContext()", "bssl::SSLAEADContext::CreateNullCipher(bool)", "bssl::SSLAEADContext::Create(evp_aead_direction_t,unsigned short,bool,ssl_cipher_st const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::SSLAEADContext::CreatePlaceholderForQUIC(unsigned short,ssl_cipher_st const*)", "bssl::SSLAEADContext::SetVersionIfNullCipher(unsigned short)", "bssl::SSLAEADContext::ProtocolVersion(void)const", "bssl::SSLAEADContext::RecordVersion(void)const", "bssl::SSLAEADContext::ExplicitNonceLen(void)const", "bssl::SSLAEADContext::SuffixLen(unsigned long *,unsigned long,unsigned long)const", "bssl::SSLAEADContext::CiphertextLen(unsigned long *,unsigned long,unsigned long)const", "bssl::SSLAEADContext::MaxOverhead(void)const", "bssl::SSLAEADContext::Open(bssl::Span<unsigned char> *,unsigned char,unsigned short,unsigned char const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char>)", "bssl::SSLAEADContext::SealScatter(unsigned char *,unsigned char *,unsigned char *,unsigned char,unsigned short,unsigned char const*,bssl::Span<unsigned char const>,unsigned char const*,unsigned long,unsigned char const*,unsigned long)", "bssl::SSLAEADContext::Seal(unsigned char *,unsigned long *,unsigned long,unsigned char,unsigned short,unsigned char const*,bssl::Span<unsigned char const>,unsigned char const*,unsigned long)", "bssl::SSLAEADContext::GetIV(unsigned char const**,unsigned long *)const", "bssl::SSL_SESSION_parse(cbs_st *,bssl::SSL_X509_METHOD const*,crypto_buffer_pool_st *)", "bssl::SSL_SESSION_parse_bounded_octet_string(cbs_st *,unsigned char *,unsigned char *,unsigned char,unsigned int)", "bssl::SSL_SESSION_parse_long(cbs_st *,long *,unsigned int,long)", "bssl::SSL_SESSION_parse_string(cbs_st *,std::__1::unique_ptr<char,bssl::internal::Deleter<char>> *,unsigned int)", "bssl::SSL_SESSION_parse_u32(cbs_st *,unsigned int *,unsigned int,unsigned int)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,bssl::Array<unsigned char> *,unsigned int)", "bssl::SSL_SESSION_parse_crypto_buffer(cbs_st *,std::__1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>> *,unsigned int,crypto_buffer_pool_st *)", "bssl::SSL_SESSION_parse_u16(cbs_st *,unsigned short *,unsigned int,unsigned short)", "bssl::ssl_session_serialize(ssl_session_st const*,cbb_st *)", "bssl::SSL_SESSION_to_bytes_full(ssl_session_st const*,cbb_st *,int)", "bssl::SSLBuffer::Clear(void)", "bssl::SSLBuffer::EnsureCap(unsigned long,unsigned long)", "bssl::SSLBuffer::DidWrite(unsigned long)", "bssl::SSLBuffer::DiscardConsumed(void)", "bssl::ssl_read_buffer_extend_to(ssl_st *,unsigned long)", "bssl::ssl_handle_open_record(ssl_st *,bool *,bssl::ssl_open_record_t,unsigned long,unsigned char)", "bssl::ssl_write_buffer_flush(ssl_st *)", "bssl::CERT::CERT(bssl::SSL_X509_METHOD const*)", "bssl::CERT::~CERT()", "bssl::ssl_cert_clear_certs(bssl::CERT *)", "bssl::ssl_cert_dup(bssl::CERT *)", "bssl::buffer_up_ref(crypto_buffer_st *)", "bssl::DC::Dup(void)", "bssl::ssl_set_cert(bssl::CERT *,std::__1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>>)", "bssl::check_leaf_cert_and_privkey(crypto_buffer_st *,evp_pkey_st *)", "bssl::ssl_has_certificate(bssl::SSL_HANDSHAKE const*)", "bssl::ssl_parse_cert_chain(unsigned char *,std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,std::__1::unique_ptr<evp_pkey_st,bssl::internal::Deleter<evp_pkey_st>> *,unsigned char *,cbs_st *,crypto_buffer_pool_st *)", "bssl::ssl_cert_parse_pubkey(cbs_st const*)", "bssl::ssl_add_cert_chain(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_cert_skip_to_spki(cbs_st const*,cbs_st*)", "bssl::ssl_compare_public_and_private_key(evp_pkey_st const*,evp_pkey_st const*)", "bssl::ssl_cert_check_private_key(bssl::CERT const*,evp_pkey_st const*)", "bssl::ssl_cert_check_key_usage(cbs_st const*,bssl::ssl_key_usage_t)", "bssl::ssl_parse_client_CA_list(ssl_st *,unsigned char *,cbs_st *)", "bssl::ssl_has_client_CAs(bssl::SSL_CONFIG const*)", "bssl::ssl_add_client_CA_list(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_check_leaf_certificate(bssl::SSL_HANDSHAKE *,evp_pkey_st *,crypto_buffer_st const*)", "bssl::ssl_on_certificate_selected(bssl::SSL_HANDSHAKE *)", "bssl::ssl_signing_with_dc(bssl::SSL_HANDSHAKE const*)", "bssl::DC::Parse(crypto_buffer_st *,unsigned char *)", "bssl::cert_set_chain_and_key(bssl::CERT *,crypto_buffer_st * const*,unsigned long,evp_pkey_st *,ssl_private_key_method_st const*)", "set_signed_cert_timestamp_list(bssl::CERT *,unsigned char const*,unsigned long)", "bssl::AllCiphers(void)", "bssl::ssl_cipher_get_evp_aead(evp_aead_st const**,unsigned long *,unsigned long *,ssl_cipher_st const*,unsigned short,bool)", "bssl::ssl_get_handshake_digest(unsigned short,ssl_cipher_st const*)", "bssl::SSLCipherPreferenceList::~SSLCipherPreferenceList()", "bssl::SSLCipherPreferenceList::Init(std::__1::unique_ptr<stack_st_SSL_CIPHER,bssl::internal::Deleter<stack_st_SSL_CIPHER>>,bssl::Span<bool const>)", "bssl::SSLCipherPreferenceList::Init(bssl::SSLCipherPreferenceList const&)", "bssl::SSLCipherPreferenceList::Remove(ssl_cipher_st const*)", "bssl::ssl_create_cipher_list(std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>> *,char const*,bool)", "bssl::ssl_cipher_apply_rule(unsigned int,unsigned int,unsigned int,unsigned int,unsigned int,unsigned short,int,int,bool,bssl::cipher_order_st **,bssl::cipher_order_st **)", "bssl::ssl_cipher_process_rulestr(char const*,bssl::cipher_order_st **,bssl::cipher_order_st **,bool)", "std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>::operator=(std::__1::unique_ptr<bssl::SSLCipherPreferenceList,bssl::internal::Deleter<bssl::SSLCipherPreferenceList>>&&)", "bssl::ssl_cipher_get_value(ssl_cipher_st const*)", "bssl::ssl_cipher_auth_mask_for_key(evp_pkey_st const*)", "bssl::ssl_cipher_uses_certificate_auth(ssl_cipher_st const*)", "bssl::ssl_cipher_requires_server_key_exchange(ssl_cipher_st const*)", "bssl::ssl_cipher_get_record_split_len(ssl_cipher_st const*)", "ssl_cipher_id_cmp(void const*,void const*)", "xname_cmp(X509_name_st const**,X509_name_st const**)", "bssl::NamedGroups(void)", "bssl::SSLKeyShare::Create(unsigned short)", "bssl::SSLKeyShare::Create(cbs_st *)", "bssl::SSLKeyShare::Accept(cbb_st *,bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::ssl_nid_to_group_id(unsigned short *,int)", "bssl::ssl_name_to_group_id(unsigned short *,char const*,unsigned long)", "bssl::SSLKeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::~ECKeyShare()", "bssl::`anonymous namespace'::ECKeyShare::~ECKeyShare()", "bssl::`anonymous namespace'::ECKeyShare::GroupID(void)const", "bssl::`anonymous namespace'::ECKeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::ECKeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::Deserialize(cbs_st *)", "bssl::Array<unsigned char>::Init(unsigned long)", "bssl::`anonymous namespace'::X25519KeyShare::~X25519KeyShare()", "bssl::`anonymous namespace'::X25519KeyShare::GroupID(void)const", "bssl::`anonymous namespace'::X25519KeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::X25519KeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::X25519KeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "bssl::SSLKeyShare::~SSLKeyShare()", "bssl::`anonymous namespace'::CECPQ2KeyShare::GroupID(void)const", "bssl::`anonymous namespace'::CECPQ2KeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::CECPQ2KeyShare::Accept(cbb_st *,bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::CECPQ2KeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::CBBFinishArray(cbb_st *,bssl::Array<unsigned char> *)", "bssl::ssl_reset_error_state(ssl_st *)", "bssl::ssl_set_read_error(ssl_st *)", "bssl::ssl_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_update_cache(bssl::SSL_HANDSHAKE *,int)", "bssl::ssl_get_current_time(ssl_st const*,bssl::OPENSSL_timeval *)", "bssl::ssl_log_secret(ssl_st const*,char const*,bssl::Span<unsigned char const>)", "bssl::ssl_do_info_callback(ssl_st const*,int,int)", "bssl::ssl_do_msg_callback(ssl_st const*,int,int,bssl::Span<unsigned char const>)", "bssl::ssl_ctx_get_current_time(ssl_ctx_st const*,bssl::OPENSSL_timeval *)", "bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st *,bool)", "bssl::SSL_set_handoff_mode(ssl_st *,bool)", "bssl::SSL_get_traffic_secrets(ssl_st const*,bssl::Span<unsigned char const> *,bssl::Span<unsigned char const> *)", "ssl_ctx_st::~ssl_ctx_st()", "ssl_session_hash(ssl_session_st const*)", "ssl_session_cmp(ssl_session_st const*,ssl_session_st const*)", "ssl_st::ssl_st(ssl_ctx_st *)", "ssl_st::~ssl_st()", "bssl::Array<unsigned short>::CopyFrom(bssl::Span<unsigned short const>)", "bssl::SSL_CONFIG::~SSL_CONFIG()", "bssl::ssl_maybe_shed_handshake_config(ssl_st *)", "ssl_do_post_handshake(ssl_st *,bssl::SSLMessage const&)", "ssl_read_impl(ssl_st *)", "use_psk_identity_hint(std::__1::unique_ptr<char,bssl::internal::Deleter<char>> *,char const*)", "bssl::GrowableArray<bssl::CertCompressionAlg>::MaybeGrow(void)", "bssl::ssl_is_key_type_supported(int)", "bssl::ssl_has_private_key(bssl::SSL_HANDSHAKE const*)", "bssl::ssl_private_key_sign(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,unsigned long,unsigned short,bssl::Span<unsigned char const>)", "bssl::setup_ctx(ssl_st *,env_md_ctx_st *,evp_pkey_st *,unsigned short,bool)", "bssl::ssl_public_key_verify(ssl_st *,bssl::Span<unsigned char const>,unsigned short,evp_pkey_st *,bssl::Span<unsigned char const>)", "bssl::ssl_private_key_decrypt(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,unsigned long,bssl::Span<unsigned char const>)", "bssl::ssl_private_key_supports_signature_algorithm(bssl::SSL_HANDSHAKE *,unsigned short)", "bssl::pkey_supports_algorithm(ssl_st const*,evp_pkey_st *,unsigned short)", "bssl::ssl_set_pkey(bssl::CERT *,evp_pkey_st *)", "parse_sigalg_pairs(bssl::Array<unsigned short> *,int const*,unsigned long)", "sigalgs_unique(bssl::Span<unsigned short const>)", "parse_sigalgs_list(bssl::Array<unsigned short> *,char const*)", "compare_uint16_t(void const*,void const*)", "bssl::ssl_session_new(bssl::SSL_X509_METHOD const*)", "std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> bssl::MakeUnique<ssl_session_st,bssl::SSL_X509_METHOD const*&>(bssl::SSL_X509_METHOD const*&)", "bssl::ssl_hash_session_id(bssl::Span<unsigned char const>)", "bssl::SSL_SESSION_dup(ssl_session_st *,int)", "bssl::ssl_session_rebase_time(ssl_st *,ssl_session_st *)", "bssl::ssl_session_renew_timeout(ssl_st *,ssl_session_st *,unsigned int)", "bssl::ssl_session_protocol_version(ssl_session_st const*)", "bssl::ssl_session_get_digest(ssl_session_st const*)", "bssl::ssl_get_new_session(bssl::SSL_HANDSHAKE *,int)", "bssl::ssl_set_session(ssl_st *,ssl_session_st *)", "bssl::ssl_ctx_rotate_ticket_encryption_key(ssl_ctx_st *)", "bssl::ssl_encrypt_ticket(bssl::SSL_HANDSHAKE *,cbb_st *,ssl_session_st const*)", "bssl::ssl_session_is_context_valid(bssl::SSL_HANDSHAKE const*,ssl_session_st const*)", "bssl::ssl_session_is_time_valid(ssl_st const*,ssl_session_st const*)", "bssl::ssl_session_is_resumable(bssl::SSL_HANDSHAKE const*,ssl_session_st const*)", "bssl::ssl_get_prev_session(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bool *,ssl_early_callback_ctx const*)", "ssl_session_st::~ssl_session_st()", "bssl::remove_session_lock(ssl_ctx_st *,ssl_session_st *,int)", "timeout_doall_arg(ssl_session_st *,void *)", "bssl::SSL_SESSION_dup(ssl_session_st *,int)::$_0::__invoke(crypto_buffer_st *)", "lh_SSL_SESSION_call_cmp_key(void const*,void const*)", "bssl::ssl_lookup_session(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bssl::Span<unsigned char const>)::$_1::__invoke(void const*,ssl_session_st const*)", "lh_SSL_SESSION_call_hash_func(unsigned int (*)(void const*),void const*)", "lh_SSL_SESSION_call_cmp_func(int (*)(void const*,void const*),void const*,void const*)", "lh_SSL_SESSION_call_doall_arg(void *,void *)", "bssl::SSLTranscript::SSLTranscript(void)", "bssl::SSLTranscript::~SSLTranscript()", "bssl::SSLTranscript::Init(void)", "bssl::SSLTranscript::InitHash(unsigned short,ssl_cipher_st const*)", "bssl::SSLTranscript::FreeBuffer(void)", "bssl::SSLTranscript::DigestLen(void)const", "bssl::SSLTranscript::Digest(void)const", "bssl::SSLTranscript::UpdateForHelloRetryRequest(void)", "bssl::SSLTranscript::GetHash(unsigned char *,unsigned long *)", "bssl::SSLTranscript::Update(bssl::Span<unsigned char const>)", "bssl::SSLTranscript::CopyToHashContext(env_md_ctx_st *,env_md_st const*)", "bssl::SSLTranscript::GetFinishedMAC(unsigned char *,unsigned long *,ssl_session_st const*,bool)", "bssl::ssl_protocol_version_from_wire(unsigned short *,unsigned short)", "bssl::ssl_method_supports_version(bssl::SSL_PROTOCOL_METHOD const*,unsigned short)", "bssl::ssl_get_version_range(bssl::SSL_HANDSHAKE const*,unsigned short *,unsigned short *)", "bssl::ssl_protocol_version(ssl_st const*)", "bssl::ssl_supports_version(bssl::SSL_HANDSHAKE *,unsigned short)", "bssl::ssl_add_supported_versions(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_negotiate_version(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned short *,cbs_st const*)", "bssl::ssl_crypto_x509_check_client_CA_list(stack_st_CRYPTO_BUFFER *)", "bssl::ssl_crypto_x509_cert_clear(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_free(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_dup(bssl::CERT *,bssl::CERT const*)", "bssl::ssl_crypto_x509_cert_flush_cached_chain(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_flush_cached_leaf(bssl::CERT *)", "bssl::ssl_crypto_x509_session_cache_objects(ssl_session_st *)", "bssl::ssl_crypto_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "bssl::ssl_crypto_x509_session_clear(ssl_session_st *)", "bssl::ssl_crypto_x509_session_verify_cert_chain(ssl_session_st *,bssl::SSL_HANDSHAKE *,unsigned char *)", "bssl::ssl_crypto_x509_hs_flush_cached_ca_names(bssl::SSL_HANDSHAKE *)", "bssl::ssl_crypto_x509_ssl_new(bssl::SSL_HANDSHAKE *)", "bssl::ssl_crypto_x509_ssl_config_free(bssl::SSL_CONFIG *)", "bssl::ssl_crypto_x509_ssl_flush_cached_client_CA(bssl::SSL_CONFIG *)", "bssl::ssl_crypto_x509_ssl_auto_chain_if_needed(bssl::SSL_HANDSHAKE *)", "bssl::ssl_crypto_x509_ssl_ctx_new(ssl_ctx_st *)", "bssl::ssl_crypto_x509_ssl_ctx_free(ssl_ctx_st *)", "bssl::ssl_crypto_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "ssl_use_certificate(bssl::CERT *,x509_st *)", "ssl_cert_cache_chain_certs(bssl::CERT *)", "pem_read_bio_SSL_SESSION_d2i(void **,unsigned char const**,long)", "pem_read_SSL_SESSION_d2i(void **,unsigned char const**,long)", "pem_write_bio_SSL_SESSION_i2d(void const*,unsigned char **)", "pem_write_SSL_SESSION_i2d(void const*,unsigned char **)", "set_client_CA_list(std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,stack_st_X509_NAME const*,crypto_buffer_pool_st *)", "buffer_names_to_x509(stack_st_CRYPTO_BUFFER const*,stack_st_X509_NAME **)", "add_client_CA(std::__1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,x509_st *,crypto_buffer_pool_st *)", "do_client_cert_cb(ssl_st *,void *)", "bssl::internal::DeleterImpl<stack_st_X509,void>::Free(stack_st_X509*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::ssl_cert_set_chain(bssl::CERT *,stack_st_X509 *)", "ssl_cert_append_cert(bssl::CERT *,x509_st *)", "bssl::internal::DeleterImpl<stack_st_X509_NAME,void>::Free(stack_st_X509_NAME*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::tls1_prf(env_md_st const*,bssl::Span<unsigned char>,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls1_configure_aead(ssl_st *,evp_aead_direction_t,bssl::Array<unsigned char> *,ssl_cipher_st const*,bssl::Span<unsigned char const>)", "bssl::get_key_block_lengths(ssl_st const*,unsigned long *,unsigned long *,unsigned long *,ssl_cipher_st const*)", "bssl::tls1_change_cipher_state(bssl::SSL_HANDSHAKE *,evp_aead_direction_t)", "bssl::tls1_generate_master_secret(bssl::SSL_HANDSHAKE *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::ssl_client_hello_init(ssl_st const*,ssl_early_callback_ctx *,bssl::SSLMessage const&)", "bssl::tls1_check_duplicate_extensions(cbs_st const*)", "bssl::ssl_client_hello_get_extension(ssl_early_callback_ctx const*,cbs_st *,unsigned short)", "bssl::tls1_get_grouplist(bssl::SSL_HANDSHAKE const*)", "bssl::tls1_get_shared_group(bssl::SSL_HANDSHAKE *,unsigned short *)", "bssl::tls1_set_curves(bssl::Array<unsigned short> *,bssl::Span<int const>)", "bssl::tls1_set_curves_list(bssl::Array<unsigned short> *,char const*)", "bssl::tls1_check_group_id(bssl::SSL_HANDSHAKE const*,unsigned short)", "bssl::tls12_add_verify_sigalgs(ssl_st const*,cbb_st *,bool)", "bssl::tls12_check_peer_sigalg(ssl_st const*,unsigned char *,unsigned short)", "bssl::tls12_has_different_verify_sigalgs_for_certs(ssl_st const*)", "bssl::ssl_is_alpn_protocol_allowed(bssl::SSL_HANDSHAKE const*,bssl::Span<unsigned char const>)", "bssl::ssl_negotiate_alpn(bssl::SSL_HANDSHAKE *,unsigned char *,ssl_early_callback_ctx const*)", "bssl::ssl_ext_pre_shared_key_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ssl_ext_pre_shared_key_parse_clienthello(bssl::SSL_HANDSHAKE *,cbs_st *,cbs_st *,unsigned int *,unsigned char *,ssl_early_callback_ctx const*,cbs_st *)", "bssl::ssl_ext_pre_shared_key_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_ext_key_share_parse_serverhello(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,unsigned char *,cbs_st *)", "bssl::ssl_ext_key_share_parse_clienthello(bssl::SSL_HANDSHAKE *,bool *,bssl::Array<unsigned char> *,unsigned char *,cbs_st *)", "bssl::ssl_ext_key_share_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_add_clienthello_tlsext(bssl::SSL_HANDSHAKE *,cbb_st *,unsigned long)", "bssl::ssl_add_serverhello_tlsext(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_parse_clienthello_tlsext(bssl::SSL_HANDSHAKE *,ssl_early_callback_ctx const*)", "bssl::ssl_parse_serverhello_tlsext(bssl::SSL_HANDSHAKE *,cbs_st *)", "bssl::ssl_process_ticket(bssl::SSL_HANDSHAKE *,std::__1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::ssl_decrypt_ticket_with_ticket_keys(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,bssl::Span<unsigned char const>)", "bssl::tls1_parse_peer_sigalgs(bssl::SSL_HANDSHAKE *,cbs_st const*)", "bssl::parse_u16_array(cbs_st const*,bssl::Array<unsigned short> *)", "bssl::tls1_get_legacy_signature_algorithm(unsigned short *,evp_pkey_st const*)", "bssl::tls1_choose_signature_algorithm(bssl::SSL_HANDSHAKE *,unsigned short *)", "bssl::tls1_get_peer_verify_algorithms(bssl::SSL_HANDSHAKE const*)", "bssl::tls1_verify_channel_id(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&)", "bssl::tls1_channel_id_hash(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *)", "bssl::tls1_write_channel_id(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::tls1_record_handshake_hashes_for_channel_id(bssl::SSL_HANDSHAKE *)", "bssl::ssl_do_channel_id_callback(bssl::SSL_HANDSHAKE *)", "bssl::ssl_is_sct_list_valid(cbs_st const*)", "bssl::compare_uint16_t(void const*,void const*)", "bssl::ext_sni_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sni_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sni_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sni_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ems_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ems_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ems_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ems_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ri_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ri_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ri_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ri_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_groups_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_groups_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_supported_groups_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::dont_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ec_point_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ec_point_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ec_point_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ec_point_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ticket_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ticket_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ignore_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ticket_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_alpn_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_alpn_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_alpn_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ocsp_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ocsp_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ocsp_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ocsp_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sigalgs_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::forbid_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sigalgs_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sigalgs_cert_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_npn_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_npn_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_npn_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_npn_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sct_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_sct_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sct_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sct_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_channel_id_init(bssl::SSL_HANDSHAKE *)", "bssl::ext_channel_id_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_channel_id_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_channel_id_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_channel_id_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_srtp_init(bssl::SSL_HANDSHAKE *)", "bssl::ext_srtp_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_srtp_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_srtp_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_srtp_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_key_share_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_psk_key_exchange_modes_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_psk_key_exchange_modes_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_early_data_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_early_data_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_early_data_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_early_data_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_versions_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_cookie_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_quic_transport_params_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_quic_transport_params_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_quic_transport_params_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_quic_transport_params_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_token_binding_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_token_binding_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_token_binding_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_token_binding_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::cert_compression_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::cert_compression_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::cert_compression_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::cert_compression_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_delegated_credential_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_delegated_credential_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_pq_experiment_signal_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_pq_experiment_signal_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ec_point_add_extension(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::select_tb_param(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls_extension_find(unsigned int *,unsigned short)", "bssl::decrypt_ticket_with_cipher_ctx(bssl::Array<unsigned char> *,evp_cipher_ctx_st *,hmac_ctx_st *,bssl::Span<unsigned char const>)", "bssl::tls13_get_cert_verify_signature_input(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,bssl::ssl_cert_verify_context_t)", "bssl::tls13_process_certificate(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&,bool)", "bssl::tls13_process_certificate_verify(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&)", "bssl::tls13_process_finished(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&,bool)", "bssl::tls13_add_certificate(bssl::SSL_HANDSHAKE *)", "bssl::tls13_add_certificate_verify(bssl::SSL_HANDSHAKE *)", "bssl::tls13_add_finished(bssl::SSL_HANDSHAKE *)", "bssl::tls13_add_key_update(ssl_st *,int)", "bssl::tls13_post_handshake(ssl_st *,bssl::SSLMessage const&)", "bssl::tls13_client_handshake(bssl::SSL_HANDSHAKE *)", "bssl::tls13_client_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::tls13_process_new_session_ticket(ssl_st *,bssl::SSLMessage const&)", "bssl::tls13_init_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_init_early_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::tls13_advance_key_schedule(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char const>)", "bssl::hkdf_expand_label(bssl::Span<unsigned char>,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>)", "bssl::tls13_set_traffic_key(ssl_st *,ssl_encryption_level_t,evp_aead_direction_t,bssl::Span<unsigned char const>)", "bssl::tls13_derive_early_secret(bssl::SSL_HANDSHAKE *)", "bssl::tls13_set_early_secret_for_quic(bssl::SSL_HANDSHAKE *)", "bssl::tls13_derive_handshake_secrets(bssl::SSL_HANDSHAKE *)", "bssl::set_quic_secrets(bssl::SSL_HANDSHAKE *,ssl_encryption_level_t,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls13_derive_application_secrets(bssl::SSL_HANDSHAKE *)", "bssl::tls13_rotate_traffic_key(ssl_st *,evp_aead_direction_t)", "bssl::tls13_derive_resumption_secret(bssl::SSL_HANDSHAKE *)", "bssl::tls13_finished_mac(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,bool)", "bssl::tls13_derive_session_psk(ssl_session_st *,bssl::Span<unsigned char const>)", "bssl::tls13_export_keying_material(ssl_st *,bssl::Span<unsigned char>,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>)", "bssl::tls13_write_psk_binder(bssl::SSL_HANDSHAKE *,bssl::Span<unsigned char>)", "bssl::hash_transcript_and_truncated_client_hello(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,env_md_st const*,bssl::Span<unsigned char const>,unsigned long)", "bssl::tls13_psk_binder(unsigned char *,unsigned long *,unsigned short,env_md_st const*,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls13_verify_psk_binder(bssl::SSL_HANDSHAKE *,ssl_session_st *,bssl::SSLMessage const&,cbs_st *)", "bssl::tls13_server_handshake(bssl::SSL_HANDSHAKE *)", "bssl::tls13_server_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::resolve_ecdhe_secret(bssl::SSL_HANDSHAKE *,bool *,ssl_early_callback_ctx *)", "bssl::add_new_session_tickets(bssl::SSL_HANDSHAKE *,bool *)", "bssl::ssl_noop_x509_check_client_CA_names(stack_st_CRYPTO_BUFFER *)", "bssl::ssl_noop_x509_clear(bssl::CERT *)", "bssl::ssl_noop_x509_free(bssl::CERT *)", "bssl::ssl_noop_x509_dup(bssl::CERT *,bssl::CERT const*)", "bssl::ssl_noop_x509_flush_cached_chain(bssl::CERT *)", "bssl::ssl_noop_x509_flush_cached_leaf(bssl::CERT *)", "bssl::ssl_noop_x509_session_cache_objects(ssl_session_st *)", "bssl::ssl_noop_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "bssl::ssl_noop_x509_session_clear(ssl_session_st *)", "bssl::ssl_noop_x509_session_verify_cert_chain(ssl_session_st *,bssl::SSL_HANDSHAKE *,unsigned char *)", "bssl::ssl_noop_x509_hs_flush_cached_ca_names(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_new(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_config_free(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_flush_cached_client_CA(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_auto_chain_if_needed(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_ctx_new(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_free(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "bssl::ssl3_on_handshake_complete(ssl_st *)", "bssl::ssl3_set_read_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::ssl3_set_write_state(ssl_st *,std::__1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::ssl_record_sequence_update(unsigned char *,unsigned long)", "bssl::ssl_record_prefix_len(ssl_st const*)", "bssl::ssl_seal_align_prefix_len(ssl_st const*)", "bssl::tls_open_record(ssl_st *,unsigned char *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::skip_early_data(ssl_st *,unsigned char *,unsigned long)", "bssl::ssl_process_alert(ssl_st *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::tls_seal_record(ssl_st *,unsigned char *,unsigned long *,unsigned long,unsigned char,unsigned char const*,unsigned long)", "bssl::tls_seal_scatter_record(ssl_st *,unsigned char *,unsigned char *,unsigned char *,unsigned char,unsigned char const*,unsigned long)", "bssl::OpenRecord(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::SealRecordPrefixLen(ssl_st const*,unsigned long)", "bssl::SealRecordSuffixLen(ssl_st const*,unsigned long)", "bssl::SealRecord(ssl_st *,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char const>)", "bssl::do_seal_record(ssl_st *,unsigned char *,unsigned char *,unsigned char *,unsigned char,unsigned char const*,unsigned long)"]}, {"vendor": "kdoce", "uuid": "0171dac2-f440-476b-96d9-8acb3fb18952", "main_db": "vendors/kdoce/0171dac2-f440-476b-96d9-8acb3fb18952/77a5fecb2d61c3ee966418945fd3b747.diaout", "diff_db": "vendors/kdoce/0171dac2-f440-476b-96d9-8acb3fb18952/baseline.diaout", "added_cnt": 209, "removed_cnt": 446, "added_funcs": ["SSL_CUSTOM_EXTENSION_free", "custom_ext_add_clienthello", "custom_ext_add_serverhello", "SSL_CTX_add_client_custom_ext", "custom_ext_append(stack_st_SSL_CUSTOM_EXTENSION **,unsigned int,int (*)(ssl_st *,unsigned int,unsigned char const**,unsigned long *,int *,void *),void (*)(ssl_st *,unsigned int,unsigned char const*,void *),void *,int (*)(ssl_st *,unsigned int,unsigned char const*,unsigned long,int *,void *),void *)", "default_add_callback(ssl_st *,unsigned int,unsigned char const**,unsigned long *,int *,void *)", "SSL_CTX_add_server_custom_ext", "dtls1_get_current_message", "dtls_clear_incoming_messages", "dtls1_add_message", "dtls1_add_change_cipher_spec", "dtls1_add_alert", "dtls1_retransmit_outgoing_messages", "dtls1_min_mtu", "dtls1_free", "dtls1_is_timer_expired", "dtls1_stop_timer", "dtls1_read_close_notify", "dtls1_supports_cipher(ssl_cipher_st const*)", "dtls1_expect_flight(ssl_st *)", "dtls1_received_flight(ssl_st *)", "dtls_max_seal_overhead", "dtls_seal_prefix_len", "ssl_handshake_free", "ssl3_finish_message", "ssl3_add_message", "ssl3_add_change_cipher_spec", "ssl3_add_alert", "ssl_add_message_cbb", "ssl_hash_current_message", "ssl3_release_current_message", "ssl3_get_current_message", "ssl3_new", "ssl3_free", "ssl_get_cipher_preferences", "ssl3_read_close_notify", "ssl3_dispatch_alert", "SSL_AEAD_CTX_free", "SSL_AEAD_CTX_explicit_nonce_len", "SSL_AEAD_CTX_max_suffix_len", "SSL_AEAD_CTX_max_overhead", "ssl_read_buffer", "ssl_read_buffer_len", "ssl_read_buffer_discard", "ssl_read_buffer_consume", "ssl_write_buffer_is_pending", "ssl_write_buffer_init", "ssl_cert_free", "ssl_cert_clear_certs", "ssl_set_cert", "ssl_has_certificate", "ssl_cipher_get_value", "SSL_CIPHER_is_AES", "SSL_CIPHER_has_SHA1_HMAC", "SSL_CIPHER_has_SHA256_HMAC", "SSL_CIPHER_has_SHA384_HMAC", "SSL_CIPHER_is_AEAD", "SSL_CIPHER_is_AESGCM", "SSL_CIPHER_is_AES128GCM", "SSL_CIPHER_is_AES128CBC", "SSL_CIPHER_is_AES256CBC", "SSL_CIPHER_is_CHACHA20POLY1305", "SSL_CIPHER_is_NULL", "SSL_CIPHER_is_ECDSA", "SSL_CIPHER_is_ECDHE", "SSL_CIPHER_is_static_RSA", "ssl_cipher_requires_server_key_exchange", "ssl_nid_to_group_id", "ssl_name_to_group_id", "SSL_ECDH_CTX_cleanup", "SSL_ECDH_CTX_get_id", "SSL_ECDH_CTX_offer", "SSL_ECDH_CTX_accept", "SSL_ECDH_CTX_finish", "ssl_ec_point_cleanup(ssl_ecdh_ctx_st *)", "ssl_ec_point_offer(ssl_ecdh_ctx_st *,cbb_st *)", "ssl_ec_point_accept(ssl_ecdh_ctx_st *,cbb_st *,unsigned char **,unsigned long *,unsigned char *,unsigned char const*,unsigned long)", "ssl_ec_point_finish(ssl_ecdh_ctx_st *,unsigned char **,unsigned long *,unsigned char *,unsigned char const*,unsigned long)", "ssl_x25519_cleanup(ssl_ecdh_ctx_st *)", "ssl_x25519_offer(ssl_ecdh_ctx_st *,cbb_st *)", "ssl_x25519_accept(ssl_ecdh_ctx_st *,cbb_st *,unsigned char **,unsigned long *,unsigned char *,unsigned char const*,unsigned long)", "ssl_x25519_finish(ssl_ecdh_ctx_st *,unsigned char **,unsigned long *,unsigned char *,unsigned char const*,unsigned long)", "ssl_cipher_preference_list_free", "SSL_CTX_set_tls13_variant", "SSL_set_tls13_variant", "SSL_CTX_sessions", "SSL_CTX_i_promise_to_verify_certs_after_the_handshake", "ssl_update_cache", "ssl_get_current_time", "SSL_get_structure_sizes", "ssl3_can_false_start", "ssl_is_key_type_supported", "ssl_has_private_key", "ssl_public_key_verify", "ssl_session_renew_timeout", "SSL_SESSION_protocol_version", "SSL_SESSION_get_digest", "ssl_set_session", "remove_session_lock(ssl_ctx_st *,ssl_session_st *,int)", "SSL_TRANSCRIPT_init", "SSL_TRANSCRIPT_init_hash", "SSL_TRANSCRIPT_free_buffer", "SSL_TRANSCRIPT_md", "SSL_TRANSCRIPT_update", "SSL_TRANSCRIPT_get_hash", "ssl3_handshake_mac(ssl_transcript_st *,ssl_session_st const*,env_md_ctx_st const*,char const*,unsigned long,unsigned char *,unsigned long *)", "ssl_crypto_x509_check_client_CA_list(stack_st_CRYPTO_BUFFER *)", "ssl_crypto_x509_cert_clear(cert_st *)", "ssl_crypto_x509_cert_free(cert_st *)", "ssl_crypto_x509_cert_flush_cached_chain(cert_st *)", "ssl_crypto_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "ssl_crypto_x509_session_clear(ssl_session_st *)", "ssl_crypto_x509_hs_flush_cached_ca_names(ssl_handshake_st *)", "ssl_crypto_x509_ssl_free(ssl_st *)", "ssl_crypto_x509_ssl_flush_cached_client_CA(ssl_st *)", "ssl_crypto_x509_ssl_ctx_free(ssl_ctx_st *)", "ssl_crypto_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "ssl_cert_cache_chain_certs(cert_st *)", "ssl_session_new_with_crypto_x509(void)", "set_client_CA_list(stack_st_CRYPTO_BUFFER **,stack_st_X509_NAME const*,crypto_buffer_pool_st *)", "add_client_CA(stack_st_CRYPTO_BUFFER **,x509_st *,crypto_buffer_pool_st *)", "ssl_cert_set_chain(cert_st *,stack_st_X509 *)", "ssl_cert_append_cert(cert_st *,x509_st *)", "tls1_prf", "tls1_P_hash(unsigned char *,unsigned long,env_md_st const*,unsigned char const*,unsigned long,unsigned char const*,unsigned long,unsigned char const*,unsigned long,unsigned char const*,unsigned long)", "ssl_client_hello_init", "tls1_get_grouplist", "tls1_get_shared_group", "tls1_set_curves", "tls1_set_curves_list", "tls1_check_group_id", "tls12_add_verify_sigalgs", "ssl_ext_key_share_add_serverhello", "tls1_record_handshake_hashes_for_channel_id", "ssl_do_channel_id_callback", "ext_sni_parse_serverhello(ssl_handshake_st *,unsigned char *,cbs_st *)", "ext_sni_parse_clienthello(ssl_handshake_st *,unsigned char *,cbs_st *)", "ignore_parse_clienthello(ssl_handshake_st *,unsigned char *,cbs_st *)", "ext_sigalgs_add_clienthello(ssl_handshake_st *,cbb_st *)", "dont_add_serverhello(ssl_handshake_st *,cbb_st *)", "ext_srtp_init(ssl_handshake_st *)", "ext_srtp_add_clienthello(ssl_handshake_st *,cbb_st *)", "ext_psk_key_exchange_modes_parse_clienthello(ssl_handshake_st *,unsigned char *,cbs_st *)", "ext_supported_versions_add_clienthello(ssl_handshake_st *,cbb_st *)", "ext_cookie_add_clienthello(ssl_handshake_st *,cbb_st *)", "ext_supported_groups_add_clienthello(ssl_handshake_st *,cbb_st *)", "ext_supported_groups_parse_serverhello(ssl_handshake_st *,unsigned char *,cbs_st *)", "ext_supported_groups_parse_clienthello(ssl_handshake_st *,unsigned char *,cbs_st *)", "ext_supported_groups_add_serverhello(ssl_handshake_st *,cbb_st *)", "ssl_clear_tls13_state", "tls13_init_key_schedule", "tls13_init_early_key_schedule", "tls13_advance_key_schedule", "tls13_rotate_traffic_key", "tls13_export_keying_material", "SSLv3_server_method", "ssl3_supports_cipher(ssl_cipher_st const*)", "ssl3_expect_flight(ssl_st *)", "ssl3_received_flight(ssl_st *)", "ssl3_set_write_state(ssl_st *,ssl_aead_ctx_st *)", "ssl_noop_x509_check_client_CA_names(stack_st_CRYPTO_BUFFER *)", "ssl_noop_x509_clear(cert_st *)", "ssl_noop_x509_free(cert_st *)", "ssl_noop_x509_dup(cert_st *,cert_st const*)", "ssl_noop_x509_flush_cached_chain(cert_st *)", "ssl_noop_x509_flush_cached_leaf(cert_st *)", "ssl_noop_x509_session_cache_objects(ssl_session_st *)", "ssl_noop_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "ssl_noop_x509_session_clear(ssl_session_st *)", "ssl_noop_x509_session_verify_cert_chain(ssl_session_st *,ssl_st *)", "ssl_noop_x509_hs_flush_cached_ca_names(ssl_handshake_st *)", "ssl_noop_x509_ssl_new(ssl_st *)", "ssl_noop_x509_ssl_free(ssl_st *)", "ssl_noop_x509_ssl_flush_cached_client_CA(ssl_st *)", "ssl_noop_x509_ssl_auto_chain_if_needed(ssl_st *)", "ssl_noop_x509_ssl_ctx_new(ssl_ctx_st *)", "ssl_noop_x509_ssl_ctx_free(ssl_ctx_st *)", "ssl_noop_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "ssl_record_prefix_len", "ssl_seal_align_prefix_len", "CBS_stow", "EVP_PKEY_CTX_free", "EVP_PKEY_CTX_new", "EVP_PKEY_sign", "EVP_PKEY_sign_init", "OPENSSL_cleanse", "sk_pop_free", "EVP_PKEY_verify", "EVP_PKEY_verify_init", "EVP_aead_aes_128_cbc_sha1_ssl3", "EVP_aead_aes_128_cbc_sha256_tls", "EVP_aead_aes_256_cbc_sha1_ssl3", "EVP_aead_aes_256_cbc_sha256_tls", "EVP_aead_aes_256_cbc_sha384_tls", "EVP_aead_des_ede3_cbc_sha1_ssl3", "EVP_aead_null_sha1_ssl3", "BN_clear_free", "BIO_free_all", "EVP_PKEY_assign_RSA", "RSA_up_ref", "BUF_MEM_grow", "EVP_MD_CTX_size", "EVP_md5", "ASN1_d2i_bio", "ASN1_i2d_bio", "HMAC_CTX_copy_ex", "realloc", "CBS_get_last_u8", "ERR_add_error_data"], "removed_funcs": ["__emutls_unregister_key", "__on_dlclose_late", "__atexit_handler_wrapper", "atexit", "bssl::hm_fragment::~hm_fragment()", "bssl::dtls1_get_message(ssl_st *,bssl::SSLMessage *)", "bssl::dtls1_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::DTLS_OUTGOING_MESSAGE::Clear(void)", "bssl::dtls_clear_outgoing_messages(ssl_st *)", "bssl::dtls1_add_message(ssl_st *,bssl::Array<unsigned char>)", "bssl::dtls1_add_change_cipher_spec(ssl_st *)", "bssl::dtls1_flush_flight(ssl_st *)", "bssl::dtls1_retransmit_outgoing_messages(ssl_st *)", "bssl::dtls1_min_mtu(void)", "bssl::DTLS1_STATE::~DTLS1_STATE()", "bssl::dtls1_new(ssl_st *)", "bssl::dtls1_free(ssl_st *)", "bssl::dtls1_stop_timer(ssl_st *)", "DTLS_method", "DTLS_with_buffers_method", "DTLSv1_2_method", "DTLSv1_method", "DTLSv1_2_client_method", "DTLSv1_client_method", "DTLS_client_method", "dtls1_on_handshake_complete(ssl_st *)", "bssl::dtls_max_seal_overhead(ssl_st const*,bssl::dtls1_use_epoch_t)", "bssl::dtls_seal_prefix_len(ssl_st const*,bssl::dtls1_use_epoch_t)", "bssl::SSL_serialize_handoff(ssl_st const*,cbb_st *)", "bssl::SSL_decline_handoff(ssl_st *)", "bssl::SSL_apply_handoff(ssl_st *,bssl::Span<unsigned char const>)", "bssl::SSL_serialize_handback(ssl_st const*,cbb_st *)", "bssl::SSL_apply_handback(ssl_st *,bssl::Span<unsigned char const>)", "sk_SSL_CIPHER_call_cmp_func", "bssl::SSL_HANDSHAKE::~SSL_HANDSHAKE()", "bssl::ssl_handshake_new(ssl_st *)", "bssl::ssl_add_message_cbb(ssl_st *,cbb_st *)", "bssl::ssl_hash_message(bssl::SSL_HANDSHAKE *,bssl::SSLMessage const&)", "bssl::ssl_verify_peer_cert(bssl::SSL_HANDSHAKE *)", "bssl::ssl_reverify_peer_cert(bssl::SSL_HANDSHAKE *)", "bssl::ssl_output_cert_chain(bssl::SSL_HANDSHAKE *)", "bssl::ssl_run_handshake(bssl::SSL_HANDSHAKE *,bool *)", "bssl::internal::DeleterImpl<stack_st_CRYPTO_BUFFER,void>::Free(stack_st_CRYPTO_BUFFER*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::ssl_client_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl_server_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl3_finish_message(ssl_st *,cbb_st *,bssl::Array<unsigned char> *)", "bssl::ssl3_add_message(ssl_st *,bssl::Array<unsigned char>)", "bssl::ssl3_add_change_cipher_spec(ssl_st *)", "bssl::ssl3_get_message(ssl_st *,bssl::SSLMessage *)", "bssl::parse_message(ssl_st const*,bssl::SSLMessage *,unsigned long *)", "bssl::tls_has_unprocessed_handshake_data(ssl_st const*)", "bssl::tls_append_handshake_data(ssl_st *,bssl::Span<unsigned char const>)", "bssl::ssl3_next_message(ssl_st *)", "bssl::SSL3_STATE::~SSL3_STATE()", "bssl::ssl3_new(ssl_st *)", "bssl::ssl3_free(ssl_st *)", "bssl::ssl3_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl3_dispatch_alert(ssl_st *)", "bssl::SSLAEADContext::~SSLAEADContext()", "bssl::SSLAEADContext::CreateNullCipher(bool)", "bssl::SSLAEADContext::CreatePlaceholderForQUIC(unsigned short,ssl_cipher_st const*)", "bssl::SSLAEADContext::SetVersionIfNullCipher(unsigned short)", "bssl::SSLAEADContext::ProtocolVersion(void)const", "bssl::SSLAEADContext::RecordVersion(void)const", "bssl::SSLAEADContext::ExplicitNonceLen(void)const", "bssl::SSLAEADContext::SuffixLen(unsigned long *,unsigned long,unsigned long)const", "bssl::SSLAEADContext::MaxOverhead(void)const", "bssl::SSLAEADContext::Seal(unsigned char *,unsigned long *,unsigned long,unsigned char,unsigned short,unsigned char const*,bssl::Span<unsigned char const>,unsigned char const*,unsigned long)", "bssl::SSLAEADContext::GetIV(unsigned char const**,unsigned long *)const", "bssl::ssl_session_serialize(ssl_session_st const*,cbb_st *)", "bssl::SSLBuffer::Clear(void)", "bssl::ssl_handle_open_record(ssl_st *,bool *,bssl::ssl_open_record_t,unsigned long,unsigned char)", "bssl::CERT::CERT(bssl::SSL_X509_METHOD const*)", "bssl::CERT::~CERT()", "bssl::ssl_cert_clear_certs(bssl::CERT *)", "bssl::ssl_cert_dup(bssl::CERT *)", "bssl::DC::Dup(void)", "bssl::ssl_set_cert(bssl::CERT *,std::__ndk1::unique_ptr<crypto_buffer_st,bssl::internal::Deleter<crypto_buffer_st>>)", "bssl::ssl_has_certificate(bssl::SSL_HANDSHAKE const*)", "bssl::ssl_parse_cert_chain(unsigned char *,std::__ndk1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,std::__ndk1::unique_ptr<evp_pkey_st,bssl::internal::Deleter<evp_pkey_st>> *,unsigned char *,cbs_st *,crypto_buffer_pool_st *)", "bssl::ssl_has_client_CAs(bssl::SSL_CONFIG const*)", "bssl::ssl_on_certificate_selected(bssl::SSL_HANDSHAKE *)", "bssl::ssl_signing_with_dc(bssl::SSL_HANDSHAKE const*)", "bssl::DC::Parse(crypto_buffer_st *,unsigned char *)", "SSL_CTX_set0_client_CAs", "SSL_set0_client_CAs", "SSL_set1_delegated_credential", "sk_CRYPTO_BUFFER_call_copy_func", "sk_CRYPTO_BUFFER_call_free_func", "bssl::AllCiphers(void)", "bssl::SSLCipherPreferenceList::~SSLCipherPreferenceList()", "bssl::SSLCipherPreferenceList::Init(std::__ndk1::unique_ptr<stack_st_SSL_CIPHER,bssl::internal::Deleter<stack_st_SSL_CIPHER>>,bssl::Span<bool const>)", "bssl::SSLCipherPreferenceList::Init(bssl::SSLCipherPreferenceList const&)", "bssl::ssl_cipher_get_value(ssl_cipher_st const*)", "bssl::ssl_cipher_requires_server_key_exchange(ssl_cipher_st const*)", "SSL_CIPHER_is_aead", "SSL_CIPHER_get_cipher_nid", "SSL_CIPHER_get_digest_nid", "SSL_CIPHER_get_kx_nid", "SSL_CIPHER_get_auth_nid", "SSL_CIPHER_get_prf_nid", "SSL_COMP_get_compression_methods", "SSL_COMP_add_compression_method", "SSL_COMP_get_name", "SSL_COMP_get0_name", "SSL_COMP_get_id", "SSL_COMP_free_compression_methods", "SSL_CTX_get_default_passwd_cb", "SSL_CTX_get_default_passwd_cb_userdata", "sk_X509_NAME_call_cmp_func", "sk_X509_NAME_call_free_func", "bssl::NamedGroups(void)", "bssl::SSLKeyShare::Create(unsigned short)", "bssl::SSLKeyShare::Create(cbs_st *)", "bssl::SSLKeyShare::Accept(cbb_st *,bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::ssl_nid_to_group_id(unsigned short *,int)", "bssl::ssl_name_to_group_id(unsigned short *,char const*,unsigned long)", "bssl::SSLKeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::~ECKeyShare()", "bssl::`anonymous namespace'::ECKeyShare::~ECKeyShare()", "bssl::`anonymous namespace'::ECKeyShare::GroupID(void)const", "bssl::`anonymous namespace'::ECKeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::ECKeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::ECKeyShare::Deserialize(cbs_st *)", "bssl::`anonymous namespace'::X25519KeyShare::~X25519KeyShare()", "bssl::`anonymous namespace'::X25519KeyShare::GroupID(void)const", "bssl::`anonymous namespace'::X25519KeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::X25519KeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::X25519KeyShare::Serialize(cbb_st *)", "bssl::`anonymous namespace'::X25519KeyShare::Deserialize(cbs_st *)", "bssl::SSLKeyShare::~SSLKeyShare()", "bssl::`anonymous namespace'::CECPQ2KeyShare::GroupID(void)const", "bssl::`anonymous namespace'::CECPQ2KeyShare::Offer(cbb_st *)", "bssl::`anonymous namespace'::CECPQ2KeyShare::Accept(cbb_st *,bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::`anonymous namespace'::CECPQ2KeyShare::Finish(bssl::Array<unsigned char> *,unsigned char *,bssl::Span<unsigned char const>)", "bssl::CBBFinishArray(cbb_st *,bssl::Array<unsigned char> *)", "bssl::ssl_open_handshake(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_open_change_cipher_spec(ssl_st *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::ssl_update_cache(bssl::SSL_HANDSHAKE *,int)", "bssl::ssl_get_current_time(ssl_st const*,bssl::OPENSSL_timeval *)", "bssl::ssl_ctx_get_current_time(ssl_ctx_st const*,bssl::OPENSSL_timeval *)", "bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st *,bool)", "bssl::SSL_set_handoff_mode(ssl_st *,bool)", "bssl::SSL_get_traffic_secrets(ssl_st const*,bssl::Span<unsigned char const> *,bssl::Span<unsigned char const> *)", "OPENSSL_init_ssl", "ssl_ctx_st::~ssl_ctx_st()", "ssl_st::ssl_st(ssl_ctx_st *)", "ssl_st::~ssl_st()", "bssl::Array<unsigned short>::CopyFrom(bssl::Span<unsigned short const>)", "bssl::SSL_CONFIG::~SSL_CONFIG()", "SSL_quic_max_handshake_flight_len", "SSL_quic_read_level", "SSL_quic_write_level", "SSL_provide_quic_data", "SSL_process_quic_post_handshake", "SSL_key_update", "SSL_set_quic_transport_params", "SSL_get_peer_quic_transport_params", "SSL_get_fd", "SSL_CTX_get_read_ahead", "SSL_get_read_ahead", "SSL_CTX_set_read_ahead", "SSL_set_read_ahead", "SSL_CTX_sess_get_cache_size", "SSL_CTX_set_tmp_dh", "SSL_set_tmp_dh", "SSL_CTX_cipher_in_group", "SSL_CTX_set_custom_verify", "SSL_set_custom_verify", "SSL_CTX_add_cert_compression_alg", "SSL_set_token_binding_params", "SSL_is_token_binding_negotiated", "SSL_get_negotiated_token_binding_param", "SSL_get0_peer_verify_algorithms", "SSL_get_current_compression", "SSL_get_current_expansion", "SSL_set_state", "SSL_CTX_set_quic_method", "SSL_set_quic_method", "SSL_CTX_set_tmp_rsa_callback", "SSL_CTX_set_tmp_dh_callback", "SSL_set_tmp_dh_callback", "SSL_cutthrough_complete", "SSL_CTX_set_reverify_on_resume", "SSL_set_enforce_rsa_key_usage", "SSL_CTX_set_false_start_allowed_without_alpn", "SSL_is_tls13_downgrade", "SSL_CTX_set_ignore_tls13_downgrade", "SSL_set_ignore_tls13_downgrade", "SSL_set_shed_handshake_config", "SSL_set_jdk11_workaround", "SSL_CTX_sess_connect", "SSL_CTX_sess_connect_good", "SSL_CTX_sess_connect_renegotiate", "SSL_CTX_sess_accept", "SSL_CTX_sess_accept_renegotiate", "SSL_CTX_sess_accept_good", "SSL_CTX_sess_hits", "SSL_CTX_sess_cb_hits", "SSL_CTX_sess_misses", "SSL_CTX_sess_timeouts", "SSL_CTX_sess_cache_full", "SSL_num_renegotiations", "SSL_CTX_need_tmp_RSA", "SSL_CTX_set_tmp_rsa", "ERR_load_SSL_strings", "SSL_load_error_strings", "SSL_cache_hit", "SSL_set_tlsext_status_type", "SSL_get_tlsext_status_type", "SSL_set_tlsext_status_ocsp_resp", "SSL_get_tlsext_status_ocsp_resp", "SSL_CTX_set_tlsext_status_cb", "SSL_CTX_set_tlsext_status_arg", "bssl::internal::DeleterImpl<stack_st_CertCompressionAlg,void>::Free(stack_st_CertCompressionAlg*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::ssl_is_key_type_supported(int)", "bssl::ssl_has_private_key(bssl::SSL_HANDSHAKE const*)", "bssl::ssl_private_key_sign(bssl::SSL_HANDSHAKE *,unsigned char *,unsigned long *,unsigned long,unsigned short,bssl::Span<unsigned char const>)", "bssl::ssl_public_key_verify(ssl_st *,bssl::Span<unsigned char const>,unsigned short,evp_pkey_st *,bssl::Span<unsigned char const>)", "SSL_get_signature_algorithm_name", "SSL_get_signature_algorithm_key_type", "SSL_get_signature_algorithm_digest", "SSL_CTX_set1_sigalgs", "parse_sigalg_pairs(bssl::Array<unsigned short> *,int const*,unsigned long)", "sigalgs_unique(bssl::Span<unsigned short const>)", "SSL_set1_sigalgs", "SSL_CTX_set1_sigalgs_list", "parse_sigalgs_list(bssl::Array<unsigned short> *,char const*)", "SSL_set1_sigalgs_list", "bssl::ssl_session_new(bssl::SSL_X509_METHOD const*)", "std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> bssl::MakeUnique<ssl_session_st,bssl::SSL_X509_METHOD const*&>(bssl::SSL_X509_METHOD const*&)", "bssl::ssl_hash_session_id(bssl::Span<unsigned char const>)", "bssl::ssl_session_renew_timeout(ssl_st *,ssl_session_st *,unsigned int)", "bssl::ssl_session_protocol_version(ssl_session_st const*)", "bssl::ssl_session_get_digest(ssl_session_st const*)", "bssl::ssl_set_session(ssl_st *,ssl_session_st *)", "bssl::ssl_ctx_rotate_ticket_encryption_key(ssl_ctx_st *)", "bssl::ssl_get_prev_session(bssl::SSL_HANDSHAKE *,std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bool *,ssl_early_callback_ctx const*)", "ssl_session_st::~ssl_session_st()", "SSL_SESSION_set1_id", "SSL_SESSION_get0_peer_certificates", "SSL_SESSION_get0_signed_cert_timestamp_list", "SSL_SESSION_get0_ocsp_response", "SSL_SESSION_get0_id_context", "SSL_SESSION_should_be_single_use", "SSL_SESSION_is_resumable", "SSL_SESSION_has_ticket", "SSL_SESSION_get0_ticket", "SSL_SESSION_set_ticket", "SSL_SESSION_get_ticket_lifetime_hint", "SSL_SESSION_get0_cipher", "SSL_SESSION_has_peer_sha256", "SSL_SESSION_get0_peer_sha256", "bssl::remove_session_lock(ssl_ctx_st *,ssl_session_st *,int)", "SSL_CTX_sess_get_new_cb", "SSL_CTX_sess_set_remove_cb", "SSL_CTX_sess_get_remove_cb", "SSL_CTX_sess_get_get_cb", "bssl::SSL_SESSION_dup(ssl_session_st *,int)::$_0::__invoke(crypto_buffer_st *)", "lh_SSL_SESSION_call_cmp_key(void const*,void const*)", "bssl::ssl_lookup_session(bssl::SSL_HANDSHAKE *,std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bssl::Span<unsigned char const>)::$_1::__invoke(void const*,ssl_session_st const*)", "lh_SSL_SESSION_call_hash_func(unsigned int (*)(void const*),void const*)", "lh_SSL_SESSION_call_cmp_func(int (*)(void const*,void const*),void const*,void const*)", "lh_SSL_SESSION_call_doall_arg(void *,void *)", "bssl::SSLTranscript::SSLTranscript(void)", "bssl::SSLTranscript::Init(void)", "bssl::SSLTranscript::InitHash(unsigned short,ssl_cipher_st const*)", "bssl::SSLTranscript::FreeBuffer(void)", "bssl::SSLTranscript::Digest(void)const", "bssl::SSLTranscript::UpdateForHelloRetryRequest(void)", "bssl::SSLTranscript::GetHash(unsigned char *,unsigned long *)", "bssl::SSLTranscript::Update(bssl::Span<unsigned char const>)", "bssl::ssl_protocol_version_from_wire(unsigned short *,unsigned short)", "bssl::ssl_method_supports_version(bssl::SSL_PROTOCOL_METHOD const*,unsigned short)", "bssl::ssl_add_supported_versions(bssl::SSL_HANDSHAKE *,cbb_st *)", "SSL_SESSION_get_protocol_version", "SSL_SESSION_set_protocol_version", "bssl::set_version_bound(bssl::SSL_PROTOCOL_METHOD const*,unsigned short *,unsigned short)", "bssl::ssl_crypto_x509_check_client_CA_list(stack_st_CRYPTO_BUFFER *)", "bssl::ssl_crypto_x509_cert_clear(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_free(bssl::CERT *)", "bssl::ssl_crypto_x509_cert_flush_cached_chain(bssl::CERT *)", "bssl::ssl_crypto_x509_session_cache_objects(ssl_session_st *)", "bssl::ssl_crypto_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "bssl::ssl_crypto_x509_session_clear(ssl_session_st *)", "bssl::ssl_crypto_x509_hs_flush_cached_ca_names(bssl::SSL_HANDSHAKE *)", "bssl::ssl_crypto_x509_ssl_config_free(bssl::SSL_CONFIG *)", "bssl::ssl_crypto_x509_ssl_flush_cached_client_CA(bssl::SSL_CONFIG *)", "bssl::ssl_crypto_x509_ssl_ctx_free(ssl_ctx_st *)", "bssl::ssl_crypto_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "ssl_use_certificate(bssl::CERT *,x509_st *)", "SSL_CTX_add0_chain_cert", "SSL_CTX_clear_chain_certs", "SSL_CTX_get0_chain_certs", "ssl_cert_cache_chain_certs(bssl::CERT *)", "pem_read_bio_SSL_SESSION_d2i(void **,unsigned char const**,long)", "pem_read_SSL_SESSION_d2i(void **,unsigned char const**,long)", "pem_write_bio_SSL_SESSION_i2d(void const*,unsigned char **)", "pem_write_SSL_SESSION_i2d(void const*,unsigned char **)", "set_client_CA_list(std::__ndk1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,stack_st_X509_NAME const*,crypto_buffer_pool_st *)", "add_client_CA(std::__ndk1::unique_ptr<stack_st_CRYPTO_BUFFER,bssl::internal::Deleter<stack_st_CRYPTO_BUFFER>> *,x509_st *,crypto_buffer_pool_st *)", "SSL_get_ex_data_X509_STORE_CTX_idx", "SSL_alert_from_verify_result", "sk_X509_call_free_func", "bssl::internal::DeleterImpl<stack_st_X509,void>::Free(stack_st_X509*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::ssl_cert_set_chain(bssl::CERT *,stack_st_X509 *)", "ssl_cert_append_cert(bssl::CERT *,x509_st *)", "sk_X509_NAME_call_copy_func", "bssl::internal::DeleterImpl<stack_st_X509_NAME,void>::Free(stack_st_X509_NAME*)::{lambda(void (*)(void *),void *)#1}::__invoke(void (*)(void *),void *)", "bssl::tls1_prf(env_md_st const*,bssl::Span<unsigned char>,bssl::Span<unsigned char const>,bssl::Span<char const>,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls1_configure_aead(ssl_st *,evp_aead_direction_t,bssl::Array<unsigned char> *,ssl_cipher_st const*,bssl::Span<unsigned char const>)", "bssl::get_key_block_lengths(ssl_st const*,unsigned long *,unsigned long *,unsigned long *,ssl_cipher_st const*)", "bssl::tls1_change_cipher_state(bssl::SSL_HANDSHAKE *,evp_aead_direction_t)", "SSL_export_early_keying_material", "bssl::ssl_client_hello_init(ssl_st *,ssl_early_callback_ctx *,bssl::SSLMessage const&)", "bssl::tls1_get_grouplist(bssl::SSL_HANDSHAKE const*)", "bssl::tls1_get_shared_group(bssl::SSL_HANDSHAKE *,unsigned short *)", "bssl::tls1_set_curves(bssl::Array<unsigned short> *,bssl::Span<int const>)", "bssl::tls1_set_curves_list(bssl::Array<unsigned short> *,char const*)", "bssl::tls1_check_group_id(bssl::SSL_HANDSHAKE const*,unsigned short)", "bssl::tls12_add_verify_sigalgs(ssl_st const*,cbb_st *,bool)", "bssl::tls12_has_different_verify_sigalgs_for_certs(ssl_st const*)", "bssl::ssl_is_alpn_protocol_allowed(bssl::SSL_HANDSHAKE const*,bssl::Span<unsigned char const>)", "bssl::ssl_ext_key_share_parse_serverhello(bssl::SSL_HANDSHAKE *,bssl::Array<unsigned char> *,unsigned char *,cbs_st *)", "bssl::ssl_ext_key_share_parse_clienthello(bssl::SSL_HANDSHAKE *,bool *,bssl::Array<unsigned char> *,unsigned char *,cbs_st *)", "bssl::ssl_ext_key_share_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ssl_process_ticket(bssl::SSL_HANDSHAKE *,std::__ndk1::unique_ptr<ssl_session_st,bssl::internal::Deleter<ssl_session_st>> *,bool *,bssl::Span<unsigned char const>,bssl::Span<unsigned char const>)", "bssl::tls1_parse_peer_sigalgs(bssl::SSL_HANDSHAKE *,cbs_st const*)", "bssl::parse_u16_array(cbs_st const*,bssl::Array<unsigned short> *)", "bssl::tls1_get_peer_verify_algorithms(bssl::SSL_HANDSHAKE const*)", "bssl::tls1_record_handshake_hashes_for_channel_id(bssl::SSL_HANDSHAKE *)", "bssl::ssl_do_channel_id_callback(bssl::SSL_HANDSHAKE *)", "SSL_CTX_set_rsa_pss_rsae_certs_enabled", "bssl::compare_uint16_t(void const*,void const*)", "bssl::ext_sni_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sni_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_ems_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_groups_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_supported_groups_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_supported_groups_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::dont_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_ticket_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ignore_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_alpn_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_sigalgs_cert_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_srtp_init(bssl::SSL_HANDSHAKE *)", "bssl::ext_srtp_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_key_share_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_psk_key_exchange_modes_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_supported_versions_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_cookie_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_quic_transport_params_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_quic_transport_params_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_quic_transport_params_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_quic_transport_params_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_token_binding_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_token_binding_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_token_binding_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::ext_token_binding_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::cert_compression_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::cert_compression_parse_serverhello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::cert_compression_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::cert_compression_add_serverhello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_delegated_credential_add_clienthello(bssl::SSL_HANDSHAKE *,cbb_st *)", "bssl::ext_delegated_credential_parse_clienthello(bssl::SSL_HANDSHAKE *,unsigned char *,cbs_st *)", "bssl::tls_extension_find(unsigned int *,unsigned short)", "bssl::decrypt_ticket_with_cipher_ctx(bssl::Array<unsigned char> *,evp_cipher_ctx_st *,hmac_ctx_st *,bssl::Span<unsigned char const>)", "bssl::tls13_add_key_update(ssl_st *,int)", "bssl::tls13_client_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::tls13_init_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned long)", "bssl::tls13_init_early_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned long)", "bssl::tls13_advance_key_schedule(bssl::SSL_HANDSHAKE *,unsigned char const*,unsigned long)", "bssl::tls13_rotate_traffic_key(ssl_st *,evp_aead_direction_t)", "bssl::tls13_derive_session_psk(ssl_session_st *,bssl::Span<unsigned char const>)", "bssl::tls13_server_handshake_state(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_check_client_CA_names(stack_st_CRYPTO_BUFFER *)", "bssl::ssl_noop_x509_clear(bssl::CERT *)", "bssl::ssl_noop_x509_free(bssl::CERT *)", "bssl::ssl_noop_x509_dup(bssl::CERT *,bssl::CERT const*)", "bssl::ssl_noop_x509_flush_cached_chain(bssl::CERT *)", "bssl::ssl_noop_x509_flush_cached_leaf(bssl::CERT *)", "bssl::ssl_noop_x509_session_cache_objects(ssl_session_st *)", "bssl::ssl_noop_x509_session_dup(ssl_session_st *,ssl_session_st const*)", "bssl::ssl_noop_x509_session_clear(ssl_session_st *)", "bssl::ssl_noop_x509_session_verify_cert_chain(ssl_session_st *,bssl::SSL_HANDSHAKE *,unsigned char *)", "bssl::ssl_noop_x509_hs_flush_cached_ca_names(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_new(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_config_free(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_flush_cached_client_CA(bssl::SSL_CONFIG *)", "bssl::ssl_noop_x509_ssl_auto_chain_if_needed(bssl::SSL_HANDSHAKE *)", "bssl::ssl_noop_x509_ssl_ctx_new(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_free(ssl_ctx_st *)", "bssl::ssl_noop_x509_ssl_ctx_flush_cached_client_CA(ssl_ctx_st *)", "TLS_method", "SSLv23_method", "TLSv1_2_method", "TLSv1_1_method", "TLSv1_method", "TLSv1_2_client_method", "TLSv1_1_client_method", "TLSv1_client_method", "SSLv23_server_method", "SSLv23_client_method", "TLS_client_method", "bssl::ssl3_on_handshake_complete(ssl_st *)", "bssl::ssl3_set_write_state(ssl_st *,std::__ndk1::unique_ptr<bssl::SSLAEADContext,bssl::internal::Deleter<bssl::SSLAEADContext>>)", "bssl::ssl_record_prefix_len(ssl_st const*)", "bssl::ssl_seal_align_prefix_len(ssl_st const*)", "bssl::tls_seal_scatter_record(ssl_st *,unsigned char *,unsigned char *,unsigned char *,unsigned char,unsigned char const*,unsigned long)", "bssl::OpenRecord(ssl_st *,bssl::Span<unsigned char> *,unsigned long *,unsigned char *,bssl::Span<unsigned char>)", "bssl::SealRecordPrefixLen(ssl_st const*,unsigned long)", "bssl::SealRecordSuffixLen(ssl_st const*,unsigned long)", "bssl::SealRecord(ssl_st *,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char>,bssl::Span<unsigned char const>)", "OPENSSL_free", "OPENSSL_malloc", "BUF_MEM_append", "CBB_add_asn1_bool", "CBB_add_asn1_octet_string", "CBS_get_asn1_bool", "ERR_SAVE_STATE_free", "ERR_restore_state", "ERR_save_state", "sk_pop_free_ex", "EVP_AEAD_CTX_aead", "EVP_AEAD_CTX_tag_len", "EVP_AEAD_CTX_zero", "EVP_aead_aes_128_gcm_tls13", "EVP_aead_aes_256_gcm_tls13", "sk_delete", "sk_dup", "sk_sort", "BN_num_bytes", "HRSS_decap", "HRSS_encap", "HRSS_generate_key", "HRSS_marshal_public_key", "HRSS_parse_public_key", "EVP_PKEY_set1_RSA", "strcmp", "lh_retrieve_key", "BIO_read_asn1", "BIO_write_all", "X509_STORE_CTX_zero", "CRYPTO_tls1_prf", "EVP_CIPHER_iv_length"]}, {"vendor": "conquest", "uuid": "62dbf2d0-3966-4176-a043-a6ab14d2d3d3", "main_db": "vendors/conquest/62dbf2d0-3966-4176-a043-a6ab14d2d3d3/057e213821e41fabf2230a38a8defda3.diaout", "diff_db": "vendors/conquest/62dbf2d0-3966-4176-a043-a6ab14d2d3d3/baseline.diaout", "added_cnt": 8, "removed_cnt": 0, "added_funcs": ["bssl::DTLS1_STATE * bssl::New<bssl::DTLS1_STATE>()", "bssl::Array<unsigned char>::CopyFrom(bssl::Span<unsigned char const>)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,int,bool &,decltype(nullptr)>(int,bool &,decltype(nullptr) &&)", "bssl::SSLAEADContext * bssl::New<bssl::SSLAEADContext,unsigned short &,int &,ssl_cipher_st const*&>(unsigned short &,int &,ssl_cipher_st const*&)", "bssl::SSL_SESSION_parse_octet_string(cbs_st *,unsigned char **,unsigned long *,unsigned int)", "bssl::Array<int>::Init(unsigned long)", "bssl::Array<unsigned short>::Init(unsigned long)", "__android_log_print"], "removed_funcs": []}]